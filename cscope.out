cscope 15 /home/achin/course/networks/tcp               0000518801
	@cbuffer.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

5 
	~"cbuf„r.h
"

7 
cbuf_t
* 
	$cbuf_√w
(
size
) {

8 
cbuf_t
* 
buf
 = 
	`mÆloc
((cbuf_t));

9 
	`as£π
(
buf
);

10 
	`as£π
(0 < 
size
);

12 
buf
->
d©a
 = 
	`mÆloc
(
size
);

13 
	`as£π
(
buf
->
d©a
);

15 
buf
->
size
 = size;

17  
buf
;

18 
	}
}

20 
	$cbuf_de°roy
(
cbuf_t
* 
buf
) {

21 
	`‰ì
(
buf
->
d©a
);

22 
	`‰ì
(
buf
);

23 
	}
}

25 
	$cbuf_put
(
cbuf_t
* 
buf
, 
ödex
, 
vÆue
) {

26 
ªtvÆ
;

28 
	`as£π
(0 <
ödex
);

30 
ªtvÆ
 = 
buf
->
d©a
[
	`cbuf_mod
(buf, 
ödex
)];

31 
buf
->
d©a
[
	`cbuf_mod
(buf, 
ödex
)] = 
vÆue
;

33  
ªtvÆ
;

34 
	}
}

36 
	$cbuf_gë
(
cbuf_t
* 
buf
, 
ödex
) {

37 
	`as£π
(0 <
ödex
);

38  
buf
->
d©a
[
	`cbuf_mod
(buf, 
ödex
)];

39 
	}
}

41 
	$cbuf_put_ønge
(
cbuf_t
* 
buf
, * 
buf„r
, 
°¨t
, 
Àn
) {

42 
i
, 
˙t
 = 0;

44 
	`as£π
(0 <
°¨t
);

45 
	`as£π
(0 <
Àn
);

46 
	`as£π
(
Àn
 <
	`cbuf_size
(
buf
));

48 
	`cbuf_ôî©e_ödi˚s
(
buf
, 
°¨t
, 
Àn
, 
i
) {

49 
	`cbuf_put
(
buf
, 
i
, 
buf„r
[
˙t
++]);

50 } 
	`cbuf_ôî©e_ödi˚s_íd
();

53 
	}
}

55 * 
	$cbuf_gë_ønge
(
cbuf_t
* 
buf
, 
°¨t
, 
Àn
) {

56 * 
buf„r
;

57 
v
;

58 
˙t
 = 0;

60 
	`as£π
(0 <
°¨t
);

61 
	`as£π
(0 <
Àn
);

62 
	`as£π
(
Àn
 <
	`cbuf_size
(
buf
));

64 
buf„r
 = 
	`mÆloc
(
Àn
);

65 
	`as£π
(
buf„r
);

67 
	`cbuf_ôî©e_vÆues
(
buf
, 
°¨t
, 
Àn
, 
v
) {

68 
buf„r
[
˙t
++] = 
v
;

69 } 
	`cbuf_ôî©e_vÆues_íd
();

71  
buf„r
;

72 
	}
}

74 
	$cbuf_¥öt
(
cbuf_t
* 
buf
) {

75 
c
;

76 
	`¥ötf
("[...] ");

77 
	`cbuf_ôî©e_vÆues
(
buf
, 0, 
	`cbuf_size
(buf), 
c
) {

78 
	`¥ötf
("%¯", 
c
);

79 } 
	`cbuf_ôî©e_vÆues_íd
();

80 
	`¥ötf
("[...]\n");

81 
	}
}

	@cbuffer.h

1 #i‚de‡
CBUFFER_H


2 
	#CBUFFER_H


	)

4 
	~<as£π.h
>

7 * 
	md©a
;

8 
	msize
;

9 } 
	tcbuf_t
;

12 
cbuf_t
* 
cbuf_√w
(
size
);

13 
cbuf_de°roy
(
cbuf_t
* 
buf
);

16 
cbuf_put
(
cbuf_t
* 
buf
, 
ödex
, 
vÆue
);

17 
cbuf_gë
(
cbuf_t
* 
buf
, 
ödex
);

18 
cbuf_put_ønge
(
cbuf_t
* 
buf
, * 
buf„r
, 
°¨t
, 
Àn
);

19 * 
cbuf_gë_ønge
(
cbuf_t
* 
buf
, 
°¨t
, 
Àn
);

20 
cbuf_¥öt
(
cbuf_t
* 
buf
);

22 
	#cbuf_size
(
c
Ë((c)->
size
)

	)

23 
	#cbuf_mod
(
c
,
n
Ë(“Ë% 
	`cbuf_size
(c))

	)

24 
	#cbuf_add
(
c
,
i
,
n
Ë
	`cbuf_mod
(c,i+n)

	)

25 
	#cbuf_sub
(
c
,
i
,
n
Ë
	`cbuf_mod
(c,i-
a
)

	)

26 
	#cbuf_öc
(
c
,
i
Ë((i)=
	`cbuf_add
(c,i,1))

	)

27 
	#cbuf_dec
(
c
,
i
Ë((i)=
	`cbuf_sub
(c,i,1))

	)

28 
	#cbuf_cmp
(
c
,
a
,
b
Ë((
	`cbuf_mod
(c,a) == cbuf_mod(c,b)) ? 0 : \

29 (((
	`cbuf_mod
(
c
,
a
Ë< cbuf_mod(c,
b
)Ë&& ((cbuf_mod(c,b))-(cbuf_mod(c,a)Ë< 
	`cbuf_size
(c)/2)) \

30 || ((
	`cbuf_mod
(
c
,
a
Ë> cbuf_mod(c,
b
)Ë&& ((cbuf_mod(c,a))-(cbuf_mod(c,b)Ë> 
	`cbuf_size
(c)/2))Ë? -1 : 1)

	)

31 
	#cbuf_…
(
c
,
a
,
b
Ë(
	`cbuf_cmp
(c,a,bË=-1)

	)

32 
	#cbuf_gt
(
c
,
a
,
b
Ë(
	`cbuf_cmp
(c,a,bË=1Ë

	)

33 
	#cbuf_eq
(
c
,
a
,
b
Ë(
	`cbuf_cmp
(c,a,bË=0)

	)

34 
	#cbuf_…e
(
c
,
a
,
b
Ë(
	`cbuf_…
(c,a,bË|| 
	`cbuf_eq
(c,a,b))

	)

35 
	#cbuf_gã
(
c
,
a
,
b
Ë(
	`cbuf_gt
(c,a,bË|| 
	`cbuf_eq
(c,a,b))

	)

36 
	#cbuf_ö˛_c⁄èös
(
c
,
a
,
b
,
n
Ë(
	`cbuf_…e
(c,a,nË&& 
	`cbuf_gã
(c,b,n))

	)

37 
	#cbuf_ex˛_c⁄èös
(
c
,
a
,
b
,
n
Ë(
	`cbuf_…
(c,a,nË&& 
	`cbuf_gt
(c,b,n))

	)

38 
	#cbuf_btm_c⁄èös
(
c
,
a
,
b
,
n
Ë(
	`cbuf_…e
(c,a,nË&& 
	`cbuf_gt
(c,b,n))

	)

39 
	#cbuf_t›_c⁄èös
(
c
,
a
,
b
,
n
Ë(
	`cbuf_…
(c,a,nË&& 
	`cbuf_gã
(c,b,n))

	)

41 
	#cbuf_lo›
(
c
,
°¨t
,
Àn
,
i
,
v
Ëdÿ{ 
__cbuf_c
 = 0; \

42 
i
=
	`cbuf_mod
(
c
,
°¨t
),
v
=
	`cbuf_gë
(c,i); 
__cbuf_c
 < 
Àn
; 
	`cbuf_öc
(c,i),v=cbuf_gë(c,i), __cbuf_c++)

	)

43 
	#cbuf_lo›_íd
(Ë} 0)

	)

44 
	#cbuf_ôî©e_ödi˚s
(
c
,
°¨t
,
Àn
,
v¨
Ëdÿ{ 
__cbuf_v
; 
	`cbuf_lo›
(c,°¨t,Àn,v¨,__cbuf_v)

	)

45 
	#cbuf_ôî©e_ödi˚s_íd
(Ë
	`cbuf_lo›_íd
(); } 0)

	)

46 
	#cbuf_ôî©e_vÆues
(
c
,
°¨t
,
Àn
,
v¨
Ëdÿ{ 
__cbuf_i
; 
	`cbuf_lo›
(c,°¨t,Àn,__cbuf_i,v¨)

	)

47 
	#cbuf_ôî©e_vÆues_íd
(Ë
	`cbuf_lo›_íd
(); } 0)

	)

	@fancy_display.c

1 
	~<as£π.h
>

2 
	~<°rög.h
>

3 
	~<°dlib.h
>

4 
	~<±hªad.h
>

5 
	~<î∫o.h
>

7 
	~"Áncy_di•œy.h
"

9 
	~"t˝.h
"

10 
	~"v™_drivî.h
"

11 
	~"t˝°©e.h
"

13 
cur£s_out_t
 
	gouçut
;

15 
	$upd©e_lök_löe
(
löe
, 
°©e
) {

17 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

19 
	`wmove
(
ouçut
.
lök_wö
, 2+
löe
,1);

20 
	`w˛π€ﬁ
(
ouçut
.
lök_wö
);

22 i‡(
°©e
 == 0) {

23 
	`w©å⁄
(
ouçut
.
lök_wö
, 
	`COLOR_PAIR
(
LINK_DOWN_COLOR
));

24 
	`mvw¥ötw
(
ouçut
.
lök_wö
, 2+
löe
, 1, "%d: Down",line);

25 
	`w©å⁄
(
ouçut
.
lök_wö
, 
	`COLOR_PAIR
(
LINK_DOWN_COLOR
));

27 
	`w©å⁄
(
ouçut
.
lök_wö
, 
	`COLOR_PAIR
(
LINK_UP_COLOR
));

28 
	`mvw¥ötw
(
ouçut
.
lök_wö
, 2+
löe
, 1, "%d: Up",Üine);

29 
	`w©å⁄
(
ouçut
.
lök_wö
, 
	`COLOR_PAIR
(
LINK_UP_COLOR
));

31 
	`upd©e_∑√ls
(); 
	`doupd©e
();

33 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

34 
	}
}

36 
	$s¸ﬁl_logwö
(
i
) {

37 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

38 
i
++;

54 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

55 
	}
}

57 
	$∆og_£t_míu
(c⁄° *
msg
, ...) {

59 
va_li°
 
¨gs
;

60 
	`va_°¨t
(
¨gs
, 
msg
);

61 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

62 
	`wmove
(
ouçut
.
míu_wö
,0,0);

63 
	`vw¥ötw
(
ouçut
.
míu_wö
, 
msg
, 
¨gs
);

64 
	`upd©e_∑√ls
(); 
	`doupd©e
();

65 
	`va_íd
(
¨gs
);

66 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

67 
	}
}

71 
	$di•œy_msg
(*
msg
, ...) {

72 
va_li°
 
¨gs
;

74 
WINDOW
 *
my_f‹m_wö
;

75 
PANEL
 *
my_f‹m_∑n
;

77 
c
=0;

78 
n
 = 0;

79 
msg
[
c
] != 0) {

80 i‡(
msg
[++
c
] ='\n'Ë
n
++;

83 
tmp
[1024];

85 
	`va_°¨t
(
¨gs
,
msg
);

87 
	`v¢¥ötf
(
tmp
, 1024, 
msg
, 
¨gs
);

88 
l
 = 
	`°æí
(
tmp
);

91 
my_f‹m_wö
 = 
	`√wwö
(3+
n
, 2 + 
l
, 
LINES
/2 - (3/2), 
COLS
/2 - ((l+2)/2));

92 
	`Àaveok
(
my_f‹m_wö
, 
FALSE
);

93 
my_f‹m_∑n
 = 
	`√w_∑√l
(
my_f‹m_wö
);

94 
	`key∑d
(
my_f‹m_wö
, 
TRUE
);

95 
	`wbkgd
(
my_f‹m_wö
, 
	`COLOR_PAIR
(
DEFAULT_COLOR
));

98 
	`box
(
my_f‹m_wö
, 0, 0);

99 
	`wmove
(
my_f‹m_wö
, 1, 1);

100 
	`vw¥ötw
(
my_f‹m_wö
,
msg
,
¨gs
);

103 
	`move
(0,
COLS
);

104 
	`wmove
(
my_f‹m_wö
,0,0);

105 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

106 
	`upd©e_∑√ls
(); 
	`doupd©e
();

107 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

110 
	`wgëch
(
my_f‹m_wö
);

113 
	`dñ_∑√l
(
my_f‹m_∑n
);

114 
	`dñwö
(
my_f‹m_wö
);

115 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

116 
	`upd©e_∑√ls
(); 
	`doupd©e
();

117 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

118 
	`va_íd
(
¨gs
);

119 
	}
}

123 
	$gë_ãxt
(*
msg
, * 
ªtu∫_
, 
Àn
) {

125 
FIELD
 *
fõld
[2];

126 
FORM
 *
my_f‹m
;

127 
rows
, 
cﬁs
,
ch
, 
num
;

128 
l
 = 
	`°æí
(
msg
);

129 
WINDOW
 *
my_f‹m_wö
;

130 
PANEL
 *
my_f‹m_∑n
;

131 *
buff
 = 
NULL
;

135 
fõld
[0] = 
	`√w_fõld
(6, 42, 1, 1, 0, 0);

136 
fõld
[1] = 
NULL
;

139 
	`£t_fõld_back
(
fõld
[0], 
A_UNDERLINE
);

140 
	`fõld_›ts_off
(
fõld
[0], 
O_AUTOSKIP
);

144 
my_f‹m
 = 
	`√w_f‹m
(
fõld
);

148 
	`sˇÀ_f‹m
(
my_f‹m
, &
rows
, &
cﬁs
);

151 
my_f‹m_wö
 = 
	`√wwö
(
rows
 + 4, 
cﬁs
 + 4, 
LINES
/2 - (rows/2), 
COLS
/2 - (cols/2));

152 
	`wbkgd
(
my_f‹m_wö
, 
	`COLOR_PAIR
(
DEFAULT_COLOR
));

153 
my_f‹m_∑n
 = 
	`√w_∑√l
(
my_f‹m_wö
);

154 
	`key∑d
(
my_f‹m_wö
, 
TRUE
);

157 
	`£t_f‹m_wö
(
my_f‹m
, 
my_f‹m_wö
);

158 
	`£t_f‹m_sub
(
my_f‹m
, 
	`dîwö
(
my_f‹m_wö
, 
rows
, 
cﬁs
, 2, 2));

161 
	`box
(
my_f‹m_wö
, 0, 0);

162 
	`mvw¥ötw
(
my_f‹m_wö
, 1,1,
msg
);

165 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

166 
	`po°_f‹m
(
my_f‹m
);

167 
	`upd©e_∑√ls
(); 
	`doupd©e
();

168 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

171 (
ch
 = 
	`wgëch
(
my_f‹m_wö
)) != '`')

172 { 
ch
)

174 
KEY_LEFT
:

175 
	`f‹m_drivî
(
my_f‹m
, 
REQ_LEFT_CHAR
);

177 
KEY_RIGHT
:

178 
	`f‹m_drivî
(
my_f‹m
, 
REQ_RIGHT_CHAR
);

180 
KEY_HOME
:

181 
	`f‹m_drivî
(
my_f‹m
, 
REQ_BEG_LINE
);

183 
KEY_END
:

184 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

186 
KEY_BACKSPACE
:

187 
	`f‹m_drivî
(
my_f‹m
, 
REQ_DEL_PREV
);

189 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

194 
	`f‹m_drivî
(
my_f‹m
, 
ch
);

195 
	`f‹m_drivî
(
my_f‹m
, 
REQ_VALIDATION
);

201 
buff
 = 
	`fõld_buf„r
(
fõld
[0],0);

202 
	`as£π
(
buff
);

204 
i
 = 0;

205 
°¨t
,
íd
;

206 
i
 = 0; i < 252; i++) {

207 i‡(
buff
[
i
] !' 'Ë{ 
°¨t
 = i; ; }

209 
i
 = 251; i >= 0; i--) {

210 i‡(
buff
[
i
] !' '){ 
íd
 = i+1; ; }

212 
	`mem£t
(
ªtu∫_
,0,
Àn
);

213 
	`mem˝y
(
ªtu∫_
, 
buff
+
°¨t
, 
íd
-start);

218 
	`u≈o°_f‹m
(
my_f‹m
);

219 
	`‰ì_f‹m
(
my_f‹m
);

220 
	`‰ì_fõld
(
fõld
[0]);

221 
	`dñ_∑√l
(
my_f‹m_∑n
);

222 
	`dñwö
(
my_f‹m_wö
);

223 
	`upd©e_∑√ls
(); 
	`doupd©e
();

225  
íd
-
°¨t
;

226 
	}
}

229 
	$ã°_t˝_míu_upd©e
() {

230 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

232 
ITEM
 *
curôem
 = 
	`cuºít_ôem
(
ouçut
.
t˝_míu
);

233 
t˝_sockë_t
 *
sock
 = (t˝_sockë_t*Ë
	`ôem_u£Ωå
(
curôem
);

235 
	`u≈o°_míu
(
ouçut
.
t˝_míu
);

237 *
√w_ãxt
 = 
	`mÆloc
(128);

238 
	`•rötf
(
√w_ãxt
, "State: %sÜport:%dÑport:%dÖeer:%d seqnum:%dácknum:%d",

239 
	`t˝m_°r°©e
(
	`t˝m_°©e
(
sock
->
machöe
)),

240 
sock
->
loˇl_p‹t
,

241 
sock
->
ªmŸe_p‹t
,

242 
sock
->
ªmŸe_node
,

243 
sock
->
£q_num
,

244 
sock
->
ack_num


247 
	`‰ì
((*)
curôem
->
des¸ùti⁄
.
°r
);

248 
curôem
->
des¸ùti⁄
.
°r
=
√w_ãxt
;

249 
curôem
->
des¸ùti⁄
.
Àngth
=
	`°æí
(
√w_ãxt
);

251 
	`po°_míu
(
ouçut
.
t˝_míu
);

253 
	`ªdøwwö
(
ouçut
.
míu_wö
);

254 
	`upd©e_∑√ls
(); 
	`doupd©e
();

255 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

257 
	}
}

259 
	$t˝_èbÀ_√w
(
ù_node_t
 *
node
, 
fd
) {

261 
ouçut
.
t˝_míu_num_ôems
++;

262 
i
, 
ªtvÆ
;

263 
ITEM
 **
√w_ôems
;

265 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

268 
	`u≈o°_míu
(
ouçut
.
t˝_míu
);

269 
√w_ôems
 = (
ITEM
**)
	`ˇŒoc
(
ouçut
.
t˝_míu_num_ôems
+1,(ITEM*));

270 
i
 = 0; i < 
ouçut
.
t˝_míu_num_ôems
 - 1; ++i) {

272 
√w_ôems
[
i
] = 
ouçut
.
t˝_ôems
[i];

277 *
txt
 = 
	`mÆloc
(8);

278 
	`mem£t
(
txt
,0,8);

279 
	`•rötf
(
txt
,"fd:%d",
fd
);

280 *
desc
 = 
	`mÆloc
(256);

281 
	`°r˝y
(
desc
,"This isáÇew socket ");

282 
√w_ôems
[
ouçut
.
t˝_míu_num_ôems
-1] = 
	`√w_ôem
(
txt
, 
desc
);

283 
	`£t_ôem_u£Ωå
(
√w_ôems
[
ouçut
.
t˝_míu_num_ôems
 - 1],(*)
node
->
sockë_èbÀ
[
fd
]);

285 i‡((
ªtvÆ
 = 
	`£t_míu_ôems
(
ouçut
.
t˝_míu
, 
√w_ôems
)Ë!
E_OK
) {

286 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

287 
	`∆og
(
MSG_ERROR
,"tcp_table_new", "Can't updateÅheÅcpÅable withÅhisÇew socket");

288 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

291 
ouçut
.
t˝_ôems
 = 
√w_ôems
;

292 
	`po°_míu
(
ouçut
.
t˝_míu
);

293 
	`upd©e_∑√ls
(); 
	`doupd©e
();

294 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

295 
	}
}

297 
	$upd©e_t˝_èbÀ
(
t˝_sockë_t
 *
sock
) {

298 
	`as£π
(
sock
);

300 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

304 
i
 = 0;

305 
ouçut
.
t˝_ôems
[
i
] !
NULL
) {

306 i‡(
	`ôem_u£Ωå
(
ouçut
.
t˝_ôems
[
i
]Ë=(*)
sock
) {

309 *
√w_ãxt
 = 
	`mÆloc
(128);

311 
	`•rötf
(
√w_ãxt
, "State: %sÜport:%dÑport:%dÖeer:%d seqnum:%dácknum:%d",

312 
	`t˝m_°r°©e
(
	`t˝m_°©e
(
sock
->
machöe
)),

313 
sock
->
loˇl_p‹t
,

314 
sock
->
ªmŸe_p‹t
,

315 
sock
->
ªmŸe_node
,

316 
sock
->
£q_num
,

317 
sock
->
ack_num


320 
	`‰ì
((*)
ouçut
.
t˝_ôems
[
i
]->
des¸ùti⁄
.
°r
);

321 
ouçut
.
t˝_ôems
[
i
]->
des¸ùti⁄
.
°r
=
√w_ãxt
;

322 
ouçut
.
t˝_ôems
[
i
]->
des¸ùti⁄
.
Àngth
=
	`°æí
(
√w_ãxt
);

324 
	`u≈o°_míu
(
ouçut
.
t˝_míu
);

325 
	`po°_míu
(
ouçut
.
t˝_míu
);

327 
	`ªdøwwö
(
ouçut
.
míu_wö
);

328 
	`upd©e_∑√ls
(); 
	`doupd©e
();

331 
i
++;

335 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

337 
	}
}

340 
	$gë_numbî
(*
msg
) {

342 
FIELD
 *
fõld
[2];

343 
FORM
 *
my_f‹m
;

344 
rows
, 
cﬁs
,
ch
, 
num
;

345 
l
 = 
	`°æí
(
msg
);

346 
WINDOW
 *
my_f‹m_wö
;

347 
PANEL
 *
my_f‹m_∑n
;

348 *
buff
 = 
NULL
;

351 
fõld
[0] = 
	`√w_fõld
(1, 5, 1, 1, 0, 0);

352 
fõld
[1] = 
NULL
;

355 
	`£t_fõld_back
(
fõld
[0], 
A_UNDERLINE
);

356 
	`fõld_›ts_off
(
fõld
[0], 
O_AUTOSKIP
);

360 
my_f‹m
 = 
	`√w_f‹m
(
fõld
);

362 
	`£t_fõld_ty≥
(
fõld
[0], 
TYPE_INTEGER
);

364 
	`sˇÀ_f‹m
(
my_f‹m
, &
rows
, &
cﬁs
);

367 
my_f‹m_wö
 = 
	`√wwö
(
rows
 + 4, 
l
 + 2, 
LINES
/2 - (rows/2), 
COLS
/2 - (
cﬁs
/2));

368 
	`wbkgd
(
my_f‹m_wö
, 
	`COLOR_PAIR
(
DEFAULT_COLOR
));

369 
my_f‹m_∑n
 = 
	`√w_∑√l
(
my_f‹m_wö
);

370 
	`key∑d
(
my_f‹m_wö
, 
TRUE
);

373 
	`£t_f‹m_wö
(
my_f‹m
, 
my_f‹m_wö
);

374 
	`£t_f‹m_sub
(
my_f‹m
, 
	`dîwö
(
my_f‹m_wö
, 
rows
, 
cﬁs
, 2, 2));

377 
	`box
(
my_f‹m_wö
, 0, 0);

378 
	`mvw¥ötw
(
my_f‹m_wö
, 1,1,
msg
);

381 
	`po°_f‹m
(
my_f‹m
);

382 
	`upd©e_∑√ls
(); 
	`doupd©e
();

385 (
ch
 = 
	`wgëch
(
my_f‹m_wö
)) != '`')

386 { 
ch
)

388 
KEY_LEFT
:

389 
	`f‹m_drivî
(
my_f‹m
, 
REQ_LEFT_CHAR
);

391 
KEY_RIGHT
:

392 
	`f‹m_drivî
(
my_f‹m
, 
REQ_RIGHT_CHAR
);

394 
KEY_HOME
:

395 
	`f‹m_drivî
(
my_f‹m
, 
REQ_BEG_LINE
);

397 
KEY_END
:

398 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

400 
KEY_BACKSPACE
:

401 
	`f‹m_drivî
(
my_f‹m
, 
REQ_DEL_PREV
);

402 
	`f‹m_drivî
(
my_f‹m
, 
REQ_VALIDATION
);

403 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

408 
	`f‹m_drivî
(
my_f‹m
, 
ch
);

409 
	`f‹m_drivî
(
my_f‹m
, 
REQ_VALIDATION
);

410 
	`f‹m_drivî
(
my_f‹m
, 
REQ_END_LINE
);

415 
buff
 = 
	`fõld_buf„r
(
fõld
[0],0);

416 
	`as£π
(
buff
);

418 
	`ssˇnf
(
buff
,"%d", &
num
);

421 
	`u≈o°_f‹m
(
my_f‹m
);

422 
	`‰ì_f‹m
(
my_f‹m
);

423 
	`‰ì_fõld
(
fõld
[0]);

424 
	`dñ_∑√l
(
my_f‹m_∑n
);

425 
	`dñwö
(
my_f‹m_wö
);

426 
	`upd©e_∑√ls
(); 
	`doupd©e
();

428  
num
;

429 
	}
}

431 
	$swôch_to_èb
(
t
) {

432 
max_size
 = 0;

433 
tŸÆ_èbs
 = 0;

434 
ouçut
.
èbs
[
tŸÆ_èbs
] !
NULL
) {

435 i‡(
	`°æí
(
ouçut
.
èbs
[
tŸÆ_èbs
]Ë> 
max_size
) {

436 
max_size
 = 
	`°æí
(
ouçut
.
èbs
[
tŸÆ_èbs
]);

438 
tŸÆ_èbs
++;

441 
èb_width
 = 
max_size
 + 2;

446 
	`mvwvlöe
(
ouçut
.
èb_wö
, 1,0,0,3);

447 
	`mvwhlöe
(
ouçut
.
èb_wö
, 2,0,0,
COLS
-12);

448 
	`mvwaddch
(
ouçut
.
èb_wö
, 2,0,
ACS_LTEE
);

450 
	`mvwhlöe
(
ouçut
.
èb_wö
, 0, 0, 0, 11);

451 
	`mvwaddch
(
ouçut
.
èb_wö
, 0,0, 
ACS_ULCORNER
);

452 
	`mvwaddch
(
ouçut
.
èb_wö
, 0,5, 
ACS_TTEE
);

453 
	`mvwaddch
(
ouçut
.
èb_wö
, 2,5, 
ACS_BTEE
);

454 
	`mvwaddch
(
ouçut
.
èb_wö
, 0,11, 
ACS_URCORNER
);

455 
	`mvwaddch
(
ouçut
.
èb_wö
, 2,11, 
ACS_BTEE
);

457 
	`mvwaddch
(
ouçut
.
èb_wö
, 1, 5, 
ACS_VLINE
);

458 
	`mvwaddch
(
ouçut
.
èb_wö
, 1, 11, 
ACS_VLINE
);

465 
i
;

466 
i
 = 0; i < 
tŸÆ_èbs
; i++) {

468 i‡(
i
 =
t
Ë
	`w©å⁄
(
ouçut
.
èb_wö
, 
A_BOLD
 | 
A_UNDERLINE
);

469 
	`mvw¥ötw
(
ouçut
.
èb_wö
, 1,1+(
i
*
èb_width
)," %†",ouçut.
èbs
[i]);

470 i‡(
i
 =
t
Ë
	`w©åoff
(
ouçut
.
èb_wö
, 
A_BOLD
 | 
A_UNDERLINE
);

474 
ouçut
.
t›èb
 = 
t
;

475 
	}
}

477 
	$öô_di•œy
(
u£_cur£s
) {

479 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

481 
ouçut
.
u£_cur£s
 = use_curses;

482 
	`±hªad_muãx_öô
(&
ouçut
.
lock
,0);

483 
ouçut
.
èbs
[0] = "IP";

484 
ouçut
.
èbs
[1] = "TCP";

485 
ouçut
.
èbs
[2] = 
NULL
;

488 i‡(
u£_cur£s
) {

489 
	`öôs¸
();

490 
	`cbªak
();

491 
	`n€cho
();

492 
	`curs_£t
(0);

493 
	`Àaveok
(
°ds¸
, 
FALSE
);

494 
	`key∑d
(
°ds¸
, 
TRUE
);

496 
ouçut
.
logwö_s¸ﬁl
 = 0;

498 
ouçut
.
log_wö
 = 
	`√wwö
(2*
LINES
/3, 
COLS
, LINES/3, 0);

499 
	`mvwhlöe
(
ouçut
.
log_wö
,0,0,0,
COLS
);

500 
	`mvwaddch
(
ouçut
.
log_wö
,0,0,
ACS_LLCORNER
);

501 
ouçut
.
log_∑n
 = 
	`√w_∑√l
(ouçut.
log_wö
);

502 
	`s¸ﬁlok
(
ouçut
.
log_wö
,1);

504 
	`∆og
(
MSG_LOG
, "info","ncurses interface started up (%s)","test");

506 i‡(
	`has_cﬁ‹s
(Ë=
FALSE
) {

507 
	`∆og
(
MSG_LOG
, "info","No color support onÅhisÅerminal");

509 
	`∆og
(
MSG_LOG
, "info","Using colors");

510 
	`°¨t_cﬁ‹
();

511 
	`öô_∑ú
(
DEFAULT_COLOR
, 
COLOR_WHITE
, 
COLOR_BLACK
);

512 
	`öô_∑ú
(
MSG_LOG_COLOR
, 
COLOR_CYAN
, 
COLOR_BLACK
);

513 
	`öô_∑ú
(
MENU_COLOR
, 
COLOR_WHITE
, 
COLOR_BLUE
);

514 
	`öô_∑ú
(
MSG_ERROR_COLOR
, 
COLOR_RED
, 
COLOR_BLACK
);

515 
	`öô_∑ú
(
MSG_WARNING_COLOR
, 
COLOR_YELLOW
, 
COLOR_BLACK
);

516 
	`öô_∑ú
(
LINK_DOWN_COLOR
, 
COLOR_RED
, 
COLOR_BLACK
);

517 
	`öô_∑ú
(
LINK_UP_COLOR
, 
COLOR_GREEN
, 
COLOR_BLACK
);

521 
	`wbkgd
(
°ds¸
,
	`COLOR_PAIR
(
DEFAULT_COLOR
));

522 
	`ªdøwwö
(
°ds¸
);

524 
ouçut
.
míu_wö
 = 
	`√wwö
(1, 
COLS
, 0,0);

525 
ouçut
.
míu_∑n
 = 
	`√w_∑√l
(ouçut.
míu_wö
);

526 
	`wbkgd
(
ouçut
.
míu_wö
, 
	`COLOR_PAIR
(
MENU_COLOR
));

527 
	`w©å⁄
(
ouçut
.
míu_wö
, 
	`COLOR_PAIR
(
MENU_COLOR
));

529 
ouçut
.
lök_wö
 = 
	`√wwö
(
LINES
/3, 12, 1, 
COLS
-12);

530 
ouçut
.
lök_∑n
 = 
	`√w_∑√l
(ouçut.
lök_wö
);

532 
	`wbkgd
(
ouçut
.
lök_wö
, 
	`COLOR_PAIR
(
DEFAULT_COLOR
));

533 
	`wbkgd
(
ouçut
.
log_wö
, 
	`COLOR_PAIR
(
DEFAULT_COLOR
));

534 
	`ªdøwwö
(
ouçut
.
log_wö
);

535 
	`ªdøwwö
(
ouçut
.
lök_wö
);

538 
	`wb‹dî
(
ouçut
.
lök_wö
,0,' ',' ',0,
ACS_VLINE
,' ',
ACS_BTEE
,' ');

539 
	`mvw¥ötw
(
ouçut
.
lök_wö
, 0,1,"Link State\n");

540 
	`wmove
(
ouçut
.
lök_wö
,0,0);

542 
ouçut
.
èb_wö
 = 
	`√wwö
(
LINES
/3-1, 
COLS
-12, 1,0);

543 
ouçut
.
èb_∑n
 = 
	`√w_∑√l
(ouçut.
èb_wö
);

545 
	`mvwvlöe
(
ouçut
.
èb_wö
,0,0,0,
LINES
/3 -1);

546 
	`swôch_to_èb
(1);

549 
ouçut
.
πabÀ_wö
 = 
	`√wwö
(
LINES
/3-1-3, 
COLS
-12-1, 4,1);

550 
ouçut
.
πabÀ_∑n
 = 
	`√w_∑√l
(ouçut.
πabÀ_wö
);

551 
	`Àaveok
(
ouçut
.
πabÀ_wö
, 
FALSE
);

553 
	`mvw¥ötw
(
ouçut
.
πabÀ_wö
,0,1,"rtable window");

555 
ouçut
.
t˝_wö
 = 
	`√wwö
(
LINES
/3-1-3, 
COLS
-12-1, 4,1);

556 
ouçut
.
t˝_∑n
 = 
	`√w_∑√l
(ouçut.
t˝_wö
);

558 
	`mvw¥ötw
(
ouçut
.
t˝_wö
,0,1,"tcp window");

563 *
choi˚s
[] = {

568 (*)
NULL
,

571 
i
;

573 
ouçut
.
t˝_míu_num_ôems
=0;

575 
ouçut
.
t˝_ôems
 = (
ITEM
**)
	`ˇŒoc
(ouçut.
t˝_míu_num_ôems
+1,(ITEM*));

576 
i
 = 0; i < 
ouçut
.
t˝_míu_num_ôems
; ++i) {

577 
ouçut
.
t˝_ôems
[
i
] = 
	`√w_ôem
(
choi˚s
[i], "TCP info here... ... ...");

580 
ouçut
.
t˝_míu
 = 
	`√w_míu
((
ITEM
 **)ouçut.
t˝_ôems
);

583 
	`key∑d
(
ouçut
.
t˝_wö
 ,
TRUE
);

586 
	`£t_míu_wö
(
ouçut
.
t˝_míu
, ouçut.
t˝_wö
);

588 
	`£t_míu_f‹m©
(
ouçut
.
t˝_míu
, 5, 1);

591 
	`£t_míu_m¨k
(
ouçut
.
t˝_míu
, " > ");

593 
	`po°_míu
(
ouçut
.
t˝_míu
);

595 
	`ª‰esh
();

596 
	`upd©e_∑√ls
(); 
	`doupd©e
();

602 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

604 
	}
}

606 
	$gë_fd_‰om_míu
() {

607 
t˝_sockë_t
 *
sock
 = (t˝_sockë_t*Ë
	`ôem_u£Ωå
(
	`cuºít_ôem
(
ouçut
.
t˝_míu
));

608 i‡(
sock
 =
NULL
Ë -1;  sock->
fd
;

609 
	}
}

611 
	$h™dÀ_t˝_míu_öput
(
c
) {

612 i‡(
ouçut
.
t›èb
 != 1) ;

613 
c
) {

614 
KEY_DOWN
:

615 
	`míu_drivî
(
ouçut
.
t˝_míu
, 
REQ_DOWN_ITEM
);

617 
KEY_UP
:

618 
	`míu_drivî
(
ouçut
.
t˝_míu
, 
REQ_UP_ITEM
);

622 
t˝_sockë_t
 *
sock
 = (t˝_sockë_t*Ë
	`ôem_u£Ωå
(
	`cuºít_ôem
(
ouçut
.
t˝_míu
));

623 i‡(
sock
 !
NULL
) {

624 
	`di•œy_msg
("You ju° clicked sock %d", 
sock
->
fd
);

629 
	`upd©e_∑√ls
(); 
	`doupd©e
();

631 
	}
}

633 
	$show_rouã_èbÀ
() {

634 
	`t›_∑√l
(
ouçut
.
πabÀ_∑n
);

635 
	`swôch_to_èb
(0);

636 
	`upd©e_∑√ls
(); 
	`doupd©e
();

637 
	}
}

639 
	$show_t˝_èbÀ
() {

640 
	`t›_∑√l
(
ouçut
.
t˝_∑n
);

641 
	`swôch_to_èb
(1);

642 
	`upd©e_∑√ls
(); 
	`doupd©e
();

643 
	}
}

645 
	$˛ór_πabÀ_di•œy
() {

655 
	`wîa£
(
ouçut
.
πabÀ_wö
);

656 
	`wmove
(
ouçut
.
πabÀ_wö
,0 ,1);

658 
	`upd©e_∑√ls
(); 
	`doupd©e
();

659 
	}
}

661 
	$πabÀ_¥öt
–*
ãxt
, ...) {

662 
va_li°
 
¨gs
;

663 
	`va_°¨t
(
¨gs
, 
ãxt
);

664 
	`vw¥ötw
(
ouçut
.
πabÀ_wö
, 
ãxt
, 
¨gs
);

665 
	`w¥ötw
(
ouçut
.
πabÀ_wö
,"\n");

666 
	`upd©e_∑√ls
(); 
	`doupd©e
();

667 
	`va_íd
(
¨gs
);

668 
	}
}

669 
	$gë_key
() {

670  
	`wgëch
(
°ds¸
);

671 
	}
}

674 
	$∆og_s
(c⁄° *
wfûe
, 
wlöe
,
msg_ty≥
 
msg
, c⁄° *
¶ug
, *
ãxt
, ...) {

675 
c
 = 
ouçut
.
u£_cur£s
;

676 
WINDOW
 *
log
 = 
ouçut
.
log_wö
;

677 
va_li°
 
¨gs
;

678 
	`va_°¨t
(
¨gs
, 
ãxt
);

679 
	`±hªad_muãx_lock
(&
ouçut
.
lock
);

684 i‡(
c
) {

685 
cﬁ‹
;

686 i‡(
msg
 =
MSG_LOG
Ë
cﬁ‹
 = 
	`COLOR_PAIR
(
MSG_LOG_COLOR
);

687 i‡(
msg
 =
MSG_WARNING
Ë
cﬁ‹
 = 
	`COLOR_PAIR
(
MSG_WARNING_COLOR
);

688 i‡(
msg
 =
MSG_ERROR
Ë
cﬁ‹
 = 
	`COLOR_PAIR
(
MSG_ERROR_COLOR
);

690 
	`ws¸l
(
ouçut
.
log_wö
,ouçut.
logwö_s¸ﬁl
);

692 
löío
[5];

693 
löíﬁ
,
y
,
x
;

694 
	`as£π
(
log
);

696 
	`wmove
(
log
, (2*
LINES
/3)-1, 0);

698 
	`w©å⁄
(
log
, 
A_BOLD
);

699 
	`w¥ötw
(
log
,"[%s] ",
¶ug
);

700 
	`w©åoff
(
log
, 
A_BOLD
);

702 
	`w©å⁄
(
log
,
cﬁ‹
);

703 
	`vw¥ötw
(
log
, 
ãxt
, 
¨gs
);

705 
	`gëyx
(
log
,
y
,
x
);

706 
	`•rötf
(
löío
,"%d",
wlöe
);

707 
löíﬁ
 = 
	`°æí
(
wfûe
Ë+ såÀn(
löío
)+2;

708 
	`w©å_⁄
(
log
,
WA_DIM
,
NULL
);

709 
	`mvw¥ötw
(
log
,
y
,
COLS
-
löíﬁ
,"%s:%d",
wfûe
, 
wlöe
);

710 
	`w©å_off
(
log
,
WA_DIM
,
NULL
);

711 
	`wmove
(
log
,
y
,
COLS
-1);

713 
	`w¥ötw
(
log
,"\n");

715 
	`w©åoff
(
log
,
cﬁ‹
);

716 
	`mvwhlöe
(
log
,0,0,0,
COLS
);

717 
	`mvwaddch
(
ouçut
.
log_wö
,0,0,
ACS_LLCORNER
);

719 
	`ws¸l
(
ouçut
.
log_wö
, -ouçut.
logwö_s¸ﬁl
);

721 
	`upd©e_∑√ls
(); 
	`doupd©e
();

724 i‡(
msg
 =
MSG_LOG
) {

725 
	`¥ötf
("[%s] ", 
¶ug
);

726 
	`v¥ötf
(
ãxt
, 
¨gs
);

727 
	`¥ötf
("\n");

728 
	`fÊush
(
°dout
);

730 } i‡(
msg
 =
MSG_ERROR
) {

731 
	`¥ötf
("ERROR! [%s] ", 
¶ug
);

732 
	`v¥ötf
(
ãxt
, 
¨gs
);

733 
	`¥ötf
("\n");

734 
	`fÊush
(
°dout
);

735 } i‡(
msg
 =
MSG_WARNING
) {

736 
	`¥ötf
("WARNING [%s] ", 
¶ug
);

737 
	`v¥ötf
(
ãxt
, 
¨gs
);

738 
	`¥ötf
("\n");

739 
	`fÊush
(
°dout
);

744 
	`va_íd
(
¨gs
);

745 
	`±hªad_muãx_u∆ock
(&
ouçut
.
lock
);

747 
	}
}

	@fancy_display.h

1 #i‚de‡
__FANCY_DISPLAY_


2 
	#__FANCY_DISPLAY_


	)

4 
	~<cur£s.h
>

5 
	~<∑√l.h
>

6 
	~<míu.h
>

7 
	~<f‹m.h
>

8 
	~<±hªad.h
>

10 
	gt˝_sockë__
;

12 
	#∆og
(
m
,
s
,
t
,...Ë
	`∆og_s
(
__FILE__
,
__LINE__
,m,s,t,## 
__VA_ARGS__
)

	)

16 
	mu£_cur£s
;

17 
±hªad_muãx_t
 
	mlock
;

19 
WINDOW
 *
	mπabÀ_wö
;

20 
PANEL
 *
	mπabÀ_∑n
;

22 
WINDOW
 *
	mt˝_wö
;

23 
PANEL
 *
	mt˝_∑n
;

24 
ITEM
 **
	mt˝_ôems
;

25 
MENU
 *
	mt˝_míu
;

26 
	mt˝_míu_num_ôems
;

28 
WINDOW
 *
	mèb_wö
;

29 
PANEL
 *
	mèb_∑n
;

31 
WINDOW
 *
	mlog_wö
;

32 
PANEL
 *
	mlog_∑n
;

34 
WINDOW
 *
	mmíu_wö
;

35 
PANEL
 *
	mmíu_∑n
;

37 
WINDOW
 *
	mlök_wö
;

38 
PANEL
 *
	mlök_∑n
;

40 
	mlogwö_s¸ﬁl
;

42 *
	mèbs
[3];

44 
	mt›èb
;

46 } 
	tcur£s_out_t
;

49 
	mMSG_LOG
,

50 
	mMSG_WARNING
,

51 
	mMSG_ERROR
,

52 } 
	tmsg_ty≥
;

54 
	#MENU_COLOR
 2

	)

56 
	#MSG_LOG_COLOR
 10

	)

57 
	#MSG_WARNING_COLOR
 11

	)

58 
	#MSG_ERROR_COLOR
 12

	)

59 
	#DEFAULT_COLOR
 13

	)

61 
	#LINK_DOWN_COLOR
 14

	)

62 
	#LINK_UP_COLOR
 15

	)

64 
	#USE_CURSES
 1

	)

65 
	#NO_USE_CURSES
 0

	)

67 
öô_di•œy
(
u£_cur£s
);

69 
∆og_s
(c⁄° *
wfûe
, 
wlöe
,
msg_ty≥
 
msg
, c⁄° *
¶ug
, *
ãxt
, ...);

70 
gë_key
();

71 
gë_numbî
(*);

72 
di•œy_msg
(*
msg
, ...);

73 
upd©e_lök_löe
(, );

74 
s¸ﬁl_logwö
();

75 
∆og_£t_míu
(c⁄° *
msg
, ...);

76 
show_rouã_èbÀ
();

77 
show_t˝_èbÀ
();

78 
πabÀ_¥öt
–*
ãxt
, ...);

79 
˛ór_πabÀ_di•œy
();

80 
gë_ãxt
(*
msg
, * 
buf
, 
Àn
);

81 
h™dÀ_t˝_míu_öput
(
c
);

82 
gë_fd_‰om_míu
();

83 
upd©e_t˝_èbÀ
(
t˝_sockë__
 *
sock
);

	@ip_driver.c

10 
	~<°dio.h
>

11 
	~<°dlib.h
>

12 
	~<uni°d.h
>

13 
	~<°rög.h
>

15 
	~"v™_drivî.h
"

16 
	~"Áncy_di•œy.h
"

17 
	~"t˝.h
"

19 
	$maö
–
¨gc
, * 
¨gv
[] ) {

20 
√tc⁄f
[256];

21 
i
 = 0,
nodíum
, 
ö
;

22 
ù_node_t
 *
node
;

23 
buf
[ 256 ];

24 *
d©a
 = 
	`mÆloc
(1000);

26 if–
¨gc
 != 3 ) {

27 
	`¥ötf
("ußge: %†node_numÇëc⁄fig\n",
¨gv
[0]);

30 
nodíum
 = 
	`©oi
(
¨gv
[1]);

32 
	`°∫˝y
(
√tc⁄f
,
¨gv
[2],256);

34 
	`¥ötf
("Starting up...\n");

35 
	`¥ötf
("Init display driver...\n");

36 
	`öô_di•œy
(
USE_CURSES
);

37 
	`∆og
(
MSG_LOG
, "init", "Display driver started");

38 
	`∆og
(
MSG_LOG
, "init", "Starting van driver...");

39 
node
 = 
	`v™_drivî_öô
(
√tc⁄f
, 
nodíum
);

42  
i
 != 'q' ) {

43 
ªtvÆ
;

50 
	`fÊush
(
°dout
);

51 
	`mem£t
(
buf
,0,80);

54 
buf
[256] = 0;

57 
i
 = 
	`gë_key
();

59  
i
 ) {

62 
	`di•œy_msg
("alpha\nbeta");

66 
	`show_rouã_èbÀ
();

69 
	`show_t˝_èbÀ
();

73 
ªtvÆ
 = 
	`v_sockë
();

75 
	`di•œy_msg
("v_sockë(Ëªtu∫ed %d", 
ªtvÆ
);

78 
KEY_NPAGE
:

79 
KEY_PPAGE
:

80 
	`s¸ﬁl_logwö
(
i
);

83 
KEY_DOWN
:

84 
KEY_UP
:

86 
	`h™dÀ_t˝_míu_öput
(
i
);

90 
	`ã°_t˝_míu_upd©e
();

95 
sockë
;

96 
uöt16_t
 
p‹t
;

97 
sockë
 = 
	`gë_fd_‰om_míu
();

98 i‡(
sockë
 == -1) {

99 
	`di•œy_msg
("Please select/createá socket first!"); ;

103 
p‹t
 = 
	`gë_numbî
("LocalÖortÅo bindÅo");

104 
	`∆og
(
MSG_LOG
, "sockë", "bödög sockë %dÅÿloˇ»p‹à%d", 
sockë
, 
p‹t
);

105 
ªtvÆ
 = 
	`v_böd
(
sockë
, 
nodíum
, 
p‹t
);

106 
	`di•œy_msg
("v_böd(Ëªtu∫ed %d", 
ªtvÆ
);

112 
sockë
 = 
	`gë_fd_‰om_míu
();

113 i‡(
sockë
 == -1) {

114 
	`di•œy_msg
("Please select/createá socket first!"); ;

116 
ªtvÆ
 = 
	`v_li°í
(
sockë
, 0);

117 
	`di•œy_msg
("v_li°í(Ëªtu∫ed %d", 
ªtvÆ
);

125 
sockë
, 
node
;

126 
uöt16_t
 
p‹t
;

127 
sockë
 = 
	`gë_fd_‰om_míu
();

128 i‡(
sockë
 == -1) {

129 
	`di•œy_msg
("Please select/createá socket first!"); ;

131 
node
 = 
	`gë_numbî
("nodeÅo connectÅo");

132 
p‹t
 = 
	`gë_numbî
("portÅo connectÅo");

133 
	`∆og
(
MSG_LOG
,"sockë","c⁄√˘ögÅÿ%d o¿p‹à%d wôh sockë %d...", 
node
, 
p‹t
, 
sockë
);

134 
ªtvÆ
 = 
	`v_c⁄√˘
(
sockë
, 
node
, 
p‹t
);

135 
	`di•œy_msg
("v_c⁄√˘(Ëªtu∫ed %d", 
ªtvÆ
);

143 
sockë
 = 
	`gë_fd_‰om_míu
();

144 i‡(
sockë
 == -1) {

145 
	`di•œy_msg
("Please select/createá socket first!"); ;

147 
ªtvÆ
 = 
	`v_ac˚±
(
sockë
);

148 
	`di•œy_msg
("v_ac˚±(Ëªtu∫ed %d", 
ªtvÆ
);

161 
	`di•œy_msg
("Function Not Yet Implemented");

167 
sockë
 = 
	`gë_fd_‰om_míu
();

168 i‡(
sockë
 == -1) {

169 
	`di•œy_msg
("Please select/createá socket first!"); ;

171 
Àn
 = 
	`gë_ãxt
–"Mesßge:", 
buf
, 256);

172 
	`di•œy_msg
("YouÉ¡îed %d(%dËch¨a˘îs: %s", 
	`°æí
(
buf
),
Àn
, buf);

174 
ªtvÆ
 = 
	`v_wrôe
(
sockë
,
buf
, 
Àn
);

175 
	`di•œy_msg
("v_wrôe(Ëªtu∫ed %d", 
ªtvÆ
);

188 
ö
 = 
	`gë_numbî
("Interface:");

189 i‡(
	`gë_if_°©e
(
node
, 
ö
)Ë
	`£t_if_°©e
(node, in, 0);

190 
	`£t_if_°©e
(
node
, 
ö
, 1);

195 
	`‰ì
(
d©a
);

197 
	`v™_drivî_de°‹y
(
node
);

200 
	}
}

	@ippacket.h

1 #i‚de‡
PACKET_H


2 
	#PACKET_H


	)

4 
	~<°döt.h
>

5 
	~<°dio.h
>

6 
	~<°rög.h
>

8 
	#HEADER_SIZE
 8

	)

10 
	#PROTO_DATA
 0

	)

11 
	#PROTO_RIP
 1

	)

12 
	#PROTO_TCP
 2

	)

14 
	#gë_vîsi⁄
(
p
Ë(()((’)[0] & 0xF0)>>4))

	)

15 
	#£t_vîsi⁄
(
p
, 
v
Ë(’)[0] &0x0F, (p)[0] |((v)<<4))

	)

17 
	#gë_¥Ÿocﬁ
(
p
Ë(()(’)[0] & 0x0F))

	)

18 
	#£t_¥Ÿocﬁ
(
p
, 
v
Ë(’)[0] &0xF0, (p)[0] |(v))

	)

20 
	#gë_tŸÆ_Àn
(
p
Ë(*((
uöt16_t
*)(’)+1)))

	)

21 
	#£t_tŸÆ_Àn
(
p
, 
v
Ëdÿ{
uöt16_t
 
_tmp
=(v); 
	`mem˝y
(’)+1, &_tmp, 2);} 0)

	)

23 
	#gë_âl
(
p
Ë(()(’)[3]))

	)

24 
	#£t_âl
(
p
, 
v
Ë(’)[3] = (()(v)))

	)

26 
	#gë_checksum
(
p
Ë(*((
uöt16_t
*)(’)+4)))

	)

27 
	#£t_checksum
(
p
, 
v
Ëdÿ{
uöt16_t
 
_tmp
=(v); 
	`mem˝y
(’)+4, &_tmp, 2);} 0)

	)

29 
	#gë_§c
(
p
Ë(()(’)[6]))

	)

30 
	#£t_§c
(
p
, 
v
Ë(’)[6] = (()(v)))

	)

32 
	#gë_d°
(
p
Ë(()(’)[7]))

	)

33 
	#£t_d°
(
p
, 
v
Ë(’)[7] = (()(v)))

	)

35 
	#dump_bôs
(
p
, 
l
Ëdÿ{
_tmp
; _tmp=0;_tmp<(l);_tmp++){ \

36 ((
p
)[
_tmp
 / 8] & (0x80>>(_tmp%8))Ë? 
	`putch¨
('1'Ë:Öutch¨('0');}putch¨('\n');} 0)

	)

	@rtable.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<hèbÀ.h
>

5 
	~<as£π.h
>

6 
	~<v™.h
>

7 
	~<±hªad.h
>

9 
	~"πabÀ.h
"

10 
	~"Áncy_di•œy.h
"

12 
	$πabÀ_˛ónup
(
πabÀ_t
* 
π
) {

13 
	`±hªad_muãx_u∆ock
(&
π
->
lock
);

14 
	}
}

17 
	$πabÀ_mîge
(
£lf_addr
, 
πabÀ_t
 *
loˇl
,ÑèbÀ_à*
ªmŸe
, 
πabÀ_íåy_t
 *
c⁄duô
) {

18 
πabÀ_íåy_t
* 
r_íåy
;

19 
πabÀ_íåy_t
* 
l_íåy
;

20 
co°
, 
modify
 = 0;

22 
	`±hªad_˛ónup_push
(((*)(*))
πabÀ_˛ónup
, 
loˇl
);

23 
	`±hªad_˛ónup_push
(((*)(*))
πabÀ_˛ónup
, 
ªmŸe
);

24 
	`±hªad_muãx_lock
(&
loˇl
->
lock
);

25 
	`±hªad_muãx_lock
(&
ªmŸe
->
lock
);

27 
	`πabÀ_ôî©e_begö
(
ªmŸe
, 
r_íåy
) {

28 
co°
 = 
c⁄duô
->co° + 
r_íåy
->cost;

29 
co°
 = co° >
INFINITY
 ? INFINITY : cost;

32 if(
£lf_addr
 =
r_íåy
->
addr
 || 
DEFAULT_ROUTE
 ==Ñ_entry->addr) {

37 if(!(
l_íåy
 = 
	`πabÀ_gë
(
loˇl
, 
r_íåy
->
addr
))) {

38 if(!(
l_íåy
 = 
	`mÆloc
((
πabÀ_íåy_t
)))) {

39 
	`∆og
(
MSG_WARNING
,"route merge", "Merge failure.");

44 
l_íåy
->
addr
 = 
r_íåy
->addr;

45 
	`πabÀ_put
(
loˇl
, 
l_íåy
);

48 } if(
l_íåy
->
co°
 <co° &&Ü_íåy->
√xt_h›
 !
c⁄duô
->
addr
) {

52 
modify
 = !(
l_íåy
->
iÁ˚
 =
c⁄duô
->iÁ˚ &&Ü_íåy->
√xt_h›
 =c⁄duô->
addr
 &&Ü_íåy->
ty≥
 =c⁄duô->ty≥ &&Ü_íåy->
co°
 == cost);

55 
l_íåy
->
iÁ˚
 = 
c⁄duô
->iface;

56 
l_íåy
->
√xt_h›
 = 
c⁄duô
->
addr
;

57 
l_íåy
->
ty≥
 = 
c⁄duô
->type;

58 
l_íåy
->
co°
 = cost;

60 } 
	`πabÀ_ôî©e_íd
();

62 
	`±hªad_˛ónup_p›
(1);

63 
	`±hªad_˛ónup_p›
(1);

65  
modify
;

66 
	}
}

68 
πabÀ_t
* 
	$πabÀ_√w
() {

69 
πabÀ_t
* 
π
 = (πabÀ_t*)
	`mÆloc
((rtable_t));

70 
±hªad_muãx©å_t
 
©å
;

72 if(!
π
) {

73  
NULL
;

77 
	`hèbÀ_öô
(&
π
->
hash
, 
VAN_MAXNODES
 + 1);

80 
	`±hªad_muãx©å_£ây≥
(&
©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
);

81 
	`±hªad_muãx_öô
(&
π
->
lock
, &
©å
);

83  
π
;

84 
	}
}

86 
	$πabÀ_de°roy
(
πabÀ_t
* 
π
) {

87 
πabÀ_íåy_t
* 
íåy
;

90 
	`πabÀ_ôî©e_begö
(
π
, 
íåy
) {

91 
	`‰ì
(
íåy
);

92 } 
	`πabÀ_ôî©e_íd
();

95 
	`hèbÀ_de°roy
(&
π
->
hash
);

98 
	`±hªad_muãx_de°roy
(&
π
->
lock
);

99 
	}
}

101 
πabÀ_íåy_t
* 
	$πabÀ_gë
(
πabÀ_t
 *
π
, 
addr
) {

102 
πabÀ_íåy_t
 *
r
;

104 
	`±hªad_˛ónup_push
(((*)(*))
πabÀ_˛ónup
, 
π
);

105 
	`±hªad_muãx_lock
(&
π
->
lock
);

107 
r
 = (
πabÀ_íåy_t
*)
	`hèbÀ_gë
(&
π
->
hash
, 
addr
);

109 i‡(
r
 =
NULL
) {

110 
r
 = (
πabÀ_íåy_t
*)
	`hèbÀ_gë
(&
π
->
hash
, 
DEFAULT_ROUTE
);

113 
	`±hªad_˛ónup_p›
(1);

115  
r
;

116 
	}
}

119 
	$πabÀ_put
(
πabÀ_t
 *
π
, 
πabÀ_íåy_t
* 
íåy
) {

120 * 
ﬁd
;

122 
	`±hªad_˛ónup_push
(((*)(*))
πabÀ_˛ónup
, 
π
);

123 
	`±hªad_muãx_lock
(&
π
->
lock
);

126 if((
ﬁd
 = 
	`hèbÀ_put
(&
π
->
hash
, 
íåy
->
addr
,Éntry))) {

127 
	`‰ì
(
ﬁd
);

130 
	`±hªad_˛ónup_p›
(1);

131 
	}
}

133 
	$πabÀ_ªmove
(
πabÀ_t
 *
π
, 
addr
) {

134 * 
ﬁd
;

136 
	`±hªad_˛ónup_push
(((*)(*))
πabÀ_˛ónup
, 
π
);

137 
	`±hªad_muãx_lock
(&
π
->
lock
);

140 if((
ﬁd
 = 
	`hèbÀ_ªmove
(&
π
->
hash
, 
addr
))) {

141 
	`‰ì
(
ﬁd
);

144 
	`±hªad_˛ónup_p›
(1);

145 
	}
}

147 
	$πabÀ_£t_co°
(
πabÀ_t
 *
π
, 
addr
, 
co°
) {

150 
πabÀ_íåy_t
 *
√w
 = 
	`mÆloc
((rtable_entry_t));

151 
	`∆og
(
MSG_LOG
,"rouã së co°","TryögÅÿ£àthêco° f‹ádd∏%dÅÿ%d", 
addr
, 
co°
);

152 
πabÀ_íåy_t
* 
ﬁd_íåy
 = 
	`πabÀ_gë
(
π
, 
addr
);

154 
ﬁd_íåy
->
co°
 = cost;

155 
	`mem˝y
(
√w
, 
ﬁd_íåy
, (
πabÀ_íåy_t
));

156 
	`πabÀ_ªmove
(
π
, 
addr
);

157 
	`πabÀ_put
(
π
, 
√w
);

160 
	}
}

162 
	$πabÀ_pois⁄_iÁ˚
(
πabÀ_t
 *
π
, 
iÁ˚
) {

163 
πabÀ_íåy_t
* 
íåy
;

165 
	`±hªad_˛ónup_push
(((*)(*))
πabÀ_˛ónup
, 
π
);

166 
	`±hªad_muãx_lock
(&
π
->
lock
);

169 
	`πabÀ_ôî©e_begö
(
π
, 
íåy
) {

170 if(
íåy
->
iÁ˚
 == iface) {

171 
íåy
->
co°
 = 
INFINITY
;

173 } 
	`πabÀ_ôî©e_íd
();

175 
	`±hªad_˛ónup_p›
(1);

176 
	}
}

179 * 
	$πabÀ_£rülize
(
πabÀ_t
* 
π
, *
Àn
, 
fûãr_addr
) {

180 *
byãs
, *
b±r
;

181 
πabÀ_íåy_t
* 
íåy
;

183 
	`±hªad_˛ónup_push
(((*)(*))
πabÀ_˛ónup
, 
π
);

184 
	`±hªad_muãx_lock
(&
π
->
lock
);

186 
b±r
 = 
byãs
 = 
	`mÆloc
(*
Àn
 = ((
πabÀ_íåy_t
Ë* 
π
->
hash
.
ht_size
));

188 if(
byãs
) {

189 
	`πabÀ_ôî©e_begö
(
π
, 
íåy
) {

190 
	`as£π
(
b±r
 < 
byãs
 + *
Àn
);

192 if(
íåy
->
√xt_h›
 !
fûãr_addr
) {

193 
b±r
 +
	`πabÀ_íåy_£rülize
(b±r, 
íåy
);

195 } 
	`πabÀ_ôî©e_íd
();

198 
	`±hªad_muãx_u∆ock
(&
π
->
lock
);

199 
	`±hªad_˛ónup_p›
(1);

202  
byãs
;

203 
	}
}

205 
πabÀ_t
* 
	$πabÀ_un£rülize
(c⁄° * 
byãs
, 
Àn
) {

206 c⁄° * 
b±r
 = 
byãs
;

207 
πabÀ_íåy_t
* 
íåy
;

208 
πabÀ_t
* 
π
 = 
	`πabÀ_√w
();

210 if(!
π
) {

211  
NULL
;

214 
b±r
 - 
byãs
 < 
Àn
) {

215 
b±r
 +
	`πabÀ_íåy_un£rülize
(b±r, &
íåy
);

216 
	`πabÀ_put
(
π
, 
íåy
);

219  
π
;

220 
	}
}

222 
	$πabÀ_íåy_£rülize
(* 
byãs
, 
πabÀ_íåy_t
* 
íåy
) {

223 
	`mem˝y
(
byãs
, 
íåy
, (
πabÀ_íåy_t
));

225  (
πabÀ_íåy_t
);

226 
	}
}

228 
	$πabÀ_íåy_un£rülize
(c⁄° * 
byãs
, 
πabÀ_íåy_t
** 
íåy
) {

229 *
íåy
 = (
πabÀ_íåy_t
*)
	`mÆloc
((rtable_entry_t));

230 
	`mem˝y
(*
íåy
, 
byãs
, (
πabÀ_íåy_t
));

232  (
πabÀ_íåy_t
);

233 
	}
}

235 
	$πabÀ_dump
(
πabÀ_t
 *
π
) {

236 
πabÀ_íåy_t
 *
íåy
;

238 
	`±hªad_˛ónup_push
(((*)(*))
πabÀ_˛ónup
, 
π
);

239 
	`±hªad_muãx_lock
(&
π
->
lock
);

242 
	`˛ór_πabÀ_di•œy
();

245 
	`πabÀ_¥öt
("RouãÅabÀ %p", 
π
);

248 
	`πabÀ_ôî©e_begö
(
π
, 
íåy
) {

249 
	`πabÀ_¥öt
(" * \tAddress: %d, Iface: %d, Next: %d, Type: %d, Cost: %d",

250 
íåy
->
addr
,É¡ry->
iÁ˚
,É¡ry->
√xt_h›
,É¡ry->
ty≥
,É¡ry->
co°
);

251 } 
	`πabÀ_ôî©e_íd
();

253 
	`±hªad_˛ónup_p›
(1);

254 
	}
}

	@rtable.h

1 #i‚de‡
RTABLE_H


2 
	#RTABLE_H


	)

4 
	~<hèbÀ.h
>

5 
	~<±hªad.h
>

7 
	#DEFAULT_ROUTE
 
VAN_MAXNODES


	)

8 
	#INFINITY
 16

	)

9 
	#RIP_SLEEP
 30

	)

10 
	#LINK_TIMEOUT
 61

	)

14 
	maddr
;

15 
	miÁ˚
;

16 
	m√xt_h›
;

17 
	mty≥
;

18 
	mco°
;

19 } 
	tπabÀ_íåy_t
;

23 
hèbÀ_t
 
	mhash
;

24 
±hªad_muãx_t
 
	mlock
;

25 } 
	tπabÀ_t
;

28 
πabÀ_t
* 
πabÀ_√w
();

29 
πabÀ_de°roy
(
πabÀ_t
* 
π
);

32 
πabÀ_íåy_t
* 
πabÀ_gë
(
πabÀ_t
 *
π
, 
addr
);

33 
πabÀ_put
(
πabÀ_t
 *
π
, 
πabÀ_íåy_t
* 
íåy
);

34 
πabÀ_ªmove
(
πabÀ_t
 *
π
, 
addr
);

35 
πabÀ_pois⁄_iÁ˚
(
πabÀ_t
 *
π
, 
iÁ˚
);

36 
πabÀ_mîge
(
£lf_addr
, 
πabÀ_t
 *
loˇl
,ÑèbÀ_à*
ªmŸe
, 
πabÀ_íåy_t
* 
c⁄duô
);

39 * 
πabÀ_£rülize
(
πabÀ_t
 *
π
, *
Àn
, 
fûãr_addr
);

40 
πabÀ_t
* 
πabÀ_un£rülize
(c⁄° * 
byãs
, 
Àn
);

42 
πabÀ_íåy_£rülize
(* 
byãs
, 
πabÀ_íåy_t
* 
íåy
);

43 
πabÀ_íåy_un£rülize
(c⁄° * 
byãs
, 
πabÀ_íåy_t
** 
íåy
);

45 
πabÀ_dump
(
πabÀ_t
 *
π
);

48 
πabÀ_˛ónup
(
πabÀ_t
* 
πabÀ
);

51 
	#πabÀ_ôî©e_begö
(
π
, 
íåy_v¨
Ëdÿ{ 
	`±hªad_˛ónup_push
(((*)(*))
πabÀ_˛ónup
,Ñt) \

52 
	`±hªad_muãx_lock
(&
π
->
lock
); \

53 
	`hèbÀ_ôî©e_begö
(&((
π
)->
hash
), 
íåy_v¨
, 
πabÀ_íåy_t
)

	)

54 
	#πabÀ_ôî©e_íd
(Ë
	`hèbÀ_ôî©e_íd
(); 
	`±hªad_˛ónup_p›
(1); } 0)

	)

	@seq.c

1 
	~<°dlib.h
>

3 
	~"£q.h
"

7 
	$isVÆidSeqNum
(
t˝_sockë_t
 *
sock
, 
num
, 
Àngth
) {

10 
	`∆og
(
MSG_LOG
, "isVÆidSeqNum", "sock->ªcv_√xt=%d, sock->ªcv_wödow_size=%d,Çum=%d,Üígth=%d", 
sock
->
ªcv_√xt
, sock->
ªcv_wödow_size
, 
num
, 
Àngth
);

12  
	`cbuf_btm_c⁄èös
(
sock
->
r_buf
, sock->
ªcv_√xt
, sock->ªcv_√xà+ sock->
ªcv_wödow_size
, 
num
) &&

13 
	`cbuf_btm_c⁄èös
(
sock
->
r_buf
, sock->
ªcv_√xt
, sock->ªcv_√xà+ sock->
ªcv_wödow_size
, 
num
+
Àngth
);

15 
	}
}

18 
	$isNextSeqNum
(
t˝_sockë_t
 *
sock
, 
num
) {

19  (
num
 =
sock
->
ªcv_√xt
);

20 
	}
}

25 
	$haveRoomToRe˚ive
(
t˝_sockë_t
 *
sock
, 
size
) {

26  
sock
->
ªcv_wödow_size
 >
size
;

27 
	}
}

33 
	$ackD©a
(
t˝_sockë_t
 *
sock
, 
size
) {

34 
	`∆og
(
MSG_LOG
, "ackD©a", "bumpögÑecv_num from %dÅÿ%d", 
sock
->
ªcv_√xt
, sock->ªcv_√xà+ 
size
);

35 
sock
->
ªcv_√xt
 +
size
;

36 
sock
->
£q_num
 +
size
;

37 
	}
}

41 
	$amou¡OfD©aToRód
(
t˝_sockë_t
 *
sock
) {

42 
	`as£π
(
sock
->
ªcv_√xt
 >sock->
ªcv_ªad
);

44  (
sock
->
ªcv_√xt
 - sock->
ªcv_ªad
);

45 
	}
}

48 
	$gëD©aFromBuf„r
(
t˝_sockë_t
 *
sock
, *
buf
, 
max_size
) {

49 
	`as£π
(
buf
);

50 
amou¡
 = 
	`MIN
(
max_size
, 
	`amou¡OfD©aToRód
(
sock
));

52 
	`as£π
(
amou¡
 > 0);

54 *
mem‹y
 = 
	`cbuf_gë_ønge
(
sock
->
r_buf
, sock->
ªcv_ªad
, 
amou¡
);

55 
	`mem˝y
(
buf
, 
mem‹y
, 
amou¡
);

56 
	`‰ì
(
mem‹y
);

58 
sock
->
ªcv_ªad
 +
amou¡
;

59 
sock
->
ªcv_wödow_size
 +
amou¡
;

60 
	`as£π
(
sock
->
ªcv_ªad
 <sock->
ªcv_√xt
);

63  
amou¡
;

65 
	}
}

68 
	$amou¡WeC™Re˚ive
(
t˝_sockë_t
 *
sock
) {

69  
sock
->
ªcv_wödow_size
;

70 
	}
}

73 
	$d©aFromNëw‹kToBuf„r
(
t˝_sockë_t
 *
sock
, *
d©a
, 
size
) {

74 
	`as£π
 (
size
 <
sock
->
ªcv_wödow_size
);

76 
	`cbuf_put_ønge
(
sock
->
r_buf
, 
d©a
, sock->
ªcv_√xt
, 
size
);

79 
	}
}

85 
	$upd©eFromWödowAccoun˚
(
t˝_sockë_t
 *
sock
, 
wödow
) {

86 
sock
->
ªmŸe_Êow_wödow
 = sock->
£nd_√xt
 + 
wödow
;

88 
	}
}

91 
	$ˇnAc˚±D©aToSíd
(
t˝_sockë_t
 *
sock
, 
size
) {

92  (
sock
->
£nd_u«
 + sock->
£nd_wödow_size
 - sock->
£nd_wrôãn
) > 0;

93 
	}
}

96 
	$gëAmou¡AbÀToAc˚±
(
t˝_sockë_t
 *
sock
) {

97  (
sock
->
£nd_u«
 + sock->
£nd_wödow_size
 - sock->
£nd_wrôãn
);

99 
	}
}

102 
	$gëAmou¡AbÀToSíd
(
t˝_sockë_t
 *
sock
) {

103  
	`MIN
(

104 
sock
->
£nd_wrôãn
 - sock->
£nd_√xt
,

105 
sock
->
ªmŸe_Êow_wödow
 - sock->
£nd_√xt
);

106 
	}
}

109 
	$gŸAckF‹
(
t˝_sockë_t
 *
sock
, 
num
 ) {

111 
	`∆og
(
MSG_LOG
, "gocAckF‹", "movög síd_u« from %dÅÿ%d", 
sock
->
£nd_u«
, 
num
);

112 
sock
->
£nd_u«
 = 
num
;

114 
	`as£π
(
sock
->
£nd_u«
 <sock->
£nd_√xt
);

115 
	}
}

118 
	$c›yD©aFromU£r
(
t˝_sockë_t
 *
sock
, *
d©a
, 
size
) {

119 
	`as£π
(
	`ˇnAc˚±D©aToSíd
(
sock
, 
size
));

120 
	`as£π
(
sock
->
£nd_wrôãn
 >sock->
£nd_√xt
);

121 
	`as£π
(
sock
->
£nd_wrôãn
 + 
size
 <sock->
£nd_u«
 + sock->
£nd_wödow_size
);

123 
	`cbuf_put_ønge
(
sock
->
s_buf
, 
d©a
, sock->
£nd_wrôãn
, 
size
);

124 
sock
->
£nd_wrôãn
 +
size
;

126 
	}
}

129 
	$haveD©aToSíd
(
t˝_sockë_t
 *
sock
) {

130  (
	`gëAmou¡AbÀToSíd
(
sock
) > 0);

131 
	}
}

134 
	$u«ckD©a
(
t˝_sockë_t
 *
sock
, 
size
) {

135 
sock
->
£nd_√xt
 = sock->
£nd_u«
;

136 
	}
}

140 
	$d©aFromBuf„rToNëw‹k
(
t˝_sockë_t
 *
sock
, *
d©a
, 
size
) {

142 
amou¡
 = 
	`gëAmou¡AbÀToSíd
(
sock
);

144 * 
mem‹y
 = 
	`cbuf_gë_ønge
(
sock
->
s_buf
, sock->
£nd_√xt
, 
amou¡
);

145 
	`mem˝y
(
d©a
, 
mem‹y
, 
amou¡
);

146 
	`‰ì
(
mem‹y
);

147 
	`∆og
(
MSG_LOG
, "d©aFromBuf„rToNëw‹k", "bumpög síd_√xà‰om %dÅÿ%d", 
sock
->
£nd_√xt
, sock->£nd_√xà+ 
size
);

148 
sock
->
£nd_√xt
 +
size
;

151  
amou¡
;

152 
	}
}

	@seq.h

1 #i‚de‡
__SEQ_H_


2 
	#__SEQ_H_


	)

4 
	~"t˝.h
"

5 
	~"cbuf„r.h
"

17 
	#MIN
(
a
,
b
Ë◊ < b ?á: b)

	)

19 
isVÆidSeqNum
(
t˝_sockë_t
 *
sock
, 
num
, 
size
);

20 
isNextSeqNum
(
t˝_sockë_t
 *
sock
, 
num
);

21 
haveRoomToRe˚ive
(
t˝_sockë_t
 *
sock
, 
size
);

22 
ackD©a
(
t˝_sockë_t
 *
sock
, 
size
);

23 
amou¡OfD©aToRód
(
t˝_sockë_t
 *
sock
);

24 
gëD©aFromBuf„r
(
t˝_sockë_t
 *
sock
, *
buf
, 
max_size
);

25 
amou¡WeC™Re˚ive
(
t˝_sockë_t
 *
sock
);

26 
d©aFromNëw‹kToBuf„r
(
t˝_sockë_t
 *
sock
, *
d©a
, 
size
);

28 
ˇnAc˚±D©aToSíd
(
t˝_sockë_t
 *
sock
, 
size
);

29 
gëAmou¡AbÀToSíd
(
t˝_sockë_t
 *
sock
);

30 
gëAmou¡AbÀToAc˚±
(
t˝_sockë_t
 *
sock
);

31 
gŸAckF‹
(
t˝_sockë_t
 *
sock
, 
°¨t
 );

32 
c›yD©aFromU£r
(
t˝_sockë_t
 *
sock
, *
d©a
, 
size
);

33 
u«ckD©a
(
t˝_sockë_t
 *
sock
, 
size
);

34 
d©aFromBuf„rToNëw‹k
(
t˝_sockë_t
 *
sock
, *
d©a
, 
size
);

	@socktable.c

1 
	~<hèbÀ.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<as£π.h
>

6 
	~"sockèbÀ.h
"

7 
	~"t˝.h
"

8 
	~"t˝∑ckë.h
"

9 
	~"Áncy_di•œy.h
"

11 
hèbÀ_t
* 
	$Æloc_hèbÀ
() {

12 
hèbÀ_t
* 
ªsu…
 = 
	`mÆloc
((htable_t));

15 
	`as£π
(
ªsu…
);

16 
	`hèbÀ_öô
(
ªsu…
, 
MAXSOCKETS
);

18  
ªsu…
;

19 
	}
}

21 
sock•lô_t
* 
	$Æloc_s•lô
(
t˝_sockë_t
 *
sock
) {

22 
sock•lô_t
* 
•lô
 = 
	`mÆloc
((socksplit_t));

26 
•lô
->
hÆf
 = 
sock
;

27 
•lô
->
fuŒ
 = 
sock
 ? 
NULL
 : 
	`Æloc_hèbÀ
();

29  
•lô
;

30 
	}
}

32 
	$sockèbÀ_öô
(
sockèbÀ_t
 *
°
) {

33 
	`hèbÀ_öô
(&
°
->
roŸ
, 
MAXSOCKETS
);

34 
	}
}

36 
	$sockèbÀ_de°roy
(
sockèbÀ_t
 *
°
) {

37 
hèbÀ_t
 *
Õ‹t_h
, *
Ω‹t_h
;

38 
sock•lô_t
 *
r•lô
;

41 
	`hèbÀ_ôî©e_begö
(&
°
->
roŸ
, 
Õ‹t_h
, 
hèbÀ_t
) {

42 
	`hèbÀ_ôî©e_begö
(
Õ‹t_h
, 
r•lô
, 
sock•lô_t
) {

43 if(
r•lô
->
fuŒ
) {

44 
	`hèbÀ_ôî©e_begö
(
r•lô
->
fuŒ
, 
Ω‹t_h
, 
hèbÀ_t
) {

47 
	`hèbÀ_de°roy
(
Ω‹t_h
);

48 
	`‰ì
(
Ω‹t_h
);

50 } 
	`hèbÀ_ôî©e_íd
();

53 
	`hèbÀ_de°roy
(
r•lô
->
fuŒ
);

54 
	`‰ì
(
r•lô
->
fuŒ
);

57 
	`‰ì
(
r•lô
);

58 } 
	`hèbÀ_ôî©e_íd
();

60 
	`hèbÀ_de°roy
(
Õ‹t_h
);

61 
	`‰ì
(
Õ‹t_h
);

63 } 
	`hèbÀ_ôî©e_íd
();

66 
	`hèbÀ_de°roy
(&
°
->
roŸ
);

67 
	}
}

69 
t˝_sockë_t
 *
	$sockèbÀ_gë
(
sockèbÀ_t
 *
°
, 
 ode
, 
uöt16_t
 
Õ‹t
, 
∫ode
, uöt16_à
Ω‹t
, 
uöt8_t
 
fuŒ
) {

70 
hèbÀ_t
 *
Õ‹t_h
, *
Ω‹t_h
;

71 
sock•lô_t
 *
r•lô
;

72 
t˝_sockë_t
 *
ªsu…
 = 
NULL
;

75 if((
Õ‹t_h
 = 
	`hèbÀ_gë
(&
°
->
roŸ
, 
 ode
))) {

76 if((
r•lô
 = 
	`hèbÀ_gë
(
Õ‹t_h
, 
Õ‹t
))) {

77 if(!
fuŒ
) {

78 
ªsu…
 = 
r•lô
->
hÆf
;

79 } if(
r•lô
->
fuŒ
 && (
Ω‹t_h
 = 
	`hèbÀ_gë
‘•lô->fuŒ, 
∫ode
))) {

80 
ªsu…
 = 
	`hèbÀ_gë
(
Ω‹t_h
, 
Ω‹t
);

85  
ªsu…
;

86 
	}
}

88 
t˝_sockë_t
 *
	$sockèbÀ_put
(
sockèbÀ_t
 *
°
, 
t˝_sockë_t
 *
d©a
, 
uöt8_t
 
fuŒ
) {

89 
hèbÀ_t
 *
Õ‹t_h
, *
Ω‹t_h
;

90 
sock•lô_t
 *
r•lô
;

91 
‰esh
 = 0;

94 if(!(
Õ‹t_h
 = 
	`hèbÀ_gë
(&
°
->
roŸ
, 
d©a
->
loˇl_node
->
v™_node
->
vn_num
))) {

95 
	`hèbÀ_put
(&
°
->
roŸ
, 
d©a
->
loˇl_node
->
v™_node
->
vn_num
, 
Õ‹t_h
 = 
	`Æloc_hèbÀ
());

96 
‰esh
 = 1;

99 if(
‰esh
 || !(
r•lô
 = 
	`hèbÀ_gë
(
Õ‹t_h
, 
d©a
->
loˇl_p‹t
))) {

100 * 
rvÆ
 = 
	`hèbÀ_put
(
Õ‹t_h
, 
d©a
->
loˇl_p‹t
, 
r•lô
 = 
	`Æloc_s•lô
(
fuŒ
 ? 
NULL
 : data));

101 
‰esh
 = 1;

103 if(!
fuŒ
) {

104  
rvÆ
;

108 if(!
r•lô
->
fuŒ
) {

109 
r•lô
->
fuŒ
 = 
	`Æloc_hèbÀ
();

110 
‰esh
 = 1;

113 if(
‰esh
 || !(
Ω‹t_h
 = 
	`hèbÀ_gë
(
r•lô
->
fuŒ
, 
d©a
->
ªmŸe_node
))) {

114 
	`hèbÀ_put
(
r•lô
->
fuŒ
, 
d©a
->
ªmŸe_node
, 
Ω‹t_h
 = 
	`Æloc_hèbÀ
());

117  
	`hèbÀ_put
(
Ω‹t_h
, 
d©a
->
ªmŸe_p‹t
, data);

118 
	}
}

120 
t˝_sockë_t
 *
	$sockèbÀ_ªmove
(
sockèbÀ_t
 *
°
, 
 ode
, 
uöt16_t
 
Õ‹t
, 
∫ode
, uöt16_à
Ω‹t
, 
uöt8_t
 
fuŒ
) {

121 
hèbÀ_t
 *
Õ‹t_h
, *
Ω‹t_h
;

122 
sock•lô_t
 *
r•lô
;

124 
t˝_sockë_t
 *
ªsu…
 = 
NULL
;

126 if((
Õ‹t_h
 = 
	`hèbÀ_gë
(&
°
->
roŸ
, 
 ode
))) {

127 if((
r•lô
 = 
	`hèbÀ_gë
(
Õ‹t_h
, 
Õ‹t
))) {

128 if(!
fuŒ
) {

129 
ªsu…
 = 
r•lô
->
hÆf
;

130 
r•lô
->
hÆf
 = 
NULL
;

132 } if((
Ω‹t_h
 = 
	`hèbÀ_gë
(
r•lô
->
fuŒ
, 
∫ode
))) {

133 
ªsu…
 = 
	`hèbÀ_ªmove
(
Ω‹t_h
, 
Ω‹t
);

138  
ªsu…
;

139 
	}
}

141 
t˝_sockë_t
 *
	$sockèbÀ_¥omŸe
(
sockèbÀ_t
 *
°
, 
t˝_sockë_t
 *
d©a
) {

142 
t˝_sockë_t
 *
ªsu…
 = 
NULL
;

144 if(
	`sockèbÀ_ªmove
(
°
, 
d©a
->
loˇl_node
->
v™_node
->
vn_num
, d©a->
loˇl_p‹t
, d©a->
ªmŸe_node
, d©a->
ªmŸe_p‹t
, 0)) {

145 
ªsu…
 = 
	`sockèbÀ_put
(
°
, 
d©a
, 
FULL_SOCKET
);

148  
ªsu…
;

149 
	}
}

151 
	$sockèbÀ_dump
(
sockèbÀ_t
 *
°
, 
uöt8_t
 
fuŒ
) {

152 
t˝_sockë_t
* 
sock
;

154 if(
fuŒ
) {

155 
	`sockèbÀ_fuŒ_ôî©e_begö
(
°
, 
sock
) {

156 
	`∆og
(
MSG_LOG
, "socket_dump", "Full Socket [lnode = %d,Üport = %d,Ñnode = %d,Ñport = %d]",

157 
sock
->
loˇl_node
->
v™_node
->
vn_num
, sock->
loˇl_p‹t
, sock->
ªmŸe_node
, sock->
ªmŸe_p‹t
);

158 } 
	`sockèbÀ_fuŒ_ôî©e_íd
();

160 
	`sockèbÀ_hÆf_ôî©e_begö
(
°
, 
sock
) {

161 
	`∆og
(
MSG_LOG
, "socket_dump", "Half Socket [lnode = %d,Üport = %d]",

162 
sock
->
loˇl_node
->
v™_node
->
vn_num
, sock->
loˇl_p‹t
);

163 } 
	`sockèbÀ_hÆf_ôî©e_íd
();

165 
	}
}

	@socktable.h

1 #i‚de‡
__SOCKTABLE_H__


2 
	#__SOCKTABLE_H__


	)

4 
	~<hèbÀ.h
>

5 
	~<°döt.h
>

6 
	~"t˝.h
"

8 
	#HALF_SOCKET
 0

	)

9 
	#FULL_SOCKET
 1

	)

11 
	gt˝_sockë__
;

13 
	ssock•lô__
 {

14 
hèbÀ_t
* 
	mfuŒ
;

15 
t˝_sockë__
* 
	mhÆf
;

16 } 
	tsock•lô_t
;

18 
	ssockèbÀ__
 {

19 
hèbÀ_t
 
	mroŸ
;

20 } 
	tsockèbÀ_t
;

22 
sockèbÀ_öô
(
sockèbÀ_t
 *
°
);

23 
sockèbÀ_de°roy
(
sockèbÀ_t
 *
°
);

24 
sockèbÀ_dump
(
sockèbÀ_t
 *
°
, 
uöt8_t
 
fuŒ
);

26 
t˝_sockë__
 *
sockèbÀ_gë
(
sockèbÀ_t
 *
°
, 
 ode
, 
uöt16_t
 
Õ‹t
, 
∫ode
, uöt16_à
Ω‹t
, 
uöt8_t
 
fuŒ
);

27 
t˝_sockë__
 *
sockèbÀ_put
(
sockèbÀ_t
 *
°
, t˝_sockë__ *
d©a
, 
uöt8_t
 
fuŒ
);

28 
t˝_sockë__
 *
sockèbÀ_ªmove
(
sockèbÀ_t
 *
°
, 
 ode
, 
uöt16_t
 
Õ‹t
, 
∫ode
, uöt16_à
Ω‹t
, 
uöt8_t
 
fuŒ
);

29 
t˝_sockë__
 *
sockèbÀ_¥omŸe
(
sockèbÀ_t
 *
°
, t˝_sockë__ *
d©a
);

31 
	#sockèbÀ_fuŒ_ôî©e_begö
(
°
, 
v¨
) \

33 
hèbÀ_t
 *
__°_Õh
, *
__°_Ωh
; \

34 
sock•lô_t
 *
__°_∫s
; \

35 
	`hèbÀ_ôî©e_begö
(&
°
->
roŸ
, 
__°_Õh
, 
hèbÀ_t
) { \

36 
	`hèbÀ_ôî©e_begö
(
__°_Õh
, 
__°_∫s
, 
sock•lô_t
) { \

37 if(!
__°_∫s
->
fuŒ
) { \

40 
	`hèbÀ_ôî©e_begö
(
__°_∫s
->
fuŒ
, 
__°_Ωh
, 
hèbÀ_t
) { \

41 
	`hèbÀ_ôî©e_begö
(
__°_Ωh
, 
v¨
, 
t˝_sockë__
Ë{

	)

43 
	#sockèbÀ_fuŒ_ôî©e_íd
() \

44 } 
	`hèbÀ_ôî©e_íd
(); \

45 } 
	`hèbÀ_ôî©e_íd
(); \

46 } 
	`hèbÀ_ôî©e_íd
(); \

47 } 
	`hèbÀ_ôî©e_íd
(); \

48 } 0)

	)

50 
	#sockèbÀ_hÆf_ôî©e_begö
(
°
, 
v¨
) \

52 
hèbÀ_t
 *
__°_Õh
, *
__°_Ωh
; \

53 
sock•lô_t
 *
__°_∫s
; \

54 
	`hèbÀ_ôî©e_begö
(&
°
->
roŸ
, 
__°_Õh
, 
hèbÀ_t
) { \

55 
	`hèbÀ_ôî©e_begö
(
__°_Õh
, 
__°_∫s
, 
sock•lô_t
) { \

56 if(!(
v¨
 = (
t˝_sockë__
*)
__°_∫s
->
hÆf
)) { \

59 

	)

60 
	#sockèbÀ_hÆf_ôî©e_íd
() \

61 } 
	`hèbÀ_ôî©e_íd
(); \

62 } 
	`hèbÀ_ôî©e_íd
(); \

63 } 0)

	)

	@state.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<bqueue.h
>

5 
	~"°©e.h
"

6 
	~"Áncy_di•œy.h
"

8 
machöe_t
* 
	$machöe_√w
(
°©e_t
* 
°¨t
, * 
c⁄ãxt
) {

9 
machöe_t
 *
machöe
;

12 if(!(
machöe
 = 
	`mÆloc
((
machöe_t
)))) {

13  
NULL
;

16 
machöe
->
c⁄ãxt
 = context;

17 
machöe
->
cuºít
 = 
°¨t
;

18 
machöe
->
roŸ
 = 
°¨t
;

20  
machöe
;

21 
	}
}

23 
	$machöe_de°roy
(
machöe_t
* 
machöe
) {

25 if(!
machöe
) {

30 if(
machöe
->
roŸ
) {

31 
	`°©e_de°roy
(
machöe
->
roŸ
);

35 if(
machöe
->
c⁄ãxt
) {

36 
	`‰ì
(
machöe
->
c⁄ãxt
);

39 
	`‰ì
(
machöe
);

40 
	}
}

42 
°©e_t
* 
	$machöe_°ï
(
machöe_t
* 
machöe
, 
öput_t
 
öput
, * 
¨gt
, * 
¨gs
) {

43 
å™sôi⁄_t
* 
å
;

46 if(!
machöe
->
cuºít
) {

47 
	`∆og
(
MSG_ERROR
, "machine_step", "machineÇot defined");

48  
NULL
;

52 if(!(
å
 = 
	`hèbÀ_gë
(&
machöe
->
cuºít
->
å™sôi⁄s
, 
öput
))) {

54 if(
machöe
->
cuºít
->
îr‹
) {

55 
machöe
->
cuºít
->
	`îr‹
(machöe->cuºít->
id
, machöe->
c⁄ãxt
, 
¨gs
);

58 
	`∆og
(
MSG_ERROR
, "machöe_°ï", "övÆid i≈uà(%d);Ñëu∫ögÅÿroŸ sèã.", 
öput
);

59 
machöe
->
cuºít
 = machöe->
roŸ
;

61  
NULL
;

65 if(
å
->
a˘i⁄
) {

67 if(
å
->
	`a˘i⁄
(
machöe
->
cuºít
->
id
,År->
√xt
->id, machöe->
c⁄ãxt
,År->
¨gd
, 
¨gt
)) {

69 if(
machöe
->
cuºít
->
îr‹
) {

70 
machöe
->
cuºít
->
	`îr‹
(machöe->cuºít->
id
, machöe->
c⁄ãxt
, 
¨gs
);

73 
	`∆og
(
MSG_ERROR
, "machine_step", "Transition functionÑeturned 0;ÑeturningÅoÑoot state");

74 
machöe
->
cuºít
 = machöe->
roŸ
;

76  
NULL
;

80 
	`∆og
(
MSG_LOG
, "machöe_°ï", "I≈uà%d: sã∞‰om %dÅÿ%d", 
öput
, 
machöe
->
cuºít
->
id
, 
å
->
√xt
->id);

83 
machöe
->
cuºít
 = 
å
->
√xt
;

86 if(
machöe
->
cuºít
->
a˘i⁄
) {

87 
machöe
->
cuºít
->
	`a˘i⁄
(machöe->cuºít->
id
, machöe->
c⁄ãxt
, machöe->cuºít->
¨gd
, 
¨gs
);

93  
machöe
->
cuºít
;

94 
	}
}

96 
°©e_t
* 
°©e_√w
(
sid_t
 
id
, (*
a˘i⁄
)(sid_t, *, *, *), (*
îr‹
)(sid_t, *, *), * 
¨gd
) {

97 
°©e_t
* 
°©e
;

100 if(!(
°©e
 = 
	`mÆloc
((
°©e_t
)))) {

101  
NULL
;

105 
	`hèbÀ_öô
(&
°©e
->
å™sôi⁄s
, 
MAX_FANOUT
);

107 
°©e
->
id
 = id;

108 
°©e
->
a˘i⁄
 =áction;

109 
°©e
->
îr‹
 =Érror;

110 
°©e
->
¨gd
 =árgd;

111 
°©e
->
m¨k
 = 0;

113  
°©e
;

114 
	}
}

116 
	$°©e_de°roy
(
°©e_t
* 
°©e
) {

117 
å™sôi⁄_t
* 
å
;

118 
°©e_t
* 
m¨ked
;

119 
bqueue_t
 
g¨bage
;

122 if(!
°©e
) {

127 
	`bqueue_öô
(&
g¨bage
);

130 
°©e
->
m¨k
 = 1;

133 
	`hèbÀ_ôî©e_begö
(&
°©e
->
å™sôi⁄s
, 
å
, 
å™sôi⁄_t
) {

135 if(!
å
->
√xt
->
m¨k
) {

136 
å
->
√xt
->
m¨k
 = 1;

137 
	`bqueue_íqueue
(&
g¨bage
, 
å
->
√xt
);

141 
	`‰ì
(
å
->
¨gd
);

142 
	`‰ì
(
å
);

143 } 
	`hèbÀ_ôî©e_íd
();

146 !
	`bqueue_åydequeue
(&
g¨bage
, (**)&
m¨ked
)) {

147 
	`°©e_de°roy
(
m¨ked
);

150 
	`hèbÀ_de°roy
(&
°©e
->
å™sôi⁄s
);

151 
	`‰ì
(
°©e
->
¨gd
);

152 
	`‰ì
(
°©e
);

155 
	`bqueue_de°roy
(&
g¨bage
);

156 
	}
}

158 
°©e_å™sôi⁄
(
°©e_t
* 
°©e
, sèã_t* 
√xt
, 
öput_t
 
öput
, (*
a˘i⁄
)(
sid_t
, sid_t, *, *, *), * 
¨gd
) {

159 
å™sôi⁄_t
* 
å
;

162 if(!
°©e
 || !
√xt
) {

167 if(
	`hèbÀ_gë
(&
°©e
->
å™sôi⁄s
, 
öput
)) {

172 if(!(
å
 = 
	`mÆloc
((
å™sôi⁄_t
)))) {

176 
å
->
√xt
 =Çext;

177 
å
->
a˘i⁄
 =áction;

178 
å
->
¨gd
 =árgd;

181 
	`hèbÀ_put
(&
°©e
->
å™sôi⁄s
, 
öput
, 
å
);

184 
	}
}

	@state.h

1 #i‚de‡
STATE_H


2 
	#STATE_H


	)

4 
	~<hèbÀ.h
>

5 
	~<bqueue.h
>

6 
	~<°döt.h
>

8 
	#MAX_FANOUT
 16

	)

14 
uöt32_t
 
	tsid_t
;

15 
uöt32_t
 
	töput_t
;

18 
uöt8_t
 
	mm¨k
;

19 
sid_t
 
	mid
;

20 
hèbÀ_t
 
	må™sôi⁄s
;

21 * 
	m¨gd
;

22 (*
	ma˘i⁄
)(
sid_t
 
	mid
, * 
	mc⁄ãxt
, * 
	m¨gd
, * 
	m¨gs
);

23 (*
	mîr‹
)(
sid_t
 
	mid
, * 
	mc⁄ãxt
, * 
	m¨gs
);

24 } 
	t°©e_t
;

27 (*
	ma˘i⁄
)(
sid_t
 
	m¥ev
, sid_à
	m√xt
, * 
	mc⁄ãxt
, * 
	m¨gd
, * 
	m¨gt
);

28 * 
	m¨gd
;

29 
°©e_t
* 
	m√xt
;

30 } 
	tå™sôi⁄_t
;

33 * 
	mc⁄ãxt
;

34 
°©e_t
* 
	mcuºít
;

35 
°©e_t
* 
	mroŸ
;

36 } 
	tmachöe_t
;

42 
machöe_t
* 
machöe_√w
(
°©e_t
* 
°¨t
, * 
c⁄ãxt
);

43 
machöe_de°roy
(
machöe_t
* 
machöe
);

44 
°©e_t
* 
machöe_°ï
(
machöe_t
* 
machöe
, 
öput_t
 
öput
, * 
¨gt
, * 
¨gs
);

46 
°©e_t
* 
°©e_√w
(
sid_t
 
id
, (*
a˘i⁄
)(sid_t, *, *, *), (*
îr‹
)(sid_t, *, *), * 
¨gd
);

47 
	`°©e_de°roy
(
°©e_t
* 
°©e
);

48 
	`°©e_å™sôi⁄
(
°©e_t
* 
°©e
, sèã_t* 
√xt
, 
öput_t
 
öput
, (*
a˘i⁄
)(
sid_t
, sid_t, *, *, *), * 
¨gd
);

54 
	#machöe_cuºít
(
m±r
Ë((m±r)->
cuºít
)

	)

55 
	#machöe_c⁄ãxt
(
m±r
Ë((m±r)->
c⁄ãxt
)

	)

56 
	#°©e_id
(
•å
Ë((•å)->
id
)

	)

	@statefunc.c

1 
	~<as£π.h
>

2 
	~<°döt.h
>

4 
	~"v™_drivî.h
"

5 
	~"°©efunc.h
"

6 
	~"t˝.h
"

7 
	~"sockèbÀ.h
"

8 
	~"Áncy_di•œy.h
"

10 
	$do_c⁄√˘
(
sid_t
 
¥ev
, sid_à
√xt
, * 
c⁄ãxt
, * 
rÊags
, * 
∑ckë
) {

11 
t˝_sockë_t
* 
sock
 = (t˝_sockë_t*)
c⁄ãxt
;

12 
uöt32_t
 
öcomög_£q_num
 = 
	`gë_£qnum
(
	`ù_to_t˝
((*)
∑ckë
)) ;

14 
	`∆og
(
MSG_LOG
, "do_c⁄√˘", "Sëtög clõ¡'†ªcv_√xà™dÑecv_ªadÅÿ%d", 
öcomög_£q_num
 + 1);

16 
sock
->
ªcv_√xt
 = 
öcomög_£q_num
 + 1;

17 
sock
->
ªcv_ªad
 = 
öcomög_£q_num
 + 1;

20 
sock
->
£nd_√xt
++;

21 
sock
->
£nd_wrôãn
++;

22 
sock
->
£nd_u«
++;

24  
	`£nd_∑ckë_wôh_Êags
((
t˝_sockë_t
*)
c⁄ãxt
, *((
uöt8_t
*)
rÊags
));

25 
	}
}

27 
	$do_£nd_Êags
(
sid_t
 
¥ev
, sid_à
√xt
, * 
c⁄ãxt
, *
¨g
, *
å™_¨g
) {

28  
	`£nd_∑ckë_wôh_Êags
((
t˝_sockë_t
*)
c⁄ãxt
, *((
uöt8_t
*)
¨g
));

29 
	}
}

31 
	$do_li°í
(
sid_t
 
¥ev
, sid_à
√xt
, * 
c⁄ãxt
, *
¨g
, *
å™_¨g
) {

32 
t˝_sockë_t
 *
sock
 = (t˝_sockë_t*)
c⁄ãxt
;

33 
	`as£π
(
sock
);

35 
ù_node_t
 *
node
 = (ù_node_t*)
å™_¨g
;

36 
	`as£π
(
node
);

38 
	`sockèbÀ_put
(
node
->
tu∂e_èbÀ
, 
sock
, 
HALF_SOCKET
);

44 
	}
}

47 
	$Áû_wôh_ª£t
(
sid_t
 
id
, * 
c⁄ãxt
, * 
¨gs
) {

48 
t˝_sockë_t
 *
sock
 = (t˝_sockë_t*)
c⁄ãxt
;

49 
	`as£π
(
sock
);

51 
	`∆og
(
MSG_LOG
, "fail_with_reset", "failing socket %d. sendingá RSTánd moving backÅoÅhe closed state");

53 
	`t˝_£ndto
(
sock
, 
NULL
, 0, 
TCP_FLAG_RST
);

56 
	}
}

58 
	$has_°©us
(
w™t
, 
have
) {

59  !!(
w™t
 & 
have
);

60 
	}
}

62 
	$waô_f‹_evít
(
t˝_sockë_t
 *
sock
, 
°©us_bôs
) {

63 
	`±hªad_muãx_lock
(&
sock
->
lock
);

65 
	`∆og
(
MSG_LOG
, "waô_f‹_evít", "w™t: %#x, have: %#x", 
°©us_bôs
, 
sock
->
c⁄d_°©us
);

67 !(
	`has_°©us
(
°©us_bôs
, 
sock
->
c⁄d_°©us
))) {

68 
	`∆og
(
MSG_LOG
,"wait_for_event", "sleeping on cond var");

69 
	`±hªad_c⁄d_waô
(&
sock
->
c⁄d
, &sock->
lock
);

70 
	`∆og
(
MSG_LOG
,"wait_for_event", "cond var woke me up");

73 
	`±hªad_muãx_u∆ock
(&
sock
->
lock
);

74 
to_ªtu∫
 = 
sock
->
c⁄d_°©us
;

75 
sock
->
c⁄d_°©us
 = 0;

77  
to_ªtu∫
;

78 
	}
}

80 
	$nŸify
(
t˝_sockë_t
 *
sock
, 
°©us
) {

82 
	`∆og
(
MSG_LOG
,"notify", "attemptingÅo get socketÜock");

83 
	`±hªad_muãx_lock
(&
sock
->
lock
);

84 
sock
->
c⁄d_°©us
 = 
°©us
;

85 
	`∆og
(
MSG_LOG
,"nŸify", "ˇŒögÖthªad_c⁄d_sig«»(f‹ sockë %d)", 
sock
->
fd
);

86 
	`±hªad_c⁄d_sig«l
(&
sock
->
c⁄d
);

87 
	`±hªad_muãx_u∆ock
(&
sock
->
lock
);

89 
	}
}

91 
	$ö_e°ab
(
sid_t
 
s
, *
c⁄ãxt
, *
¨gA
, *
¨gB
) {

92 
t˝_sockë_t
 *
sock
 = (t˝_sockë_t*)
c⁄ãxt
;

93 
	`as£π
(
sock
);

95 
	`∆og
(
MSG_LOG
,"state:in_estab", "We'reÇow inÅheÉstablished state. AttemptedÅoÇotifyÅhe user");

98 if(
sock
->
∑ª¡
) {

99 
	`nŸify
(
sock
->
∑ª¡
, 
TCP_OK
);

101 
	`nŸify
(
sock
, 
TCP_OK
);

105 
	}
}

	@statefunc.h

1 #i‚de‡
__STATEFUNC_H_


2 
	#__STATEFUNC_H_


	)

4 
	~"t˝.h
"

5 
	~"°©e.h
"

7 
	#TCP_OK
 0x01

	)

8 
	#TCP_CONNECT_FAILED
 0x02

	)

9 
	#TCP_NEWSOCKET
 0x04

	)

11 
	gt˝_sockë__
;

13 
do_£nd_Êags
 (
sid_t
 
¥ev
, sid_à
√xt
, * 
c⁄ãxt
, *
¨g
, *
å™_¨g
);

14 
do_li°í
(
sid_t
 
¥ev
, sid_à
√xt
, * 
c⁄ãxt
, *
¨g
, *
å™_¨g
);

15 
waô_f‹_evít
(
t˝_sockë__
 *
sock
, 
°©us_bôs
);

16 
ö_e°ab
(
sid_t
 
s
, *
c⁄ãxt
, *
¨gA
, *
¨gB
);

17 
Áû_wôh_ª£t
(
sid_t
, *, *);

18 
do_c⁄√˘
(
sid_t
 
¥ev
, sid_à
√xt
, * 
c⁄ãxt
, * 
¨g
, * 
å™_¨g
);

	@tcp.c

1 
	~<as£π.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<checksum.h
>

5 
	~<±hªad.h
>

7 
	~"t˝.h
"

8 
	~"v™_drivî.h
"

9 
	~"Áncy_di•œy.h
"

10 
	~"°©e.h
"

11 
	~"t˝°©e.h
"

12 
	~"sockèbÀ.h
"

13 
	~"ù∑ckë.h
"

14 
	~"£q.h
"

16 
ù_node_t
 *
	gthis_node
;

18 
	$£nd_∑ckë_wôh_Êags
(
t˝_sockë_t
* 
sock
, 
uöt8_t
 
Êags
) {

19 
	`∆og
(
MSG_LOG
,"•wf", "sockë %d, fœg†¨ê%p", 
sock
->
fd
, 
Êags
);

22 
	`t˝_£ndto
(
sock
, 
NULL
, 0, 
Êags
);

26 
	}
}

28 
t˝_sockë_t
 *
	$gë_sockë_‰om_öt
(
s
) {

29 
	`as£π
(
s
 >= 0);

30 
	`as£π
(
s
 < 
MAXSOCKETS
);

31 
t˝_sockë_t
 *
sock
 = 
this_node
->
sockë_èbÀ
[
s
];

36  
sock
;

37 
	}
}

41 
	$t˝_£ndto
(
t˝_sockë_t
* 
sock
, * 
d©a_buf
, 
bufsize
, 
uöt8_t
 
Êags
) {

42 
	`as£π
(
sock
);

44 *
∑ckë
;

46 
∑ckë_size
 = 
	`buûd_t˝_∑ckë
(
d©a_buf
, 
bufsize
, 
sock
->
loˇl_p‹t
, sock->
ªmŸe_p‹t
 ,

47 
sock
->
£q_num
, sock->
ack_num
, 
Êags
, sock->
£nd_wödow_size
, &
∑ckë
);

49 
	`∆og
(
MSG_LOG
,"tcp_sendto", "now haveáÖacket of size %dÑeadyÅo be sentÅo dest_port %d",

50 
∑ckë_size
, 
sock
->
ªmŸe_p‹t
);

55 
ªtvÆ
 = 
	`v™_drivî_£ndto
(
sock
->
loˇl_node
, 
∑ckë
, 
∑ckë_size
, sock->
ªmŸe_node
, 
PROTO_TCP
);

57 
	`‰ì
(
∑ckë
);

59 i‡(
ªtvÆ
 == -1) {

60 
	`∆og
(
MSG_ERROR
,"tcp_sendto", "van_driver_sendtoÑeturned -1! AÅcpÖacket just gotÜost!");

65 
sock
->
£q_num
 +
bufsize
 + !!(
Êags
 & 
TCP_FLAG_SYN
)

66 + !!(
Êags
 & 
TCP_FLAG_FIN
)

67 + !!(
Êags
 & 
TCP_FLAG_RST
);

72 i‡(
Êags
 !
TCP_FLAG_ACK
) {

73 
sock
->
œ°_∑ckë
 = 
	`time
(
NULL
);

75 
sock
->
œ°_∑ckë
 = 0;

79  
ªtvÆ
;

80 
	}
}

88 
	$buûd_t˝_∑ckë
(*
d©a
, 
d©a_size
,

89 
uöt16_t
 
sour˚_p‹t
, uöt16_à
de°_p‹t
,

90 
uöt32_t
 
£q_num
, uöt32_à
ack_num
,

91 
uöt8_t
 
Êags
, 
uöt16_t
 
wödow
, **
hódî
) {

93 
tŸÆ_∑ckë_Àngth
 = 
d©a_size
 + 
TCP_HEADER_SIZE
;

95 *
hódî
 = 
	`mÆloc
(
tŸÆ_∑ckë_Àngth
);

96 
	`mem£t
(*
hódî
, 0, 
tŸÆ_∑ckë_Àngth
);

98 
	`∆og
(
MSG_LOG
, "build_tcp_packet", "src_port = %d, dest_port = %d, seq_num = %d,áck_num = %d, flags = %s%s%s%s , window = %d,Üen = %d",

99 
sour˚_p‹t
, 
de°_p‹t
, 
£q_num
, 
ack_num
, 
Êags
 & 
TCP_FLAG_SYN
 ? " SYN" : "", fœg†& 
TCP_FLAG_ACK
 ? " ACK" : "", fœg†& 
TCP_FLAG_RST
 ? " RST" : "", fœg†& 
TCP_FLAG_FIN
 ? " FIN" : "", 
wödow
, 
d©a_size
);

101 
	`£t_§˝‹t
(*
hódî
, 
sour˚_p‹t
);

102 
	`£t_de°p‹t
(*
hódî
, 
de°_p‹t
);

103 
	`£t_£qnum
(*
hódî
, 
£q_num
);

104 
	`£t_acknum
(*
hódî
, 
ack_num
);

106 
	`as£π
(
	`gë_£qnum
(*
hódî
Ë=
£q_num
);

107 
	`as£π
(
	`gë_acknum
(*
hódî
Ë=
ack_num
);

109 
	`£t_Êags
(*
hódî
, 
Êags
);

110 
	`£t_wödow
(*
hódî
, 
wödow
);

113 i‡(
d©a
Ë
	`mem˝y
(*
hódî
+
TCP_HEADER_SIZE
,d©a,
d©a_size
);

115 
	`£t_t˝checksum
(*
hódî
, 
	`ˇlcuœã_t˝_checksum
(
	`t˝_to_ù
(*header)));

117  
d©a_size
 + 
TCP_HEADER_SIZE
;

118 
	}
}

120 
uöt16_t
 
	$ˇlcuœã_t˝_checksum
(* 
∑ckë
) {

122 
	}
}

126 
	$v_t˝_de°roy
(
ù_node_t
 *
node
) {

127 
	`sockèbÀ_de°roy
(
node
->
tu∂e_èbÀ
);

128 
	}
}

132 
	$v_t˝_öô
(
ù_node_t
 *
node
) {

134 
x
;

135 
this_node
 = 
node
;

136 
x
 = 0; x < 
MAXSOCKETS
; x++) {

137 
this_node
->
sockë_èbÀ
[
x
] = 
NULL
;

141 
node
->
tu∂e_èbÀ
 = 
	`mÆloc
((
sockèbÀ_t
));

142 
	`sockèbÀ_öô
(
node
->
tu∂e_èbÀ
);

143 
	`∆og
(
MSG_LOG
, "v_t˝_öô", "Cª©ögÅu∂êèbÀ: %p", 
node
->
tu∂e_èbÀ
);

144 
	}
}

146 
	$sys_sockë
(
˛⁄e
) {

147 
s
 = -1;

148 
t˝_sockë_t
 *
sock
 = 
NULL
;

151 
x
;

152 
x
 = 0; x < 
MAXSOCKETS
; x++){

153 i‡(
this_node
->
sockë_èbÀ
[
x
] =
NULL
Ë{ 
s
 = x; ; }

156 i‡(
s
 == -1) {

161 
sock
 = 
	`mÆloc
((
t˝_sockë_t
) );

162 
	`as£π
(
sock
);

163 
this_node
->
sockë_èbÀ
[
s
] = 
sock
;

165 
sock
->
machöe
 = 
	`t˝m_√w
(sock, 
˛⁄e
);

168 
sock
->
fd
 = 
s
;

169 
sock
->
loˇl_p‹t
 = 
	`ønd
()%65535;

170 
sock
->
ªmŸe_p‹t
 = 0;

171 
sock
->
loˇl_node
 = 
this_node
;

172 
sock
->
ªmŸe_node
 = 0;

173 
sock
->
£q_num
 = 0;

174 
sock
->
ack_num
 = 0;

175 
sock
->
ˇn_h™dshake
 = 0;

176 
sock
->
∑ª¡
 = 
NULL
;

177 
sock
->
c⁄d_°©us
 = 0;

178 
sock
->
œ°_∑ckë
 = 0;

179 
sock
->
£nd_wödow_size
 = 
SEND_WINDOW_SIZE
;

180 
sock
->
ªcv_wödow_size
 = 
SEND_WINDOW_SIZE
;

182 
sock
->
£nd_u«
 = 0;

183 
sock
->
£nd_√xt
 = 0;

184 
sock
->
£nd_wrôãn
 = 0;

185 
sock
->
ªmŸe_Êow_wödow
 = 0;

187 
sock
->
ªcv_√xt
 = 0;

188 
sock
->
ªcv_ªad
 = 0;

190 
sock
->
r_buf
 = 
	`cbuf_√w
(
SEND_WINDOW_SIZE
*2);

191 
sock
->
s_buf
 = 
	`cbuf_√w
(
SEND_WINDOW_SIZE
*2);

193 
	`t˝_èbÀ_√w
(
this_node
, 
s
);

195 
	`±hªad_c⁄d_öô
(&
sock
->
c⁄d
, 
NULL
);

196 
	`±hªad_muãx_öô
(&
sock
->
lock
, 
NULL
);

198  
s
;

199 
	}
}

203 
	$v_sockë
() {

204  
	`sys_sockë
(0);

205 
	}
}

209 
	$v_böd
(
sockë
, 
node
, 
uöt16_t
 
p‹t
) {

210 
t˝_sockë_t
 *
sock
 = 
	`gë_sockë_‰om_öt
(
sockë
);

211 
uöt16_t
 
ﬁd_p‹t
;

213 
	`as£π
(
sock
->
machöe
);

214 i‡(
	`t˝m_°©e
(
sock
->
machöe
Ë=
ST_CLOSED
) {

215 
sock
->
loˇl_p‹t
 = 
p‹t
;

217 
	`∆og
(
MSG_ERROR
,"v_bind","Someone called v_bind, but I'mÇot inÅhe CLOSED state!");

222 
	}
}

226 
	$v_li°í
(
sockë
, 
backlog
 ) {

227 
t˝_sockë_t
 *
sock
 = 
	`gë_sockë_‰om_öt
(
sockë
);

229 
	`as£π
(
sock
->
machöe
);

231 
sock
->
£q_num
 = 1000;

233 i‡(
	`t˝m_evít
(
sock
->
machöe
, 
ON_PASSIVE_OPEN
, 
this_node
, 
NULL
)) {

234 
	`∆og
(
MSG_ERROR
,"socket:listen", "Uhh.Érror. Couldn'tÅransition states.Çoob");

239 
	}
}

244 
	$v_c⁄√˘
(
sockë
, 
node
, 
uöt16_t
 
p‹t
) {

245 
t˝_sockë_t
 *
sock
 = 
	`gë_sockë_‰om_öt
(
sockë
);

250 
sock
->
ªmŸe_node
 = 
node
;

251 
sock
->
ªmŸe_p‹t
 = 
p‹t
;

253 
sock
->
£q_num
 = 100;

254 
sock
->
ack_num
 = 0;

255 
sock
->
ˇn_h™dshake
 = 1;

257 
sock
->
£nd_u«
 = sock->
£q_num
;

258 
sock
->
£nd_√xt
 = sock->
£q_num
;

259 
sock
->
£nd_wrôãn
 = sock->
£q_num
;

262 
	`sockèbÀ_put
(
this_node
->
tu∂e_èbÀ
, 
sock
, 
FULL_SOCKET
);

264 
	`as£π
(
sock
->
machöe
);

265 i‡(
	`t˝m_evít
(
sock
->
machöe
, 
ON_ACTIVE_OPEN
, 
NULL
, NULL)) {

266 
	`∆og
(
MSG_ERROR
,"socket:connect","Uhh.Érror. Couldn'tÅransition states.Çoob");

270 
°©us
 = 
	`waô_f‹_evít
(
sock
, 
TCP_OK
 | 
TCP_CONNECT_FAILED
);

272 i‡(
°©us
 =
TCP_OK
)  0;

274 
	}
}

279 
	$v_ac˚±
(
sockë
) {

280 
t˝_sockë_t
 *
sock
 = 
	`gë_sockë_‰om_öt
(
sockë
);

284 
sock
->
ˇn_h™dshake
 = 1;

285 
°©us
 = 
	`waô_f‹_evít
(
sock
, 
TCP_OK
 | 
TCP_CONNECT_FAILED
);

286 
sock
->
ˇn_h™dshake
 = 0;

290 if(
°©us
 =
TCP_OK
) {

291  
sock
->
√w_fd
;

296 
	}
}

301 
	$v_ªad
(
sockë
, *
buf
, 
nbyã
) {

302 
t˝_sockë_t
 *
sock
 = 
	`gë_sockë_‰om_öt
(
sockë
);

308 
	}
}

312 
	$v_wrôe
(
sockë
, c⁄° *
buf
, 
nbyãs
) {

313 
t˝_sockë_t
 *
sock
 = 
	`gë_sockë_‰om_öt
(
sockë
);

315 
ˇn_£nd
 = 
	`gëAmou¡AbÀToAc˚±
(
sock
);

316 
wûl_£nd
 = 
	`MIN
(
ˇn_£nd
, 
nbyãs
);

318 
	`∆og
(
MSG_LOG
,"v_wrôe", "havêroomÅÿac˚± %d byã†o‡d©a. Wû»£nd %d byãs", 
ˇn_£nd
, 
wûl_£nd
);

320 
	`c›yD©aFromU£r
(
sock
, 
buf
, 
wûl_£nd
);

322 
ˇn_£nd
 = 
	`gëAmou¡AbÀToAc˚±
(
sock
);

323 
	`∆og
(
MSG_LOG
,"v_wrôe", "now,Öo°wrôe, c™ác˚± %d o‡d©a", 
ˇn_£nd
);

325  
wûl_£nd
;

326 
	}
}

330 
	$v_˛o£
(
sockë
) {

333 
	}
}

	@tcp.h

1 #i‚de‡
__TCP_H_


2 
	#__TCP_H_


	)

4 
	~<±hªad.h
>

6 
	~"t˝°©e.h
"

7 
	~"v™_drivî.h
"

8 
	~"cbuf„r.h
"

10 
	#LOCALBUFSIZE
 4096

	)

13 
	gt˝_machöe__
;

14 
	gù_node__
;

16 
	st˝_sockë__
 {

17 
t˝_machöe__
 *
	mmachöe
;

18 
	mˇn_h™dshake
;

19 
	mfd
;

20 
uöt32_t
 
	m£q_num
;

21 
uöt32_t
 
	mack_num
;

24 
ù_node__
 *
	mloˇl_node
;

25 
uöt16_t
 
	mloˇl_p‹t
;

26 
	mªmŸe_node
;

27 
uöt16_t
 
	mªmŸe_p‹t
;

29 
±hªad_c⁄d_t
 
	mc⁄d
;

30 
±hªad_muãx_t
 
	mlock
;

31 
	mc⁄d_°©us
;

33 
	m√w_fd
;

34 
t˝_sockë__
 *
	m∑ª¡
;

36 
cbuf_t
 *
	mr_buf
;

37 
cbuf_t
 *
	ms_buf
;

39 
	m£nd_u«
;

40 
	m£nd_√xt
;

41 
	m£nd_wrôãn
;

43 
	mªmŸe_Êow_wödow
;

45 
	mªcv_√xt
;

46 
	mªcv_ªad
;

48 
	mªcv_wödow_size
;

49 
	m£nd_wödow_size
;

51 
time_t
 
	mœ°_∑ckë
;

54 } 
	tt˝_sockë_t
;

56 
v_t˝_öô
();

57 
v_t˝_de°roy
();

58 
v_sockë
();

59 
v_böd
(
sockë
, 
node
, 
uöt16_t
 
p‹t
);

60 
v_li°í
(
sockë
, 
backlog
 );

61 
v_c⁄√˘
(
sockë
, 
node
, 
uöt16_t
 
p‹t
);

62 
v_ac˚±
(
sockë
);

63 
v_ªad
(
sockë
, *
buf
, 
nbyã
);

64 
v_wrôe
(
sockë
, c⁄° *
buf
, 
nbyã
);

65 
v_˛o£
(
sockë
);

67 
sys_sockë
(
˛⁄e
);

69 
buûd_t˝_∑ckë
(*
d©a
, 
d©a_size
,

70 
uöt16_t
 
sour˚_p‹t
, uöt16_à
de°_p‹t
,

71 
uöt32_t
 
£q_num
, uöt32_à
ack_num
,

72 
uöt8_t
 
Êags
, 
uöt16_t
 
wödow
, **
hódî
);

75 
t˝_£ndto
(
t˝_sockë_t
* 
sock
, * 
d©a_buf
, 
bufsize
, 
uöt8_t
 
Êags
);

76 
t˝_sockë_t
 *
gë_sockë_‰om_öt
(
s
);

77 
uöt16_t
 
ˇlcuœã_t˝_checksum
(* 
∑ckë
);

78 
£nd_∑ckë_wôh_Êags
(
t˝_sockë_t
* 
sock
, 
uöt8_t
 
Êags
);

	@tcppacket.h

1 #i‚de‡
TCPCONSTANTS_T


2 
	#TCPCONSTANTS_T


	)

4 
	~"ù∑ckë.h
"

6 
	#TCP_HEADER_SIZE
 20

	)

7 
	#MAXSOCKETS
 256

	)

8 
	#SEND_WINDOW_SIZE
 4096

	)

10 
	#TCP_FLAG_FIN
 0x01

	)

11 
	#TCP_FLAG_SYN
 0x02

	)

12 
	#TCP_FLAG_RST
 0x04

	)

13 
	#TCP_FLAG_ACK
 0x10

	)

18 
	#gë_§˝‹t
(
p
Ë(*((
uöt16_t
*)(’))))

	)

19 
	#£t_§˝‹t
(
p
,
v
Ëdÿ{
uöt16_t
 
_tmp
=(v); 
	`mem˝y
(’), &_tmp, 2);} 0)

	)

22 
	#gë_de°p‹t
(
p
Ë(*((
uöt16_t
*)(’)+2)))

	)

23 
	#£t_de°p‹t
(
p
,
v
Ëdÿ{
uöt16_t
 
_tmp
=(v); 
	`mem˝y
(’)+2, &_tmp, 2);} 0)

	)

26 
	#gë_£qnum
(
p
Ë(*((
uöt32_t
*)(’)+4)))

	)

27 
	#£t_£qnum
(
p
,
v
Ëdÿ{
uöt32_t
 
_tmp
=(v); 
	`mem˝y
(’)+4, &_tmp, 4);} 0)

	)

30 
	#gë_acknum
(
p
Ë(*((
uöt32_t
*)(’)+8)))

	)

31 
	#£t_acknum
(
p
,
v
Ëdÿ{
uöt32_t
 
_tmp
=(v); 
	`mem˝y
(’)+8, &_tmp, 4);} 0)

	)

34 
	#gë_wödow
(
p
Ë(*((
uöt16_t
*)(’)+14)))

	)

35 
	#£t_wödow
(
p
,
v
Ëdÿ{
uöt16_t
 
_tmp
=(v); 
	`mem˝y
(’)+14, &_tmp, 2); } 0)

	)

38 
	#gë_t˝checksum
(
p
Ë(*((
uöt16_t
*)(’)+16)))

	)

39 
	#£t_t˝checksum
(
p
,
v
Ëdÿ{
uöt16_t
 
_tmp
=(v); 
	`mem˝y
(’)+16, &_tmp, 2); } 0)

	)

41 
	#£t_Êags
(
p
,
v
Ë((’)[13] = ((
uöt8_t
)(v))))

	)

42 
	#gë_Êags
(
p
Ë((
uöt8_t
)’)[13])

	)

45 
	#gë_fö
(
p
Ë((
uöt8_t
)(’)[13])Ë& (1 << 0)

	)

46 
	#£t_fö
(
p
Ë((
uöt8_t
)(’)[13])Ë|(1 << 0)

	)

47 
	#˛ór_fö
(
p
Ë((
uöt8_t
)(’)[13])Ë&~(1 << 0)

	)

49 
	#gë_syn
(
p
Ë((
uöt8_t
)(’)[13])Ë& (1 << 1)

	)

50 
	#£t_syn
(
p
Ë((
uöt8_t
)(’)[13])Ë|(1 << 1)

	)

51 
	#˛ór_syn
(
p
Ë((
uöt8_t
)(’)[13])Ë&~(1 << 1)

	)

53 
	#gë_r°
(
p
Ë((
uöt8_t
)(’)[13])Ë& (1 << 2)

	)

54 
	#£t_r°
(
p
Ë((
uöt8_t
)(’)[13])Ë|(1 << 2)

	)

55 
	#˛ór_r°
(
p
Ë((
uöt8_t
)(’)[13])Ë&~(1 << 2)

	)

57 
	#gë_ack
(
p
Ë((
uöt8_t
)(’)[13])Ë& (1 << 4)

	)

58 
	#£t_ack
(
p
Ë((
uöt8_t
)(’)[13])Ë|(1 << 4)

	)

59 
	#˛ór_ack
(
p
Ë((
uöt8_t
)(’)[13])Ë&~(1 << 4)

	)

62 
	#gë_d©a_Àn
(
p
Ë(
	`gë_tŸÆ_Àn
’Ë- (
HEADER_SIZE
 + 
TCP_HEADER_SIZE
))

	)

63 
	#ù_to_t˝
(
p
Ë(’Ë+ 
HEADER_SIZE
)

	)

64 
	#t˝_to_ù
(
p
Ë(’Ë- 
HEADER_SIZE
)

	)

65 
	#ack_⁄ly
(
p
Ë((
	`gë_Êags
(
	`ù_to_t˝
’))==
TCP_FLAG_ACK
Ë&& (
	`gë_d©a_Àn
’)==0))

	)

	@tcpstate.c

1 
	~<as£π.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<°döt.h
>

6 
	~"t˝°©e.h
"

7 
	~"°©e.h
"

8 
	~"°©efunc.h
"

9 
	~"ù∑ckë.h
"

10 
	~"t˝∑ckë.h
"

11 
	~"Áncy_di•œy.h
"

13 * 
	$Æloc_Êags
(
uöt8_t
 
Êags
) {

14 * 
byã
 = 
	`mÆloc
(1);

17 
	`as£π
(
byã
);

20 *((
uöt8_t
*)
byã
Ë
Êags
;

22  
byã
;

23 
	}
}

26 
t˝_machöe_t
* 
	$t˝m_√w
(
t˝_sockë_t
* 
c⁄ãxt
, 
uöt8_t
 
˛⁄e
) {

27 
t˝_machöe_t
 *
machöe
 = 
	`mÆloc
((tcp_machine_t));

28 
°©e_t
 *
°_˛o£d
 = 
	`°©e_√w
(
ST_CLOSED
, 
NULL
, NULL, NULL),

29 *
°_syn_£¡
 = 
	`°©e_√w
(
ST_SYN_SENT
, 
NULL
, 
Áû_wôh_ª£t
, NULL),

30 *
°_syn_rcvd
 = 
	`°©e_√w
(
ST_SYN_RCVD
, 
NULL
, 
Áû_wôh_ª£t
, NULL),

31 *
°_li°í
 = 
	`°©e_√w
(
ST_LISTEN
, 
NULL
, NULL, NULL),

32 *
°_e°ab
 = 
	`°©e_√w
(
ST_ESTAB
, 
ö_e°ab
, 
Áû_wôh_ª£t
, 
NULL
),

33 *
°_fö_waô_1
 = 
	`°©e_√w
(
ST_FIN_WAIT1
, 
NULL
, NULL, NULL),

34 *
°_fö_waô_2
 = 
	`°©e_√w
(
ST_FIN_WAIT2
, 
NULL
, NULL, NULL),

35 *
°_time_waô
 = 
	`°©e_√w
(
ST_TIME_WAIT
, 
NULL
, NULL, NULL),

36 *
°_˛osög
 = 
	`°©e_√w
(
ST_CLOSING
, 
NULL
, NULL, NULL),

37 *
°_˛o£_waô
 = 
	`°©e_√w
(
ST_CLOSE_WAIT
, 
NULL
, NULL, NULL),

38 *
°_œ°_ack
 = 
	`°©e_√w
(
ST_LAST_ACK
, 
NULL
, NULL, NULL);

41 if(
˛⁄e
) {

42 
machöe
->
sm
 = 
	`machöe_√w
(
°_li°í
, 
c⁄ãxt
);

44 
machöe
->
sm
 = 
	`machöe_√w
(
°_˛o£d
, 
c⁄ãxt
);

48 
	`as£π
(
°_˛o£d
);

49 
	`as£π
(
°_syn_£¡
);

50 
	`as£π
(
°_syn_rcvd
);

51 
	`as£π
(
°_li°í
);

52 
	`as£π
(
°_e°ab
);

53 
	`as£π
(
°_fö_waô_1
);

54 
	`as£π
(
°_fö_waô_2
);

55 
	`as£π
(
°_time_waô
);

56 
	`as£π
(
°_˛osög
);

57 
	`as£π
(
°_˛o£_waô
);

58 
	`as£π
(
°_œ°_ack
);

59 
	`as£π
(
machöe
);

60 
	`as£π
(
machöe
->
sm
);

63 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_˛o£d
, 
°_syn_£¡
, 
ON_ACTIVE_OPEN
, 
do_£nd_Êags
, 
	`Æloc_Êags
(
TCP_FLAG_SYN
)));

64 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_˛o£d
, 
°_li°í
, 
ON_PASSIVE_OPEN
, 
do_li°í
, 
NULL
));

65 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_syn_£¡
, 
°_˛o£d
, 
ON_CLOSE
, 
NULL
, NULL));

66 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_syn_£¡
, 
°_syn_rcvd
, 
ON_RECV_SYN
, 
do_£nd_Êags
, 
	`Æloc_Êags
(
TCP_FLAG_ACK
)));

67 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_syn_£¡
, 
°_e°ab
, 
ON_RECV_SYN_ACK
, 
do_c⁄√˘
, 
	`Æloc_Êags
(
TCP_FLAG_ACK
)));

68 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_li°í
, 
°_˛o£d
, 
ON_CLOSE
, 
NULL
, NULL));

69 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_li°í
, 
°_syn_rcvd
, 
ON_RECV_SYN
, 
do_£nd_Êags
, 
	`Æloc_Êags
(
TCP_FLAG_SYN
 | 
TCP_FLAG_ACK
)));

70 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_syn_rcvd
, 
°_e°ab
, 
ON_RECV_ACK
, 
NULL
, NULL));

71 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_e°ab
, 
°_fö_waô_1
, 
ON_CLOSE
, 
do_£nd_Êags
, 
	`Æloc_Êags
(
TCP_FLAG_FIN
)));

72 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_e°ab
, 
°_˛o£_waô
, 
ON_RECV_FIN
, 
do_£nd_Êags
, 
	`Æloc_Êags
(
TCP_FLAG_ACK
)));

73 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_fö_waô_1
, 
°_˛osög
, 
ON_RECV_FIN
, 
do_£nd_Êags
, 
	`Æloc_Êags
(
TCP_FLAG_ACK
)));

74 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_fö_waô_1
, 
°_time_waô
, 
ON_RECV_FIN_ACK
, 
do_£nd_Êags
, 
	`Æloc_Êags
(
TCP_FLAG_ACK
)));

75 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_fö_waô_1
, 
°_fö_waô_2
, 
ON_RECV_ACK
, 
NULL
, NULL));

76 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_˛o£_waô
, 
°_œ°_ack
, 
ON_CLOSE
, 
do_£nd_Êags
, 
	`Æloc_Êags
(
TCP_FLAG_FIN
)));

77 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_fö_waô_2
, 
°_time_waô
, 
ON_RECV_FIN
, 
do_£nd_Êags
, 
	`Æloc_Êags
(
TCP_FLAG_ACK
)));

78 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_˛osög
, 
°_time_waô
, 
ON_RECV_ACK
, 
NULL
, NULL));

79 
	`as£π
(0 =
	`°©e_å™sôi⁄
(
°_time_waô
, 
°_˛o£d
, 
ON_TIMEOUT
, 
NULL
, NULL));

81  
machöe
;

82 
	}
}

84 
	$t˝m_de°roy
(
t˝_machöe_t
* 
machöe
) {

85 
	`machöe_de°roy
(
machöe
->
sm
);

86 
	}
}

88 
	$t˝m_evít
(
t˝_machöe_t
* 
machöe
, 
töput_t
 
evít
, * 
¨gt
, * 
¨gs
) {

89 
ªsu…
 = (
NULL
 =
	`machöe_°ï
(
machöe
->
sm
, 
evít
, 
¨gt
, 
¨gs
));

91 
	`upd©e_t˝_èbÀ
(
machöe
->
sm
->
c⁄ãxt
);

92 
	`∆og
(
MSG_LOG
, "t˝m_evít", "Sockë %dÇow i¿°©ê%s", ((
t˝_sockë_t
*)
machöe
->
sm
->
c⁄ãxt
)->
fd
, 
	`t˝m_°r°©e
(machöe->sm->
cuºít
->
id
));

94  
ªsu…
;

95 
	}
}

97 
	$t˝m_∑ckë_to_öput
(c⁄° * 
∑ckë
) {

99 if(
	`gë_d©a_Àn
(
	`t˝_to_ù
(
∑ckë
)) != 0) {

100 
	`∆og
(
MSG_ERROR
, "t˝m_∑ckë_to_öput", "∑ckëÜígth mu° bêzîÿ(gŸ %d)", 
	`gë_d©a_Àn
(
	`t˝_to_ù
(
∑ckë
)));

101  
ON_INVALID
;

105 
	`gë_Êags
(
∑ckë
)) {

106 
TCP_FLAG_ACK
:

107  
ON_RECV_ACK
;

108 
TCP_FLAG_SYN
:

109  
ON_RECV_SYN
;

110 
TCP_FLAG_FIN
:

111  
ON_RECV_FIN
;

112 
TCP_FLAG_RST
:

113  
ON_RECV_RST
;

114 
TCP_FLAG_SYN
 | 
TCP_FLAG_ACK
:

115  
ON_RECV_SYN_ACK
;

116 
TCP_FLAG_FIN
 | 
TCP_FLAG_ACK
:

117  
ON_RECV_FIN_ACK
;

119 
	`∆og
(
MSG_ERROR
, "t˝m_∑ckë_to_öput", "övÆid fœgs: %d", 
	`gë_Êags
(
∑ckë
));

120  
ON_INVALID
;

122 
	}
}

124 c⁄° * 
	$t˝m_°r°©e
(
°©e
) {

125 
°©e
) {

126 
ST_CLOSED
:

129 
ST_SYN_SENT
:

132 
ST_SYN_RCVD
:

135 
ST_LISTEN
:

138 
ST_ESTAB
:

141 
ST_FIN_WAIT1
:

144 
ST_FIN_WAIT2
:

147 
ST_TIME_WAIT
:

150 
ST_CLOSING
:

153 
ST_CLOSE_WAIT
:

156 
ST_LAST_ACK
:

162 
	}
}

	@tcpstate.h

1 #i‚de‡
TCPSTATE_H


2 
	#TCPSTATE_H


	)

4 
	~"°©e.h
"

5 
	~"°©efunc.h
"

6 
	~"t˝.h
"

10 
	mST_CLOSED
,

11 
	mST_SYN_SENT
,

12 
	mST_SYN_RCVD
,

13 
	mST_LISTEN
,

14 
	mST_ESTAB
,

15 
	mST_FIN_WAIT1
,

16 
	mST_FIN_WAIT2
,

17 
	mST_TIME_WAIT
,

18 
	mST_CLOSING
,

19 
	mST_CLOSE_WAIT
,

20 
	mST_LAST_ACK


21 } 
	ttsid_t
;

25 
	mON_ACTIVE_OPEN
,

26 
	mON_PASSIVE_OPEN
,

27 
	mON_CLOSE
,

28 
	mON_TIMEOUT
,

29 
	mON_RECV_ACK
,

30 
	mON_RECV_SYN
,

31 
	mON_RECV_FIN
,

32 
	mON_RECV_RST
,

33 
	mON_RECV_SYN_ACK
,

34 
	mON_RECV_FIN_ACK
,

35 
	mON_INVALID
,

36 } 
	ttöput_t
;

38 
	st˝_machöe__
 {

39 
machöe_t
* 
	msm
;

40 } 
	tt˝_machöe_t
;

43 
	gt˝_sockë__
;

46 
t˝_machöe_t
* 
t˝m_√w
(
t˝_sockë__
* 
c⁄ãxt
, 
uöt8_t
 
˛⁄e
);

47 
t˝m_de°roy
(
t˝_machöe_t
* 
machöe
);

48 
t˝m_evít
(
t˝_machöe_t
* 
machöe
, 
töput_t
 
evít
, * 
¨gt
, * 
¨gs
);

49 
t˝m_∑ckë_to_öput
(c⁄° * 
∑ckë
);

50 c⁄° * 
t˝m_°r°©e
(
°©e
);

52 
	#t˝m_°©e
(
m
Ë((m)->
sm
->
cuºít
->
id
)

	)

53 
	#t˝m_ˇnböd
(
m
Ë(
	`t˝m_°©e
(mË=
ST_CLOSED
)

	)

54 
	#t˝m_e°ab
(
m
Ë(
	`t˝m_°©e
(mË=
ST_ESTAB
)

	)

55 
	#t˝m_fú°ªcv
(
m
Ë(
	`t˝m_°©e
(mË=
ST_LISTEN
)

	)

56 
	#t˝m_syn£¡
(
m
Ë(
	`t˝m_°©e
(mË=
ST_SYN_SENT
)

	)

	@van_driver.c

6 
	~<°dlib.h
>

7 
	~<°dio.h
>

8 
	~<°rög.h
>

9 
	~<uni°d.h
>

10 
	~<v™.h
>

11 
	~<as£π.h
>

12 
	~<±hªad.h
>

13 
	~<bqueue.h
>

14 
	~<î∫o.h
>

15 
	~<°rög.h
>

16 
	~<°döt.h
>

17 
	~<¨∑/öë.h
>

18 
	~<checksum.h
>

19 
	~<time.h
>

20 
	~<°d¨g.h
>

22 
	~<cur£s.h
>

23 
	~<∑√l.h
>

24 
	~<míu.h
>

26 
	~"πabÀ.h
"

27 
	~"v™_drivî.h
"

28 
	~"ù∑ckë.h
"

29 
	~"t˝∑ckë.h
"

30 
	~"t˝.h
"

31 
	~"sockèbÀ.h
"

33 
	~"Áncy_di•œy.h
"

36 
buûdPackë
(
ù_node_t
 *
node
, *
d©a
, 
d©a_size
, 
to
, **
hódî
, 
uöt8_t
 
¥Ÿo
);

37 
£nd_rouã_èbÀ
(
ù_node_t
 *
node
);

38 
bqueue_po‹ly_im∂emíãd_˛ónup
(
bqueue_t
* 
queue
);

40 *
	gty≥s
[] = {

53 
	$bqueue_po‹ly_im∂emíãd_˛ónup
(
bqueue_t
* 
queue
) {

54 #ifde‡
__LOSER__


55 
©m
 = 0xDEADBEEF;

60 
queue
->
q_cou¡
 = 0;

61 
	`±hªad_muãx_u∆ock
(&
queue
->
q_mtx
);

62 
	}
}

68 
	$¥öt_∑ckë
 (*
buf
, 
Àn
) {

69 
i
, 
j
;

71 
	`¥ötf
("\n--\nPacket Dump:\n--\n");

73 
i
 = 0; i < 32; i++) {

74 
	`¥ötf
("%02d ",
i
);

76 
	`¥ötf
("\n\n");

78 
i
 = 0; i < 
Àn
; i++) {

79 
j
 = 7; j >= 0; j--) {

80 
e
 = 
buf
[
i
] & (1 << 
j
);

81 
	`¥ötf
("%X ", 
e
>0?1:0);

83 i‡((
i
+1)%4 =0Ë
	`¥ötf
("\n");

86 
	`¥ötf
("\n--\n");

87 
	}
}

92 
	$gë_if_°©e
(
ù_node_t
 *
node
, 
iÁ˚
) {

93 
lök_°©e
;

95 
	`v™_node_gëif›t
(
node
->
v™_node
, 
iÁ˚
, 
VAN_IO_UPSTATE
, (*)&
lök_°©e
, ());

97  
lök_°©e
;

98 
	}
}

105 
	$£t_if_°©e
(
ù_node_t
 *
node
, 
iÁ˚
, 
lök_°©e
) {

107 
	`v™_node_£tif›t
(
node
->
v™_node
, 
iÁ˚
, 
VAN_IO_UPSTATE
, (*)&
lök_°©e
, ());

109  
lök_°©e
;

110 
	}
}

113 
	$do_ªcv_e°ab
(
t˝_sockë_t
* 
sock
, * 
∑ckë
) {

115 
uöt8_t
 
Êags
 = 
	`gë_Êags
(
	`ù_to_t˝
(
∑ckë
));

116 
uöt32_t
 
£q_num
 = 
	`gë_£qnum
(
	`ù_to_t˝
(
∑ckë
));

117 
uöt32_t
 
ack_num
 = 
	`gë_acknum
(
	`ù_to_t˝
(
∑ckë
));

118 
uöt32_t
 
d©a_size
 = 
	`gë_d©a_Àn
(
∑ckë
);

121 i‡–(
d©a_size
 > 0Ë&& ((
Êags
 =0Ë|| (Êag†=
TCP_FLAG_ACK
))) {

123 i‡(
	`isVÆidSeqNum
(
sock
, 
£q_num
, 
d©a_size
)) {

125 
	`∆og
(
MSG_LOG
,"do_ªcv_e°ab", "gŸá d©®∑ckë o‡sizê%d", 
d©a_size
 );

127 i‡(
	`haveRoomToRe˚ive
(
sock
, 
d©a_size
)) {

129 i‡(
	`isNextSeqNum
(
sock
, 
£q_num
)) {

131 
	`∆og
(
MSG_LOG
, "do_ªcv_e°ab", "thi†i†thê√xà£quí˚Çumbî we'ªÉx≥˘ög. bumpög sock->ack_num from %dÅÿ%d", 
sock
->
ack_num
, 
£q_num
 + 
d©a_size
);

132 
sock
->
ack_num
 = 
£q_num
 + 
d©a_size
;

137 
	`t˝_£ndto
(
sock
, 
NULL
, 0, 
TCP_FLAG_ACK
);

143 
	`∆og
(
MSG_WARNING
, "do_recv_estab", "got data, but i haveÇoÑoom for it!");

147 
	`∆og
(
MSG_LOG
, "do_recv_estab", "gotá dataÖacket, butÅhe SEQÇumber was off! ignoreÅhisÖacket!");

150 } i‡(
	`ack_⁄ly
(
∑ckë
)) {

151 
ﬁd_£nd_u«
 = 
sock
->
£nd_u«
;

152 
	`gŸAckF‹
(
sock
, 
ack_num
);

153 
	`∆og
(
MSG_LOG
, "do_ªv_e°ab", "£nd_u«=%d síd_√xt=%d síd_wrôãn=%d síd_ªmŸe_Êow_wödow=%d", 
sock
->
£nd_u«
, sock->
£nd_√xt
, sock->
£nd_wrôãn
, sock->
ªmŸe_Êow_wödow
);

159 
	}
}

162 *
	$t˝_w©chdog
(*
¨g
) {

163 
ù_node_t
 *
node
 = (ù_node_t*)
¨g
;

164 
	`as£π
(
¨g
);

166 
i
;

169 
	`¶ìp
(1);

170 
i
 = 0; i < 
MAXSOCKETS
; i++) {

171 i‡(
node
->
sockë_èbÀ
[
i
] =
NULL
) ;

172 
t˝_sockë_t
 *
sock
 = 
node
->
sockë_èbÀ
[
i
];

173 
	`upd©e_t˝_èbÀ
(
sock
);

174 i‡((
sock
->
œ°_∑ckë
 > 0Ë&& (
	`time
(
NULL
) - sock->last_packet > 4 )) {

175 
	`∆og
(
MSG_WARNING
, "t˝_w©chdog", "W©chdogÅimî o¿sockë %d. Doög somëhögábouàô...", 
sock
->
fd
);

177 i‡(
	`t˝m_°©e
(
sock
->
machöe
Ë=
ST_SYN_SENT
) {

179 
	`∆og
(
MSG_WARNING
, "tcp_watchdog", "We're in SYN_SENT.ássumingÖacketloss,ándÑetransmittingÅhe SYN");

180 
	`£nd_∑ckë_wôh_Êags
((*)
sock
, 
TCP_FLAG_SYN
);

182 } i‡(
	`t˝m_°©e
(
sock
->
machöe
Ë=
ST_SYN_RCVD
) {

184 
	`∆og
(
MSG_WARNING
, "tcp_watchdog", "We're in SYN_RCVD.ássumingÖacketloss,ándÑetransmittingÅhe SYNACK");

185 
	`£nd_∑ckë_wôh_Êags
((*)
sock
, 
TCP_FLAG_SYN
 | 
TCP_FLAG_ACK
);

188 
	`∆og
(
MSG_WARNING
, "t˝_w©chdog", "We'ª i¿°©ê%s, buànŸ suª wh©Åÿdo! Dißblög w©chdog f‹Çow...", 
	`t˝m_°r°©e
(
	`t˝m_°©e
(
sock
->
machöe
)));

189 
sock
->
œ°_∑ckë
 = 0;

202 
	}
}

205 *
	$t˝_£nd_thªad
(* 
¨g
) {

206 
fd
;

207 
t˝_sockë_t
* 
sock
;

208 
amou¡
=0;

210 
	`∆og
(
MSG_LOG
, "tcp_send_thread", "started");

213 
fd
=0; fd < 
MAXSOCKETS
; fd++) {

214 if(!(
sock
 = 
	`gë_sockë_‰om_öt
(
fd
))) {

221 i‡((
amou¡
 = 
	`gëAmou¡AbÀToSíd
(
sock
)) > 0) {

222 
	`∆og
(
MSG_LOG
,"t˝_£nd_thªad", "Thîê¨ê%d byã†waôögÅÿbê£¡ o¿sockë %d", 
amou¡
, 
fd
);

223 *
d©a
 = 
	`mÆloc
(
amou¡
);

224 
d©a_ªtu∫ed
 = 
	`d©aFromBuf„rToNëw‹k
(
sock
, 
d©a
,
amou¡
);

225 
	`as£π
(
d©a_ªtu∫ed
 = 
amou¡
);

226 
	`t˝_£ndto
(
sock
, 
d©a
, 
amou¡
, 0);

232 
	`¶ìp
(1);

235 
	`±hªad_exô
(
NULL
);

236 
	}
}

239 *
	$t˝_thªad
(* 
¨g
) {

240 
ù_node_t
 *
node
 = (ù_node_t*)
¨g
;

241 
t˝_sockë_t
 *
ﬁd_sock
;

242 *
∑ckë
;

243 
uöt16_t
 
§c_p‹t
;

244 
uöt16_t
 
de°_p‹t
;

245 
uöt8_t
 
§c
;

246 
uöt8_t
 
de°
;

247 
uöt8_t
 
Êags
;

248 
uöt32_t
 
öcomög_£q_num
;

251 
	`±hªad_˛ónup_push
(((*)(*))
bqueue_po‹ly_im∂emíãd_˛ónup
, 
node
->
t˝_q
);

252 
	`bqueue_dequeue
(
node
->
t˝_q
, (*)&
∑ckë
);

253 
	`±hªad_˛ónup_p›
(0);

255 
	`∆og
(
MSG_LOG
,"tcp", "tcpÅhread dequeuedáÅcpÖacket");

257 
§c_p‹t
 = 
	`gë_§˝‹t
(
	`ù_to_t˝
(
∑ckë
));

258 
de°_p‹t
 = 
	`gë_de°p‹t
(
	`ù_to_t˝
(
∑ckë
));

259 
§c
 = 
	`gë_§c
(
∑ckë
);

260 
de°
 = 
	`gë_d°
(
∑ckë
);

261 
Êags
 = 
	`gë_Êags
(
	`ù_to_t˝
(
∑ckë
));

262 
öcomög_£q_num
 = 
	`gë_£qnum
(
	`ù_to_t˝
(
∑ckë
));

264 
	`∆og
(
MSG_LOG
, "tcp", "source = %d, dest = %d, src_port = %d, dest_port = %d, flags = %s%s%s%s , window = %d,Üen = %d, seqnum=%d,ácknum=%d",

265 
§c
, 
de°
, 
§c_p‹t
, 
de°_p‹t
, 
Êags
 & 
TCP_FLAG_SYN
 ? " SYN" : "", fœg†& 
TCP_FLAG_ACK
 ? " ACK" : "", fœg†& 
TCP_FLAG_RST
 ? " RST" : "", fœg†& 
TCP_FLAG_FIN
 ? " FIN" : "", 
	`gë_wödow
(
	`ù_to_t˝
(
∑ckë
)), 
	`gë_d©a_Àn
’ackë), 
	`gë_£qnum
(ù_to_t˝’ackë)), 
	`gë_acknum
(ip_to_tcp(packet)));

267 
t˝_sockë_t
 *
sock
 = 
	`sockèbÀ_gë
(
node
->
tu∂e_èbÀ
, 
de°
, 
de°_p‹t
, 
§c
, 
§c_p‹t
, 
FULL_SOCKET
);

274 i‡(
sock
 =
NULL
) {

275 
	`∆og
(
MSG_WARNING
, "tcp_thread", "We gotáÅcpÖacket, but it doesn't seemÅo haveá full socketássociated with it. Halfchecking...");

277 
sock
 = 
	`sockèbÀ_gë
(
node
->
tu∂e_èbÀ
, 
de°
, 
de°_p‹t
, 0, 0, 
HALF_SOCKET
);

280 i‡(
sock
 =
NULL
) {

281 
	`∆og
(
MSG_ERROR
,"tcp_thread", "Ok,Çotá half socketÉither. Discarding.");

282 
	`as£π
(
∑ckë
);

283 
	`‰ì
(
∑ckë
);

289 if(!
sock
->
ˇn_h™dshake
) {

290 
	`∆og
(
MSG_ERROR
, "tcp_thread", "Foundá half socket, but socketÇot ináccept state. Discarding.");

291 
	`as£π
(
∑ckë
);

292 
	`‰ì
(
∑ckë
);

298 
sock
->
√w_fd
 = 
	`sys_sockë
(1);

300 
ﬁd_sock
 = 
sock
;

301 
sock
 = 
	`gë_sockë_‰om_öt
(sock->
√w_fd
);

303 
	`as£π
(
sock
);

305 
sock
->
∑ª¡
 = 
ﬁd_sock
;

306 
sock
->
loˇl_node
 = 
ﬁd_sock
->local_node;

307 
sock
->
loˇl_p‹t
 = 
ﬁd_sock
->local_port;

308 
sock
->
ªmŸe_p‹t
 = 
§c_p‹t
;

309 
sock
->
ªmŸe_node
 = 
§c
;

310 
sock
->
£q_num
 = 1000;

311 
sock
->
£nd_u«
 = sock->
£q_num
 + 1;

312 
sock
->
£nd_√xt
 = sock->
£q_num
 + 1;

313 
sock
->
£nd_wrôãn
 = sock->
£q_num
 + 1;

315 
sock
->
ªcv_√xt
 = 
öcomög_£q_num
 + 1;

316 
sock
->
ªcv_ªad
 = 
öcomög_£q_num
 + 1;

318 
	`sockèbÀ_put
(
node
->
tu∂e_èbÀ
, 
sock
, 
FULL_SOCKET
);

323 
sock
->
ªmŸe_Êow_wödow
 = 
	`gë_wödow
(
	`ù_to_t˝
(
∑ckë
));

327 if(
	`t˝m_e°ab
(
sock
->
machöe
)) {

328 
	`∆og
(
MSG_LOG
, "tcp_thread", "connectionÉstablished! using sliding windowÖrotocol.");

329 
	`do_ªcv_e°ab
(
sock
, 
∑ckë
);

333 if(!
	`t˝m_syn£¡
(
sock
->
machöe
Ë&& !
	`t˝m_fú°ªcv
(sock->machöeË&& 
	`gë_£qnum
(
	`ù_to_t˝
(
∑ckë
)Ë!sock->
ack_num
) {

334 
	`∆og
(
MSG_WARNING
, "tcp_thread", "Invalid sequenceÇumber!");

339 
sock
->
ack_num
 = 
	`gë_£qnum
(
	`ù_to_t˝
(
∑ckë
)Ë+ (
Êags
 !
TCP_FLAG_ACK
);

341 
	`∆og
(
MSG_LOG
, "tcp_thread", "SocketÇot inÉstablished state; stepping state machine.");

344 if(
	`t˝m_evít
(
sock
->
machöe
, 
	`t˝m_∑ckë_to_öput
(
	`ù_to_t˝
(
∑ckë
)),Öacket,Öacket)) {

345 
	`∆og
(
MSG_WARNING
, "tcp_thread", "InvalidÅransitionÑequested; fail!");

351 
	}
}

355 *
	$lök_°©e_thªad
 (*
¨g
) {

356 
ù_node_t
 *
node
 = (ù_node_t*)
¨g
;

357 
i
, 
nifs
, 
lök_°©e
, 
age
, 
timedout
;

359 
nifs
 = 
	`v™_node_nifs
(
node
->
v™_node
);

361 
	`∆og
(
MSG_LOG
,"lök°©e","Now m⁄ô‹ögÅhêlök sèã f‹ %d i¡îÁ˚s...", 
nifs
);

364 
	`±hªad_ã°ˇn˚l
();

365 
	`¶ìp
(1);

367 
i
 = 0; i < 
nifs
; i++) {

368 
	`v™_node_gëif›t
(
node
->
v™_node
, 
i
, 
VAN_IO_UPSTATE
, (*)&
lök_°©e
, ());

369 
	`upd©e_lök_löe
(
i
,
lök_°©e
);

371 
	`±hªad_muãx_lock
(&
node
->
iÁ˚s
[
i
].
age_lock
);

372 
age
 = 
node
->
iÁ˚s
[
i
].age;

373 
timedout
 = 
node
->
iÁ˚s
[
i
].
timed_out
;

374 
	`±hªad_muãx_u∆ock
(&
node
->
iÁ˚s
[
i
].
age_lock
);

376 i‡((
lök_°©e
Ë&& !
timedout
 && ((
	`time
(
NULL
Ë- 
age
Ë> 
LINK_TIMEOUT
)) {

377 
	`πabÀ_pois⁄_iÁ˚
(
node
->
rouã_èbÀ
, 
i
);

379 
	`±hªad_muãx_lock
(&
node
->
iÁ˚s
[
i
].
age_lock
);

380 
node
->
iÁ˚s
[
i
].
timed_out
 = 1;

381 
	`±hªad_muãx_u∆ock
(&
node
->
iÁ˚s
[
i
].
age_lock
);

383 
	`∆og
(
MSG_WARNING
,"lök°©e","Havn'àhórdánythög o¿öãrÁ˚ %d i¿ovî %d sec⁄ds. Wû»nowÖois⁄áŒÑouã†th© u£Åhi†öãrÁ˚!", 
i
, 
LINK_TIMEOUT
);

384 
	`£nd_rouã_èbÀ
(
node
);

385 
	`πabÀ_dump
(
node
->
rouã_èbÀ
);

388 i‡(
lök_°©e
 =
node
->
iÁ˚s
[
i
].
cur_°©e
) ;

390 i‡((
lök_°©e
Ë&& (
node
->
iÁ˚s
[
i
].
cur_°©e
 == 0)) {

391 
	`∆og
(
MSG_LOG
,"lök°©e","[Nodê%d] Thêlök o¿iÁ˚ %d ju° camêup!", 
node
->
v™_node
->
vn_num
, 
i
);

392 
	`±hªad_muãx_lock
(&
node
->
iÁ˚s
[
i
].
lock
);

393 
	`±hªad_c⁄d_sig«l
(&
node
->
iÁ˚s
[
i
].
c⁄d
);

394 
	`±hªad_muãx_u∆ock
(&
node
->
iÁ˚s
[
i
].
lock
);

396 
	`£nd_rouã_èbÀ
(
node
);

398 } i‡–(!
lök_°©e
Ë&& (
node
->
iÁ˚s
[
i
].
cur_°©e
 == 1)) {

399 
	`∆og
(
MSG_LOG
,"lök°©e","[Nodê%d] Thêlök o¿iÁ˚ %d ju° wíàdown!", 
node
->
v™_node
->
vn_num
, 
i
);

400 
	`πabÀ_pois⁄_iÁ˚
(
node
->
rouã_èbÀ
, 
i
);

403 
	`£nd_rouã_èbÀ
(
node
);

408 
node
->
iÁ˚s
[
i
].
cur_°©e
 = 
lök_°©e
;

414  
NULL
;

415 
	}
}

421 *
	$rù_m⁄ô‹
 (*
¨g
) {

422 
ù_node_t
 *
node
 = (ù_node_t*)
¨g
;

424 
‰om
;

425 
iÁ˚
;

427 
πabÀ_t
 *
√w_πabÀ
;

428 
tŸÆ_Àngth
;

429 
rù_∑ckë_t
 *
rù
;

432 
	`±hªad_˛ónup_push
(((*)(*))
bqueue_po‹ly_im∂emíãd_˛ónup
, 
node
->
rù_q
);

433 
	`bqueue_dequeue
(
node
->
rù_q
, (*)&
rù
);

434 
	`±hªad_˛ónup_p›
(0);

436 
‰om
 = 
	`gë_§c
(
rù
->
∑ckë
);

437 
tŸÆ_Àngth
 = 
	`gë_tŸÆ_Àn
(
rù
->
∑ckë
);

438 
iÁ˚
 = 
rù
->iface;

443 i‡(
	`upd©e_rouã
(
node
, 
‰om
, 
iÁ˚
, 1, from)) {

444 
	`∆og
(
MSG_LOG
,"rù", "Duêtÿ™ incomögÖackë, foundáÇewÑouãÅÿ%d o¿öãrÁ˚ %d", 
‰om
, 
iÁ˚
);

445 
	`£nd_rouã_èbÀ
(
node
);

451 
	`πabÀ_dump
(
node
->
rouã_èbÀ
);

454 
√w_πabÀ
 = 
	`πabÀ_un£rülize
(
rù
->
∑ckë
 + 
HEADER_SIZE
 , 
tŸÆ_Àngth
 - HEADER_SIZE);

457 if(
	`πabÀ_mîge
(
node
->
v™_node
->
vn_num
,Çode->
rouã_èbÀ
, 
√w_πabÀ
, 
	`lookup_rouã
“ode, 
‰om
))) {

458 
	`∆og
(
MSG_LOG
,"rip","ItáppearsÅhatÑtable_merge has updated ourÜocalÑouteÅable. Broadcasting itÅoÉveryone");

459 
	`£nd_rouã_èbÀ
(
node
);

469 
	`πabÀ_de°roy
(
√w_πabÀ
);

470 
	`‰ì
(
√w_πabÀ
);

471 
	`‰ì
(
rù
->
∑ckë
);

472 
	`‰ì
(
rù
);

476 
	}
}

482 
	$£nd_rouã_èbÀ
(
ù_node_t
 *
node
) {

484 
πabÀ_size
, 
nifs
, 
i
;

485 
nifs
 = 
	`v™_node_nifs
(
node
->
v™_node
);

486 
ªtvÆ
, 
∑ckë_size
;

487 *
∑ckë
;

488 *
πabÀ
;

489 
v™addr_t
 
va
;

490 
va
.
va_ty≥
 = 
AT_P2P
;

492 
i
 = 0; i < 
nifs
; i++) {

494 i‡(
	`gë_if_°©e
(
node
, 
i
) == 0) ;

502 
πabÀ
 = 
	`πabÀ_£rülize
(
node
->
rouã_èbÀ
, &
πabÀ_size
, (node->
iÁ˚s
[
i
].
≥î
 >= 0?Çode->ifaces[i].peer: -1) );

504 
∑ckë_size
 = 
	`buûdPackë
(
node
, 
πabÀ
, 
πabÀ_size
, 0 , &
∑ckë
, 
PROTO_RIP
);

507 
ªtvÆ
 = 
	`v™_node_£nd
(
node
->
v™_node
, 
i
,
∑ckë
, 
∑ckë_size
, 0, &
va
);

509 
	`‰ì
(
∑ckë
);

513 
	`‰ì
 (
πabÀ
);

516 
	}
}

523 *
	$rù
 (*
¨g
) {

524 
ù_node_t
 *
node
 = (ù_node_t*)
¨g
;

526 
	`¶ìp
(4);

527 
	`∆og
(
MSG_LOG
,"rip","ripÅhread started");

530 
	`±hªad_ã°ˇn˚l
();

531 
	`¶ìp
(
RIP_SLEEP
);

532 
	`£nd_rouã_èbÀ
(
node
);

536 
	}
}

542 *
	$£ndî
 (*
¨g
) {

543 
ù_node_t
 *
this_node
 = (ù_node_t*)
¨g
;

544 
ù_∑ckë_t
 *
d©a
;

545 
v™addr_t
 
va
;

546 
ªtvÆ
, 
rvÆ
;

548 
	`∆og
(
MSG_LOG
,"sender","SenderingÅhread started!");

550 
this_node
->
£ndög_q
 = 
	`mÆloc
((
bqueue_t
));

551 
	`bqueue_öô
(
this_node
->
£ndög_q
);

556 
	`±hªad_˛ónup_push
(((*)(*))
bqueue_po‹ly_im∂emíãd_˛ónup
, 
this_node
->
£ndög_q
);

557 
rvÆ
 = 
	`bqueue_dequeue
(
this_node
->
£ndög_q
, (*)&
d©a
);

558 
	`±hªad_˛ónup_p›
(0);

560 i‡(
rvÆ
 =-
EINVAL
) {

561 
	`∆og
(
MSG_ERROR
,"sender", "our queue disappeared!");

562 
	`exô
(1);

564 
	`∆og
(
MSG_LOG
,"sender","Dequeued something...");

565 
va
.
va_ty≥
 = 
d©a
->
addr_ty≥
;

567 
ªtvÆ
 = 
	`v™_node_£nd
(
this_node
->
v™_node
, 
d©a
->
iÁ˚
, d©a->
∑ckë
, d©a->
∑ckë_size
, 0, &
va
);

568 
	`as£π
(
d©a
);

569 
	`as£π
(
d©a
->
∑ckë
);

570 
	`‰ì
(
d©a
->
∑ckë
);

571 
	`‰ì
(
d©a
);

574  
NULL
;

575 
	}
}

577 
	$li°íî_˛ónup
 (*
buf
) {

579 
	`‰ì
(
buf
);

580 
	}
}

585 *
	$li°íî
 (*
¨g
) {

586 
node_™d_num_t
 *
¬n
 = 
¨g
;

588 
öãrÁ˚
 = 
¬n
->
iÁ˚
;

589 
ù_node_t
 *
node
 = 
¬n
->node;

591 
ªtvÆ
;

592 *
buf
;

593 
mtu
;

594 c⁄° 
me
 = 
node
->
v™_node
->
vn_num
;

596 
v™addr_t
 
addr
;

597 
de°
;

598 
§c
;

599 
âl
;

600 
¥Ÿo
;

601 
uöt16_t
 
tŸÆ_Àngth
;

603 
	`as£π
(
node
);

605 
	`v™_node_gëif›t
(
node
->
v™_node
, 
öãrÁ˚
, 
VAN_IO_MTU
, (*)&
mtu
, ());

607 
	`‰ì
(
¬n
);

610 
buf
 = 
	`mÆloc
(
mtu
);

612 
	`±hªad_˛ónup_push
(((*)(*))
li°íî_˛ónup
,
buf
);

614 
	`∆og
(
MSG_LOG
,"li°íî","Li°íîÅhªad f‹Çodê%d o¿öãrÁ˚ %dÑódy.", 
node
->
v™_node
->
vn_num
, 
öãrÁ˚
);

617 
	`±hªad_muãx_lock
(&
node
->
iÁ˚s
[
öãrÁ˚
].
lock
);

618 
	`gë_if_°©e
(
node
, 
öãrÁ˚
) == 0) {

620 
	`±hªad_c⁄d_waô
(&
node
->
iÁ˚s
[
öãrÁ˚
].
c⁄d
, &node->iÁ˚s[öãrÁ˚].
lock
);

622 
	`±hªad_muãx_u∆ock
(&
node
->
iÁ˚s
[
öãrÁ˚
].
lock
);

626 
ªtvÆ
 = 
	`v™_node_ªcv
–
node
->
v™_node
, 
öãrÁ˚
, 
buf
, 
mtu
, 0, &
addr
 );

628 i‡(
ªtvÆ
 >= 0) {

629 i‡(
ªtvÆ
 > 
mtu
Ë
	`∆og
(
MSG_WARNING
,"li°íî","I ju° gŸáÖackë o¿öãrÁ˚ %dÅh© ha†®sizêo‡%d, buàthi†lök ha†™ MTU o‡%d !!!", 
öãrÁ˚
,Ñetval, mtu);

633 
	`±hªad_muãx_lock
(&
node
->
iÁ˚s
[
öãrÁ˚
].
age_lock
);

634 
node
->
iÁ˚s
[
öãrÁ˚
].
age
 = 
	`time
(
NULL
);

635 
node
->
iÁ˚s
[
öãrÁ˚
].
timed_out
 = 0;

636 
	`±hªad_muãx_u∆ock
(&
node
->
iÁ˚s
[
öãrÁ˚
].
age_lock
);

638 
tŸÆ_Àngth
 = 
	`gë_tŸÆ_Àn
(
buf
);

639 
¥Ÿo
 = 
	`gë_¥Ÿocﬁ
(
buf
);

643 
uöt16_t
 
∑ckë_checksum
, 
ˇl˚d_checksum
;

645 
∑ckë_checksum
 = 
	`gë_checksum
(
buf
);

649 
	`£t_checksum
(
buf
, 0);

651 if((
ˇl˚d_checksum
 = 
	`ù_Á°_csum
((*)
buf
, 2)Ë!
∑ckë_checksum
) {

652 
	`∆og
(
MSG_ERROR
,"li°íî", "Eº‹: checksum mism©ch. ip_Á°_csumÑëu∫ed %d, wêthök iàshould bê%d", 
ˇl˚d_checksum
, 
∑ckë_checksum
);

659 
	`£t_checksum
(
buf
, 
∑ckë_checksum
);

663 i‡(
¥Ÿo
 =
PROTO_RIP
) {

665 *
∑ckë
 = 
	`mÆloc
(
tŸÆ_Àngth
);

666 
	`mem˝y
(
∑ckë
, 
buf
, 
tŸÆ_Àngth
);

669 
rù_∑ckë_t
 *
rù
 = 
	`mÆloc
((rip_packet_t));

671 
rù
->
∑ckë
 =Öacket;

672 
rù
->
iÁ˚
 = 
öãrÁ˚
;

674 
	`±hªad_˛ónup_push
(((*)(*))
bqueue_po‹ly_im∂emíãd_˛ónup
, 
node
->
rù_q
);

675 
	`bqueue_íqueue
(
node
->
rù_q
,(*)
rù
);

676 
	`±hªad_˛ónup_p›
(0);

681 
de°
 = 
	`gë_d°
(
buf
);

682 
§c
 = 
	`gë_§c
(
buf
);

683 
âl
 = 
	`gë_âl
(
buf
);

685 
	`∆og
(
MSG_LOG
,"li°íî","Thi†IPÖackë i†‰om %d,áddªs£dÅÿ%d, ha†®â»o‡%d,ándáÅŸÆÜígth o‡%d",
§c
, 
de°
, 
âl
, 
tŸÆ_Àngth
);

686 i‡(
tŸÆ_Àngth
 > 
mtu
Ë{ 
	`∆og
(
MSG_WARNING
,"listener","WARNING:áccordingÅoÅhis IPÖacket header,ÅheÅotalÜength ofÅheÖacket is %d, butÅhis MTU forÅhisÜink is only %d !!! WillÇot forward.",Åotal_length, mtu); ; }

688 i‡(
de°
 !
me
) {

689 
πabÀ_íåy_t
 *
r
 = 
	`lookup_rouã
(
node
, 
de°
);

690 *
∑ckë
 = 
	`mÆloc
(
tŸÆ_Àngth
);

692 
	`mem˝y
(
∑ckë
, 
buf
, 
tŸÆ_Àngth
);

694 
	`∆og
(
MSG_LOG
,"li°íî","Thi†∑ckë i†nŸáddªs£dÅÿme. Wû»©ãm±Åÿf‹w¨d iàouàöãrÁ˚ %d", 
r
->
iÁ˚
);

696 
	`£t_âl
(
∑ckë
,
âl
 - 1 );

698 
	`£t_checksum
(
∑ckë
, 0);

699 
	`£t_checksum
(
∑ckë
, 
	`ù_Á°_csum
((*)packet, 2));

701 
ù_∑ckë_t
 *
p
 = 
	`mÆloc
((ip_packet_t));

702 
p
->
iÁ˚
 = 
r
->iface;

703 
p
->
∑ckë
 =Öacket;

704 
p
->
∑ckë_size
 = 
tŸÆ_Àngth
;

705 
p
->
addr_ty≥
 = 
r
->
ty≥
;

707 
	`±hªad_˛ónup_push
(((*)(*))
bqueue_po‹ly_im∂emíãd_˛ónup
, 
node
->
£ndög_q
);

708 
	`bqueue_íqueue
(
node
->
£ndög_q
, (*)
p
);

709 
	`±hªad_˛ónup_p›
(0);

713 
	`∆og
(
MSG_LOG
,"listener","ThisÖacket isáddressesedÅo me!");

715 i‡(
¥Ÿo
 =
PROTO_DATA
) {

716 *
d©a
 = 
	`mÆloc
(
tŸÆ_Àngth
);

717 
	`∆og
(
MSG_LOG
,"listener","WillÖass upÅoÅheÇextÜayer");

718 
	`mem˝y
(
d©a
, 
buf
, 
tŸÆ_Àngth
);

721 
	`±hªad_˛ónup_push
(((*)(*))
bqueue_po‹ly_im∂emíãd_˛ónup
, 
node
->
ª˚ivög_q
);

722 
	`bqueue_íqueue
(
node
->
ª˚ivög_q
, 
d©a
);

723 
	`±hªad_˛ónup_p›
(0);

725 } i‡(
¥Ÿo
 =
PROTO_TCP
) {

727 
	`∆og
(
MSG_LOG
, "listener", "gotá TCPÖacket!");

728 *
∑ckë
 = 
	`mÆloc
(
tŸÆ_Àngth
);

731 
uöt16_t
 
∑ckë_checksum
, 
ˇl˚d_checksum
;

733 
∑ckë_checksum
 = 
	`gë_t˝checksum
(
	`ù_to_t˝
(
buf
));

737 
	`£t_t˝checksum
(
	`ù_to_t˝
(
buf
), 0);

739 if((
ˇl˚d_checksum
 = 
	`ˇlcuœã_t˝_checksum
((*)
buf
)Ë!
∑ckë_checksum
) {

740 
	`∆og
(
MSG_ERROR
,"li°íî", "Eº‹:Å˝ checksum mism©ch. compuã_t˝_checksumÑëu∫ed %d, wêthök iàshould bê%d", 
ˇl˚d_checksum
, 
∑ckë_checksum
);

745 
	`£t_checksum
(
buf
, 
∑ckë_checksum
);

748 
	`mem˝y
(
∑ckë
, 
buf
, 
tŸÆ_Àngth
);

749 
	`bqueue_íqueue
(
node
->
t˝_q
, (*)
∑ckë
);

752 
	`∆og
(
MSG_WARNING
,"listener","I gotá IPÖacket withán unknownÖayloadÅype");

758 
	`∆og
(
MSG_WARNING
,"li°íî","v™_node_ªcvÑëu∫ed %d", 
ªtvÆ
);

763 
	`±hªad_˛ónup_p›
(1);

764  
NULL
;

765 
	}
}

771 
	$v™_drivî_lﬂded
() {

773 
	}
}

778 
	$v™_drivî_de°‹y
(
ù_node_t
 *
node
) {

779 
i
;

781 
	`∆og
(
MSG_LOG
,"shutdown","AttemptingÅo cancelÅhe sendingÅhread... ");

783 
	`±hªad_ˇn˚l
(*
node
->
£ndög_thªad
);

784 
	`±hªad_joö
(*
node
->
£ndög_thªad
, 
NULL
);

785 
	`‰ì
(
node
->
£ndög_thªad
);

787 
	`∆og
(
MSG_LOG
,"shutdown","AttemptingÅo cancelÅheÜisteningÅhreads... ");

789 
i
 = 0; i < 
	`v™_node_nifs
(
node
->
v™_node
); i++) {

790 
	`±hªad_ˇn˚l
(*
node
->
li°íög_thªad
[
i
]);

791 
	`±hªad_joö
(*
node
->
li°íög_thªad
[
i
], 
NULL
);

792 
	`‰ì
(
node
->
li°íög_thªad
[
i
]);

793 
	`∆og
(
MSG_LOG
,"shutdown"," %d D⁄e",
i
);

794 
	`±hªad_c⁄d_de°roy
(&
node
->
iÁ˚s
[
i
].
c⁄d
);

795 
	`±hªad_muãx_de°roy
(&
node
->
iÁ˚s
[
i
].
lock
);

796 
	`±hªad_muãx_de°roy
(&
node
->
iÁ˚s
[
i
].
age_lock
);

800 
	`‰ì
(
node
->
iÁ˚s
);

802 
	`∆og
(
MSG_LOG
,"shutdown","AttemptingÅo cancelÅheÑipÅhread... ");

803 
	`±hªad_ˇn˚l
(*
node
->
rù_thªad
);

804 
	`±hªad_joö
(*
node
->
rù_thªad
, 
NULL
);

805 
	`‰ì
(
node
->
rù_thªad
);

808 
	`∆og
(
MSG_LOG
,"shutdown","AttemptingÅo cancelÅheÑip monitorÅhread... ");

809 
	`±hªad_ˇn˚l
(*
node
->
rù_m⁄ô‹_thªad
);

810 
	`±hªad_joö
(*
node
->
rù_m⁄ô‹_thªad
, 
NULL
);

811 
	`‰ì
(
node
->
rù_m⁄ô‹_thªad
);

813 
	`∆og
(
MSG_LOG
,"shutdown","AttemptingÅo cancelÅheÜink stateÅhread... ");

814 
	`±hªad_ˇn˚l
(*
node
->
lök_°©e_thªad
);

815 
	`±hªad_joö
(*
node
->
lök_°©e_thªad
, 
NULL
);

816 
	`‰ì
(
node
->
lök_°©e_thªad
);

818 
	`∆og
(
MSG_LOG
,"shutdown","AttemptingÅo destroyÅhe sending q... ");

819 
	`bqueue_de°roy
(
node
->
£ndög_q
);

820 
	`‰ì
(
node
->
£ndög_q
);

822 
	`∆og
(
MSG_LOG
,"shutdown","AttemptingÅo destroyÅheÑeceiving q... ");

823 
	`bqueue_de°roy
(
node
->
ª˚ivög_q
);

824 
	`‰ì
(
node
->
ª˚ivög_q
);

826 
	`∆og
(
MSG_LOG
,"shutdown","AttemptingÅo destoryÅheÑip q... ");

827 
	`bqueue_de°roy
(
node
->
rù_q
);

828 
	`‰ì
(
node
->
rù_q
);

830 
	`∆og
(
MSG_LOG
,"shutdown","AttemptingÅo destoryÅheÑouteÅable... ");

831 
	`πabÀ_de°roy
(
node
->
rouã_èbÀ
);

832 
	`‰ì
(
node
->
rouã_èbÀ
);

835 
	`∆og
(
MSG_LOG
,"shutdown"," -= Bye! =- ");

837 
	}
}

844 
ù_node_t
 *
	$v™_drivî_öô
(*
‚ame
, 
num
) {

845 
v™_node_t
 *
vn
 = 
NULL
;

846 
ù_node_t
 *
node
 = 
	`mÆloc
((ip_node_t));

847 
i
, 
nifs
;

848 c⁄° 
down
 = 0;

849 
node_™d_num_t
 *
¬n
;

851 i‡(
	`v™_öô
(
‚ame
)) {

852 
	`∆og
(
MSG_ERROR
,"öô", "Eº‹: C™'àöôÅhêv™ drivî wôhÇëw‹k s≥¯'%s'",
‚ame
);

853  
NULL
;

856 i‡–!(
vn
 = 
	`v™_node_gë
(
num
))) {

857 
	`∆og
(
MSG_ERROR
,"öô", "Eº‹ C™'àgëÇodê%d", 
num
);

858  
NULL
;

861 
	`as£π
(
vn
 !
NULL
);

862 
node
->
v™_node
 = 
vn
;

864 
nifs
 = 
	`v™_node_nifs
(
vn
);

865 
node
->
iÁ˚s
 = 
	`mÆloc
((
iÁ˚_t
Ë* 
nifs
);

866 
	`∆og_£t_míu
("[nodê%d] Inôülizög [ ]",
num
 );

868 
	`¶ìp
(1);

869 
	`∆og
(
MSG_LOG
, "init","starting sendingÅhread");

870 
node
->
£ndög_thªad
 = 
	`mÆloc
((
±hªad_t
));

871 
	`±hªad_¸óã
(
node
->
£ndög_thªad
 , 0 , 
£ndî
, (*)node);

874 
i
 = 0; i < 
nifs
; i++) {

875 
¬n
 = 
	`mÆloc
((
node_™d_num_t
));

876 
¬n
->
node
 =Çode;

877 
¬n
->
iÁ˚
 = 
i
;

878 
node
->
li°íög_thªad
[
i
] = 
	`mÆloc
((
±hªad_t
));

879 
	`±hªad_¸óã
(
node
->
li°íög_thªad
[
i
], 0, 
li°íî
, (*)
¬n
);

882 
node
->
iÁ˚s
[
i
].
cur_°©e
 = 0;

883 
node
->
iÁ˚s
[
i
].
ﬁd_°©e
 = 0;

884 
node
->
iÁ˚s
[
i
].
≥î
 = -1;

885 
node
->
iÁ˚s
[
i
].
age
 = 
	`time
(
NULL
);

886 
node
->
iÁ˚s
[
i
].
timed_out
 = 0;

889 
	`v™_node_£tif›t
–
vn
, 
i
, 
VAN_IO_UPSTATE
, (*)&
down
, ());

891 
	`±hªad_c⁄d_öô
(&
node
->
iÁ˚s
[
i
].
c⁄d
, 0);

892 
	`±hªad_muãx_öô
(&
node
->
iÁ˚s
[
i
].
lock
, 0);

893 
	`±hªad_muãx_öô
(&
node
->
iÁ˚s
[
i
].
age_lock
, 0);

899 
node
->
ª˚ivög_q
 = 
	`mÆloc
((
bqueue_t
));

900 
	`bqueue_öô
(
node
->
ª˚ivög_q
);

902 
node
->
rù_q
 = 
	`mÆloc
((
bqueue_t
));

903 
	`bqueue_öô
(
node
->
rù_q
);

905 
node
->
t˝_q
 = 
	`mÆloc
((
bqueue_t
));

906 
	`bqueue_öô
(
node
->
t˝_q
);

909 
node
->
rouã_èbÀ
 = 
	`πabÀ_√w
();

911 
	`∆og_£t_míu
("[nodê%d] Inôülizög [= ]",
num
 );

912 
	`¶ìp
(1);

913 
	`∆og_£t_míu
("[nodê%d] Inôülizög [== ]",
num
 );

915 
	`∆og_£t_míu
("[nodê%d] Inôülizög [=== ]",
num
 );

917 
	`∆og_£t_míu
("[nodê%d] Inôülizög [==== ]",
num
 );

918 
	`¶ìp
(1);

919 
	`∆og_£t_míu
("[nodê%d] Inôülizög [===== ]",
num
 );

921 
	`∆og_£t_míu
("[nodê%d] Inôülizög [====== ]",
num
 );

923 
	`∆og_£t_míu
("[nodê%d] Inôülizög [======= ]",
num
 );

925 
	`∆og_£t_míu
("[nodê%d] Inôülizög [========]",
num
 );

927 
	`∆og_£t_míu
("[nodê%d] Inôülizög [==========]",
num
 );

928 
	`¶ìp
(1);

932 
node
->
lök_°©e_thªad
 = 
	`mÆloc
((
±hªad_t
));

933 
	`±hªad_¸óã
(
node
->
lök_°©e_thªad
, 0,Üink_state_thread, (*)node);

935 
node
->
rù_m⁄ô‹_thªad
 = 
	`mÆloc
((
±hªad_t
));

936 
	`±hªad_¸óã
(
node
->
rù_m⁄ô‹_thªad
, 0, 
rù_m⁄ô‹
, (*)node);

938 
node
->
rù_thªad
 = 
	`mÆloc
((
±hªad_t
));

939 
	`±hªad_¸óã
(
node
->
rù_thªad
, 0, 
rù
, (*)node);

940 
node
->
t˝_w©chdog
 = 
	`mÆloc
((
±hªad_t
));

941 
	`±hªad_¸óã
(
node
->
t˝_w©chdog
, 0,Åcp_watchdog, (*)node);

944 
	`v_t˝_öô
(
node
);

946 
	`∆og
 (
MSG_LOG
,"öô","Nodê%dÑu¬ög", 
vn
->
vn_num
);

947 
	`∆og_£t_míu
("[nodê%d] 1:Síd d©® 2:Re˚ivêD©® 3:ToggÀ Lök Sèã q:Quô", 
vn
->
vn_num
);

951 
node
->
t˝_thªad
 = 
	`mÆloc
((
±hªad_t
));

952 
	`±hªad_¸óã
(
node
->
t˝_thªad
, 0,Åcp_thread, (*)node);

954 
node
->
t˝_£nd_thªad
 = 
	`mÆloc
((
±hªad_t
));

955 
	`±hªad_¸óã
(
node
->
t˝_£nd_thªad
, 0,Åcp_send_thread, (*)node);

957 
	`∆og
 (
MSG_LOG
,"öô","Nodê%dÑu¬ög", 
vn
->
vn_num
);

958 
	`∆og_£t_míu
("[nodê%d] 1:Síd d©® 2:Re˚ivêD©® 3:ToggÀ Lök Sèã q:Quô", 
vn
->
vn_num
);

962 
	`v_t˝_öô
(
node
);

964  
node
;

966 
	}
}

974 
	$buûdPackë
(
ù_node_t
 *
node
, *
d©a
, 
d©a_size
, 
to
, **
hódî
, 
uöt8_t
 
¥Ÿo
) {

976 
uöt16_t
 
tŸÆ_Àngth
 =8 + 
d©a_size
;

977 
uöt16_t
 
âl
 = 32;

978 
§c
 = 
node
->
v™_node
->
vn_num
;

979 
uöt16_t
 
de°
 = 
to
;

980 
°¨t
 = 0;

982 
uöt16_t
 
checksum
;

984 
∑ckë_size
;

987 
∑ckë_size
 = 8 + 
d©a_size
;

989 *
hódî
 = 
	`mÆloc
(
∑ckë_size
);

992 
	`mem£t
(*
hódî
,0,
∑ckë_size
);

995 
°¨t
 |= (1 << 7);

998 
	`£t_vîsi⁄
(*
hódî
,1);

999 
	`£t_¥Ÿocﬁ
(*
hódî
,
¥Ÿo
);

1002 
	`£t_tŸÆ_Àn
(*
hódî
, 
tŸÆ_Àngth
);

1005 
	`£t_âl
(*
hódî
, 
âl
);

1009 
	`£t_§c
(*
hódî
, 
§c
);

1013 
	`£t_d°
(*
hódî
, 
de°
);

1016 
checksum
 = 
	`ù_Á°_csum
((*)*
hódî
, 2);

1020 
	`£t_checksum
(*
hódî
, 
checksum
);

1021 
checksum
 = 0;

1022 
checksum
 = 
	`gë_checksum
(*
hódî
);

1027 
	`mem˝y
(*
hódî
+8, 
d©a
, 
d©a_size
);

1029  
∑ckë_size
;

1032 
	}
}

1034 
	$v™_drivî_£ndto
 (
ù_node_t
 *
node
, *
buf
, 
size
, 
to
, 
uöt8_t
 
¥Ÿo
) {

1037 *
∑ckë
;

1038 
∑ckë_size
;

1042 i‡(
to
 =
node
->
v™_node
->
vn_num
) {

1044 
	`∆og
(
MSG_LOG
,"sendto","I wasáskedÅo sendáÖacketÅo myself! Sending directly intoÜocal queue");

1045 *
d©a
 = 
	`mÆloc
(
size
);

1047 
	`mem˝y
(
d©a
, 
buf
, 
size
);

1048 
	`bqueue_íqueue
(
node
->
ª˚ivög_q
, 
d©a
);

1052 
v™addr_t
 
addr
;

1053 
addr
.
va_ty≥
 = 
AT_P2P
;

1054 
πabÀ_íåy_t
 *
r
;

1055 
ù_∑ckë_t
 *
p
 = 
	`mÆloc
((ip_packet_t));

1056 
mtu
;

1059 
r
 = 
	`πabÀ_gë
(
node
->
rouã_èbÀ
, 
to
);

1060 i‡(!
r
) {

1061 
	`∆og
(
MSG_WARNING
,"£ndto","I wa†askedÅÿ£ndáÖackëÅÿnodê%d, buàI havênÿrouãÅÿth©Çode", 
to
);

1062 
	`‰ì
(
p
);

1066 
	`v™_node_gëif›t
(
node
->
v™_node
, 
r
->
iÁ˚
, 
VAN_IO_MTU
, (*)&
mtu
, ());

1071 
∑ckë_size
 = 
	`buûdPackë
(
node
, 
buf
, 
size
, 
to
, &
∑ckë
, 
¥Ÿo
);

1076 i‡(
∑ckë_size
 > 
mtu
) {

1077 
	`∆og
(
MSG_WARNING
, "sendto", "WARNING WillÇot sendÅhisÖacket -- TOO BIG");

1078 
	`‰ì
(
∑ckë
);

1082 
	`∆og
(
MSG_LOG
,"£ndto","Aâem±ögÅÿ£ndÅhi†∑ckë (sizê%dËouàÆ⁄g i¡îÁ˚ %d", 
∑ckë_size
, 
r
->
iÁ˚
);

1084 
p
->
iÁ˚
 = 
r
->iface;

1085 
p
->
∑ckë
 =Öacket;

1086 
p
->
∑ckë_size
 =Öacket_size;

1087 
p
->
addr_ty≥
 = 
r
->
ty≥
;

1089 
	`bqueue_íqueue
(
node
->
£ndög_q
, (*)
p
);

1097  
∑ckë_size
 - 
HEADER_SIZE
;

1098 
	}
}

1100 
	$v™_drivî_ªcv‰om
 (
ù_node_t
 *
node
, *
buf
, 
size
) {

1101 *
d©a
;

1102 
d©a_size
;

1105 
	`bqueue_dequeue
(
node
->
ª˚ivög_q
, (**)&
d©a
);

1106 
d©a_size
 = 
	`gë_tŸÆ_Àn
(
d©a
Ë- 
HEADER_SIZE
 ;

1107 
	`∆og
(
MSG_LOG
,"ªcv‰om","d©a_size=%d", 
d©a_size
);

1108 
	`∆og
(
MSG_LOG
,"ªcv‰om","gë_tŸÆ_Àn=%d", 
	`gë_tŸÆ_Àn
(
d©a
));

1110 i‡(
size
 < 
d©a_size
) {

1111 
d©a_size
 = 
size
;

1116 
	`mem˝y
(
buf
, 
d©a
+
HEADER_SIZE
, 
d©a_size
);

1117 
	`‰ì
(
d©a
);

1118  
d©a_size
;

1119 
	}
}

1122 
	$íåy_to_vaddr
(
πabÀ_íåy_t
* 
íåy
, 
v™addr_t
* 
vaddr
) {

1123 
vaddr
->
va_ty≥
 = 
íåy
->
ty≥
;

1124 
	}
}

1126 
πabÀ_íåy_t
* 
	$lookup_rouã
(
ù_node_t
 *
node
, 
addr
) {

1127 
πabÀ_íåy_t
 *
to_ªtu∫
 = 
	`πabÀ_gë
(
node
->
rouã_èbÀ
, 
addr
);

1128 i‡(!
to_ªtu∫
Ë{  
NULL
; }

1129 i‡(
to_ªtu∫
->
co°
 >
INFINITY
Ë 
NULL
; Åo_return;

1130 
	}
}

1132 
	$upd©e_rouã
(
ù_node_t
 *
node
, 
addr
, 
iÁ˚
, 
co°
, 
√xt_h›
) {

1133 
to_ªtu∫
;

1134 
πabÀ_íåy_t
 *
rouã
 = 
	`lookup_rouã
(
node
, 
addr
);

1135 i‡(!
rouã
Ë{ 
	`add_rouã
(
node
, 
addr
, 
iÁ˚
, 
co°
, 
√xt_h›
);  1;}

1137 
to_ªtu∫
 = (
rouã
->
iÁ˚
 !iÁ˚Ë|| (rouã->
co°
 !co°Ë|| (rouã->
√xt_h›
 !=Çext_hop);

1138 
rouã
->
iÁ˚
 = iface;

1139 
rouã
->
co°
 = cost;

1140 
rouã
->
√xt_h›
 =Çext_hop;

1141  
to_ªtu∫
;

1144 
	}
}

1146 
	$add_rouã
(
ù_node_t
 *
node
, 
addr
, 
iÁ˚
, 
co°
, 
√xt_h›
) {

1147 
πabÀ_íåy_t
* 
íåy
 = 
	`mÆloc
((rtable_entry_t));

1148 
v™addr_t
 
va
;

1150 if(!
íåy
) {

1155 
	`v™_node_gëif›t
(
node
->
v™_node
, 
iÁ˚
, 
VAN_IO_IFTYPE
, (*Ë&
va
.
va_ty≥
, ());

1158 
íåy
->
addr
 =áddr;

1159 
íåy
->
iÁ˚
 = iface;

1160 
íåy
->
ty≥
 = 
va
.
va_ty≥
;

1161 
íåy
->
co°
 = cost;

1162 
íåy
->
√xt_h›
 =Çext_hop;

1165 
	`πabÀ_put
(
node
->
rouã_èbÀ
, 
íåy
);

1168 
	}
}

1170 
	$öô_°
(
t˝_sockë_t
* 
thög
, 
 
, 
uöt16_t
 
Õ
, 
∫
, uöt16_à
Ω
) {

1171 
thög
->
loˇl_node
 = 
	`mÆloc
((
ù_node_t
));

1172 
thög
->
loˇl_node
->
v™_node
 = 
	`mÆloc
((
v™_node_t
));

1173 
thög
->
loˇl_node
->
v™_node
->
vn_num
 = 
 
;

1175 
thög
->
loˇl_p‹t
 = 
Õ
;

1176 
thög
->
ªmŸe_node
 = 
∫
;

1177 
thög
->
ªmŸe_p‹t
 = 
Ω
;

1178 
	}
}

1180 
	$maö
–
¨gc
, * 
¨gv
[] ) {

1181 
v™_node_t
 *
vn
;

1182 
i
 = 0, 
ö
, 
Àn
;

1183 
buf
[ 256 ];

1184 
v™addr_t
 
va
;

1186 if–
¨gc
 != 3 ) {

1187 
	`¥ötf
("ußge: %†node_numÇëc⁄fig\n",
¨gv
[0]);

1191 if–
	`v™_öô
–
¨gv
[ 2 ] ) ) {

1192 
	`Ârötf
–
°dîr
, "doh: van_init\n" );

1193 
	`exô
( 1 );

1196 if–!–
vn
 = 
	`v™_node_gë
–
	`©oi
–
¨gv
[ 1 ] ) ) ) ) {

1197 
	`Ârötf
–
°dîr
, "doh: van_node_get\n" );

1198 
	`exô
( 1 );

1201 
	`¥ötf
–"Nodê%òÆ»£à[ CTL-DÅÿexô ]\n", 
	`©oi
–
¨gv
[ 1 ] ) );

1203  
i
 != 9 ) {

1204 
îr
;

1205 
	`¥ötf
( "Command: " );

1207 
	`fÊush
(
°dout
);

1208 
	`mem£t
(
buf
,0,80);

1209 
îr
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 80);

1210 if–
îr
 <0 ) { 
	`¥ötf
("\n"); ; }

1211 
buf
[79] = 0;

1213 
	`ssˇnf
(
buf
, "%d", &
i
);

1215  
i
 ) {

1219 
	`¥ötf
( "Interface: " );

1220 
	`fÊush
(
°dout
);

1221 
	`mem£t
(
buf
,0,80);

1222 
	`ªad
(
STDIN_FILENO
, 
buf
, 80);

1223 
buf
[79] = 0;

1225 
	`ssˇnf
(
buf
, "%d", &
ö
);

1227 if––
Àn
 = 
	`v™_node_ªcv
–
vn
, 
ö
, 
buf
, 255, 0, &
va
 ) ) > 0 ) {

1228 
buf
[ 
Àn
 ] = 0;

1229 
	`¥ötf
( "-- Received --\n"

1234 
ö
, 
ty≥s
[ 
va
.
va_ty≥
 ], 
Àn
, 
buf
 );

1237 
	`¥ötf
–"v™_ªcv_îr‹ (%d): %s\n", 
Àn
, 
	`°ªº‹
( -len ) );

1244 
	`¥ötf
( "Interface: " );

1245 
	`sˇnf
–"%d", &
ö
 );

1249 
	`v™_node_gëif›t
–
vn
, 
ö
, 
VAN_IO_IFTYPE
, (*Ë&
va
.
va_ty≥
,

1252 
	`¥ötf
( "Message: " );

1253 
	`sˇnf
–"%s", 
buf
 );

1254 
Àn
 = 
	`v™_node_£nd
–
vn
, 
ö
, 
buf
, 
	`°æí
–bu‡), 0, &
va
 );

1255 if–
Àn
 > 0 )

1256 
	`¥ötf
( "send success\n" );

1258 
	`¥ötf
–"v™_£nd_îr‹ (%d): %s\n", 
Àn
, 
	`°ªº‹
( -len ) );

1268 
	}
}

	@van_driver.h

1 #i‚de‡
_VAN_DRIVER


2 
	#_VAN_DRIVER


	)

4 
	~<v™.h
>

5 
	~<±hªad.h
>

6 
	~<bqueue.h
>

7 
	~"πabÀ.h
"

8 
	~"t˝.h
"

9 
	~"sockèbÀ.h
"

10 
	~"Áncy_di•œy.h
"

11 
	~"ù∑ckë.h
"

12 
	~"t˝∑ckë.h
"

14 
	gt˝_sockë__
;

15 
	gsockèbÀ__
;

18 
	mcur_°©e
;

19 
	mﬁd_°©e
;

20 
	m≥î
;

21 
time_t
 
	mage
;

22 
	mtimed_out
;

23 
±hªad_c⁄d_t
 
	mc⁄d
;

24 
±hªad_muãx_t
 
	mlock
;

25 
±hªad_muãx_t
 
	mage_lock
;

26 } 
	tiÁ˚_t
;

28 
	sù_node__
 {

29 
v™_node_t
 *
	mv™_node
;

30 
±hªad_t
 *
	m£ndög_thªad
;

31 
±hªad_t
 *
	mli°íög_thªad
[
VAN_MAXINTERFACES
];

32 
±hªad_t
 *
	mrù_thªad
;

33 
±hªad_t
 *
	mrù_m⁄ô‹_thªad
;

34 
±hªad_t
 *
	mlök_°©e_thªad
;

35 
bqueue_t
 *
	m£ndög_q
;

36 
bqueue_t
 *
	mª˚ivög_q
;

37 
bqueue_t
 *
	mrù_q
;

38 
bqueue_t
 *
	mt˝_q
;

39 
±hªad_t
 *
	mt˝_thªad
;

40 
±hªad_t
 *
	mt˝_£nd_thªad
;

41 
±hªad_t
 *
	mt˝_w©chdog
;

44 
t˝_sockë__
 *
	msockë_èbÀ
[
MAXSOCKETS
];

45 
sockèbÀ__
 *
	mtu∂e_èbÀ
;

47 
πabÀ_t
 *
	mrouã_èbÀ
;

48 
iÁ˚_t
 *
	miÁ˚s
;

50 } 
	tù_node_t
;

54 
ù_node_t
 *
	mnode
;

55 
	miÁ˚
;

56 } 
	tnode_™d_num_t
;

59 
	miÁ˚
;

60 *
	m∑ckë
;

61 
	m∑ckë_size
;

62 
	maddr_ty≥
;

63 } 
	tù_∑ckë_t
;

66 
	miÁ˚
;

67 *
	m∑ckë
;

68 } 
	trù_∑ckë_t
;

70 
v™_drivî_lﬂded
();

72 
ù_node_t
 *
v™_drivî_öô
(*
‚ame
, 
num
);

73 
v™_drivî_de°‹y
(
ù_node_t
 *
node
);

75 
gë_if_°©e
(
ù_node_t
 *
node
, 
iÁ˚
);

76 
£t_if_°©e
(
ù_node_t
 *
node
, 
iÁ˚
, 
°©e
);

77 
v™_drivî_£ndto
 (
ù_node_t
 *
node
, *
buf
, 
size
, 
to
, 
uöt8_t
 
¥Ÿo
);

78 
v™_drivî_ªcv‰om
 (
ù_node_t
 *
node
, *
buf
, 
size
) ;

81 
íåy_to_vaddr
(
πabÀ_íåy_t
* 
íåy
, 
v™addr_t
* 
vaddr
);

82 
πabÀ_íåy_t
* 
lookup_rouã
(
ù_node_t
* 
node
, 
addr
);

83 
add_rouã
(
ù_node_t
* 
node
, 
addr
, 
iÁ˚
, 
co°
, 
√xt_h›
);

84 
upd©e_rouã
(
ù_node_t
 *
node
, 
addr
, 
iÁ˚
, 
co°
, 
√xt_h›
);

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/assert.h

23 #ifdef 
_ASSERT_H


25 #unde‡
_ASSERT_H


26 #unde‡
as£π


27 #unde‡
__ASSERT_VOID_CAST


29 #ifdef 
__USE_GNU


30 #unde‡
as£π_≥º‹


35 
	#_ASSERT_H
 1

	)

36 
	~<„©uªs.h
>

38 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

39 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

41 
	#__ASSERT_VOID_CAST
 ()

	)

49 #ifdef 
NDEBUG


51 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

59 #ifdef 
__USE_GNU


60 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

65 #i‚de‡
_ASSERT_H_DECLS


66 
	#_ASSERT_H_DECLS


	)

67 
__BEGIN_DECLS


70 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

71 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

72 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

75 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

76 
__löe
,

77 
__c⁄°
 *
__fun˘i⁄
)

78 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

83 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

84 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

87 
__END_DECLS


90 
	#as£π
(
ex¥
) \

91 (
	`__ASSERT_VOID_CAST
 ((
ex¥
) ? 0 : \

92 (
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, \

93 
__ASSERT_FUNCTION
), 0)))

	)

95 #ifdef 
__USE_GNU


96 
	#as£π_≥º‹
(
î∫um
) \

97 (
	`__ASSERT_VOID_CAST
 (!(
î∫um
) ? 0 : \

98 (
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, \

99 
__ASSERT_FUNCTION
), 0)))

	)

107 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

108 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

110 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

111 
	#__ASSERT_FUNCTION
 
__func__


	)

113 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/curses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

50 
	#NCURSES_VERSION_MAJOR
 5

	)

51 
	#NCURSES_VERSION_MINOR
 5

	)

52 
	#NCURSES_VERSION_PATCH
 20060422

	)

55 #unde‡
NCURSES_VERSION


56 
	#NCURSES_VERSION
 "5.5"

	)

61 
	#NCURSES_MOUSE_VERSION
 1

	)

66 
	~<ncur£s_dŒ.h
>

71 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


72 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

79 #ifde‡
NCURSES_NOMACROS


80 
	#NCURSES_ATTR_T
 
©å_t


	)

83 #i‚de‡
NCURSES_ATTR_T


84 
	#NCURSES_ATTR_T
 

	)

91 #unde‡
NCURSES_CONST


92 
	#NCURSES_CONST
 c⁄°

	)

94 #i‚de‡
NCURSES_INLINE


95 
	#NCURSES_INLINE
 
ölöe


	)

101 #unde‡
NCURSES_COLOR_T


102 
	#NCURSES_COLOR_T
 

	)

107 #unde‡
NCURSES_SIZE_T


108 
	#NCURSES_SIZE_T
 

	)

115 #unde‡
NCURSES_CH_T


116 
	#NCURSES_CH_T
 
chty≥


	)

118 #i‡0 && 
deföed
(
_LP64
)

119 
	tchty≥
;

120 
	tmmask_t
;

122 
	tchty≥
;

123 
	tmmask_t
;

126 
	~<°dio.h
>

127 
	~<un˘æ.h
>

128 
	~<°d¨g.h
>

129 #ifde‡
_XOPEN_SOURCE_EXTENDED


130 
	~<°ddef.h
>

145 #unde‡
TRUE


146 
	#TRUE
 1

	)

148 #unde‡
FALSE


149 
	#FALSE
 0

	)

151 
	tNCURSES_BOOL
;

153 #i‡
deföed
(
__˝lu•lus
)

156 
	#NCURSES_BOOL
 
boﬁ


	)

160 #i‡
NCURSES_ENABLE_STDBOOL_H


161 
	~<°dboﬁ.h
>

163 
	#NCURSES_BOOL
 
boﬁ


	)

166 #unde‡
boﬁ


167 
	#boﬁ
 
NCURSES_BOOL


	)

172 #ifde‡
__˝lu•lus


174 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

176 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

183 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

184 
	#WA_NORMAL
 
A_NORMAL


	)

185 
	#WA_STANDOUT
 
A_STANDOUT


	)

186 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

187 
	#WA_REVERSE
 
A_REVERSE


	)

188 
	#WA_BLINK
 
A_BLINK


	)

189 
	#WA_DIM
 
A_DIM


	)

190 
	#WA_BOLD
 
A_BOLD


	)

191 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

192 
	#WA_INVIS
 
A_INVIS


	)

193 
	#WA_PROTECT
 
A_PROTECT


	)

194 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

195 
	#WA_LEFT
 
A_LEFT


	)

196 
	#WA_LOW
 
A_LOW


	)

197 
	#WA_RIGHT
 
A_RIGHT


	)

198 
	#WA_TOP
 
A_TOP


	)

199 
	#WA_VERTICAL
 
A_VERTICAL


	)

202 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

203 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

205 
	#COLOR_BLACK
 0

	)

206 
	#COLOR_RED
 1

	)

207 
	#COLOR_GREEN
 2

	)

208 
	#COLOR_YELLOW
 3

	)

209 
	#COLOR_BLUE
 4

	)

210 
	#COLOR_MAGENTA
 5

	)

211 
	#COLOR_CYAN
 6

	)

212 
	#COLOR_WHITE
 7

	)

217 
NCURSES_EXPORT_VAR
(
chty≥
*Ë
_nc_acs_m≠
();

218 
	#acs_m≠
 (
	`_nc_acs_m≠
())

	)

220 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

223 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

226 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

227 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

228 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

229 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

230 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

231 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

232 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

233 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

234 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

235 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

236 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

237 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

238 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

239 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

240 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

241 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

242 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

243 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

245 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

246 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

247 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

248 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

249 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

250 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

251 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

257 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

258 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

259 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

260 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

261 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

262 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

263 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

271 
	#ACS_BSSB
 
ACS_ULCORNER


	)

272 
	#ACS_SSBB
 
ACS_LLCORNER


	)

273 
	#ACS_BBSS
 
ACS_URCORNER


	)

274 
	#ACS_SBBS
 
ACS_LRCORNER


	)

275 
	#ACS_SBSS
 
ACS_RTEE


	)

276 
	#ACS_SSSB
 
ACS_LTEE


	)

277 
	#ACS_SSBS
 
ACS_BTEE


	)

278 
	#ACS_BSSS
 
ACS_TTEE


	)

279 
	#ACS_BSBS
 
ACS_HLINE


	)

280 
	#ACS_SBSB
 
ACS_VLINE


	)

281 
	#ACS_SSSS
 
ACS_PLUS


	)

283 #unde‡
ERR


284 
	#ERR
 (-1)

	)

286 #unde‡
OK


287 
	#OK
 (0)

	)

290 
	#_SUBWIN
 0x01

	)

291 
	#_ENDLINE
 0x02

	)

292 
	#_FULLWIN
 0x04

	)

293 
	#_SCROLLWIN
 0x08

	)

294 
	#_ISPAD
 0x10

	)

295 
	#_HASMOVED
 0x20

	)

296 
	#_WRAPPED
 0x40

	)

302 
	#_NOCHANGE
 -1

	)

308 
	#_NEWINDEX
 -1

	)

310 
s¸ìn
 
	tSCREEN
;

311 
_wö_°
 
	tWINDOW
;

313 
chty≥
 
	t©å_t
;

315 #ifde‡
_XOPEN_SOURCE_EXTENDED


318 #ifde‡
mbÀn


319 #unde‡
mbÀn


321 
	~<libutf8.h
>

325 
	~<wch¨.h
>

329 
	twch¨_t
;

333 
	twöt_t
;

336 
	#CCHARW_MAX
 5

	)

339 
©å_t
 
	g©å
;

340 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

342 
	gext_cﬁ‹
;

345 
	tcch¨_t
;

349 
	gld©
;

351 
	s_wö_°


353 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

356 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

357 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

359 
	g_Êags
;

362 
©å_t
 
	g_©ås
;

363 
chty≥
 
	g_bkgd
;

366 
boﬁ
 
	g_nŸimeout
;

367 
boﬁ
 
	g_˛ór
;

368 
boﬁ
 
	g_Àaveok
;

369 
boﬁ
 
	g_s¸ﬁl
;

370 
boﬁ
 
	g_idlok
;

371 
boﬁ
 
	g_idcok
;

372 
boﬁ
 
	g_immed
;

373 
boﬁ
 
	g_sync
;

374 
boﬁ
 
	g_u£_key∑d
;

375 
	g_dñay
;

377 
ld©
 *
	g_löe
;

380 
NCURSES_SIZE_T
 
	g_ªgt›
;

381 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

384 
	g_∑rx
;

385 
	g_∑ry
;

386 
WINDOW
 *
	g_∑ª¡
;

389 
	spd©


391 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

392 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

393 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

394 } 
	g_∑d
;

396 
NCURSES_SIZE_T
 
	g_yoff£t
;

398 #ifde‡
_XOPEN_SOURCE_EXTENDED


399 
cch¨_t
 
	g_bkg∫d
;

401 
	g_cﬁ‹
;

406 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

407 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

408 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

410 
NCURSES_EXPORT_VAR
(Ë
LINES
;

411 
NCURSES_EXPORT_VAR
(Ë
COLS
;

412 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

417 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

419 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

425 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

426 
NCURSES_EXPORT
(*Ë
keybound
 (, );

427 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

428 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

429 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

430 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

431 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

432 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

433 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

434 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

435 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

436 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

437 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

438 
NCURSES_EXPORT
(Ë
nofûãr
();

440 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

447 #ifde‡
NCURSES_WGETCH_EVENTS


448 #i‡!
deföed
(
__BEOS__
)

449 
	#NCURSES_EVENT_VERSION
 1

	)

455 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

456 
	#_NC_EVENT_FILE
 2

	)

457 
	#_NC_EVENT_FILE_READABLE
 2

	)

459 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

460 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

465 
	gty≥
;

468 
	gtimeout_m£c
;

471 
	gÊags
;

472 
	gfd
;

473 
	gªsu…
;

474 } 
	g„v
;

475 } 
	gd©a
;

476 } 
	t_nc_evít
;

480 
	gcou¡
;

481 
	gªsu…_Êags
;

482 
_nc_evít
 *
	gevíts
[1];

483 } 
	t_nc_evíéi°
;

485 
NCURSES_EXPORT
(Ë
wgëch_evíts
(
WINDOW
 *, 
_nc_evíéi°
 *);

486 
NCURSES_EXPORT
(Ë
wgën°r_evíts
(
WINDOW
 *,*,,
_nc_evíéi°
 *);

498 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

499 
	#__©åibuã__
(
p
Ë

	)

506 #i‚de‡
GCC_PRINTFLIKE


507 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

508 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

510 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

514 #i‚de‡
GCC_SCANFLIKE


515 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

516 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

518 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

522 #i‚def 
GCC_NORETURN


523 
	#GCC_NORETURN


	)

526 #i‚def 
GCC_UNUSED


527 
	#GCC_UNUSED


	)

537 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

538 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

539 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

540 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

541 
NCURSES_EXPORT
(Ë
add°r
 (const *);

542 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

543 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

544 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

545 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

546 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

547 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

548 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

549 
NCURSES_EXPORT
(Ë
baudøã
 ();

550 
NCURSES_EXPORT
(Ë
bìp
 ();

551 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

552 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

553 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

554 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

555 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

556 
NCURSES_EXPORT
(Ë
cbªak
 ();

557 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

558 
NCURSES_EXPORT
(Ë
˛ór
 ();

559 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

560 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

561 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

562 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

563 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

564 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

565 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

566 
NCURSES_EXPORT
(Ë
curs_£t
 ();

567 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

568 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

569 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

570 
NCURSES_EXPORT
(Ë
dñch
 ();

571 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

572 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

573 
NCURSES_EXPORT
(Ë
dñëñn
 ();

574 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

575 
NCURSES_EXPORT
(Ë
doupd©e
 ();

576 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

577 
NCURSES_EXPORT
(Ë
echo
 ();

578 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

579 
NCURSES_EXPORT
(Ë
îa£
 ();

580 
NCURSES_EXPORT
(Ë
ídwö
 ();

581 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

582 
NCURSES_EXPORT
(Ë
fûãr
 ();

583 
NCURSES_EXPORT
(Ë
Êash
 ();

584 
NCURSES_EXPORT
(Ë
Êushöp
 ();

585 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

586 
NCURSES_EXPORT
(Ë
gëch
 ();

587 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

588 
NCURSES_EXPORT
(Ë
gë°r
 (*);

589 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

590 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

591 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

592 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

593 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

594 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

595 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

596 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

597 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

598 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

599 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

600 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

601 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

602 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

603 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

604 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

605 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

606 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

607 
NCURSES_EXPORT
(Ë
ö£π 
 ();

608 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

609 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

610 
NCURSES_EXPORT
(Ë
ö°r
 (*);

611 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

612 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

613 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

614 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

615 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

616 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

617 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

618 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

619 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

620 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

621 
NCURSES_EXPORT
(Ë
move
 (, );

622 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

623 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

624 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

625 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

626 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

627 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

628 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

629 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

630 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

631 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

632 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

633 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

634 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

635 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

636 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

637 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

638 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

639 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

640 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

641 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

642 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

643 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

644 
GCC_PRINTFLIKE
(3,4);

645 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

646 
GCC_SCANFLIKE
(3,4);

647 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

648 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

649 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

650 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

651 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

652 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

653 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

654 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

655 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

656 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

657 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

658 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

659 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

660 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

661 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

662 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

663 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

664 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

665 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

666 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

667 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

668 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

669 
GCC_PRINTFLIKE
(4,5);

670 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

671 
GCC_SCANFLIKE
(4,5);

672 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

673 
NCURSES_EXPORT
(Ë
«pms
 ();

674 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

675 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

676 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

677 
NCURSES_EXPORT
(Ë
∆
 ();

678 
NCURSES_EXPORT
(Ë
nocbªak
 ();

679 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

680 
NCURSES_EXPORT
(Ë
n€cho
 ();

681 
NCURSES_EXPORT
(Ë
n⁄l
 ();

682 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

683 
NCURSES_EXPORT
(Ë
n‹aw
 ();

684 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

685 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

686 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

687 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

688 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

689 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

690 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

691 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

692 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

693 
GCC_PRINTFLIKE
(1,2);

694 
NCURSES_EXPORT
(Ë
puç
 (const *);

695 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

696 
NCURSES_EXPORT
(Ë
qiÊush
 ();

697 
NCURSES_EXPORT
(Ë
øw
 ();

698 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

699 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

700 
NCURSES_EXPORT
(Ë
ª£ây
 ();

701 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

702 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

703 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

704 
NCURSES_EXPORT
(Ë
ßvëty
 ();

705 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

706 
GCC_SCANFLIKE
(1,2);

707 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

708 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

709 
NCURSES_EXPORT
(Ë
s¸l
 ();

710 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

711 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

712 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

713 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

714 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

715 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

716 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

717 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

718 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

719 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

720 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

721 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

722 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

723 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

724 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

725 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

726 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

727 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

728 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

729 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

730 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

731 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

732 
NCURSES_EXPORT
(Ë
°™dout
 ();

733 
NCURSES_EXPORT
(Ë
°™díd
 ();

734 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

735 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

736 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *,,,,);

737 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

738 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

739 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

740 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

741 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

742 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

743 
NCURSES_EXPORT
(Ë
timeout
 ();

744 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

745 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

746 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

747 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

748 
NCURSES_EXPORT
(Ë
ungëch
 ();

749 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

750 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

751 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

752 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, (*)());

753 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

754 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

755 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

756 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

757 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

758 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

759 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

760 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

761 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

762 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

763 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

764 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

765 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

766 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

767 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

768 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

769 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

770 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

771 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

772 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

773 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

774 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

775 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

776 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

777 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

778 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

779 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

780 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

781 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

782 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

783 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

785 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

786 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

787 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

788 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

789 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

790 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

791 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

792 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

793 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

794 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

795 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

796 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

797 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

798 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

799 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

800 
GCC_PRINTFLIKE
(2,3);

801 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

802 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

803 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

804 
GCC_SCANFLIKE
(2,3);

805 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

806 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

807 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

809 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

810 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

811 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

812 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

813 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

818 #i‚de‡
_XOPEN_SOURCE_EXTENDED


819 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

824 
	#NCURSES_ATTR_SHIFT
 8

	)

825 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

827 
	#A_NORMAL
 (1UL - 1UL)

	)

828 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

829 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

830 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

831 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

832 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

833 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

834 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

835 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

836 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

837 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

838 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

839 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

840 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

841 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

842 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

843 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

844 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

845 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

850 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

851 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((◊Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

856 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

857 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

859 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

861 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

862 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

863 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

864 
	#¸mode
(Ë
	`cbªak
()

	)

865 
	#no¸mode
(Ë
	`nocbªak
()

	)

866 
	#gëtmode
()

	)

868 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

869 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

870 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

871 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

873 
	#gësyx
(
y
,
x
Ëdÿ{ if(
√ws¸
->
_Àaveok
) (y)=(x)=-1; \

874 
	`gëyx
(
√ws¸
,(
y
),(
x
)); \

875 } 0)

	)

876 
	#£tsyx
(
y
,
x
Ëdÿ{ if((y)==-1 && (x)==-1Ë
√ws¸
->
_Àaveok
=
TRUE
; \

877 {
√ws¸
->
_Àaveok
=
FALSE
;
	`wmove
“ews¸,(
y
),(
x
));} \

878 } 0)

	)

881 
	#gë©ås
(
wö
Ë((wö)?(wö)->
_©ås
:
A_NORMAL
)

	)

882 
	#gëcurx
(
wö
Ë((wö)?(wö)->
_curx
:
ERR
)

	)

883 
	#gëcury
(
wö
Ë((wö)?(wö)->
_cury
:
ERR
)

	)

884 
	#gëbegx
(
wö
Ë((wö)?(wö)->
_begx
:
ERR
)

	)

885 
	#gëbegy
(
wö
Ë((wö)?(wö)->
_begy
:
ERR
)

	)

886 
	#gëmaxx
(
wö
Ë((wö)?((wö)->
_maxx
 + 1):
ERR
)

	)

887 
	#gëmaxy
(
wö
Ë((wö)?((wö)->
_maxy
 + 1):
ERR
)

	)

888 
	#gë∑rx
(
wö
Ë((wö)?(wö)->
_∑rx
:
ERR
)

	)

889 
	#gë∑ry
(
wö
Ë((wö)?(wö)->
_∑ry
:
ERR
)

	)

891 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

892 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

894 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

895 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

897 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

898 
	#w©å£t
(
wö
,
©
Ë((wö)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(at), \

899 (
wö
)->
_©ås
 = (
©
))

	)

901 
	#w©å£t
(
wö
,
©
Ë((wö)->
_©ås
 = (©))

	)

904 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

906 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

907 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

908 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

910 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

911 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

912 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

913 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

915 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

916 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

917 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

919 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

920 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

921 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

927 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

928 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

929 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

930 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

931 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

932 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

933 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

934 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

935 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

936 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

937 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

938 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

939 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

940 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

941 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

942 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

943 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

944 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

945 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

946 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

947 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

948 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

949 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

950 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

951 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

952 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

953 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

954 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

955 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

956 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

957 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

958 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

959 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

960 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

961 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

962 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

963 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

964 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

965 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

966 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

967 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

968 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

969 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

970 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

976 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

977 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

978 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

979 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

980 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

981 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

982 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

983 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

984 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

985 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

986 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

987 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

988 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

989 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

990 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

991 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

992 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

993 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

994 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

995 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

997 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

998 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

999 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1000 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1001 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1002 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1003 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1004 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1005 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1006 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1007 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1008 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1009 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1010 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1011 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1012 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1013 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1014 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1015 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1016 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1021 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1023 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1024 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1026 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1027 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1028 (
wö
)->
_cﬁ‹
 = (
p
), \

1029 
OK
)

	)

1030 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!0 && (*◊Ë(wö)->
_©ås
)), \

1031 ()((
p
Ë!0 && (*’Ë(
wö
)->
_cﬁ‹
)), \

1032 
OK
)

	)

1034 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| 
	`COLOR_PAIR
’)), 
OK
)

	)

1035 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!0 && (*◊Ë(wö)->
_©ås
)), \

1036 ()((
p
Ë!0 && (*’Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1037 
OK
)

	)

1046 
	#vw_¥ötw
 
vw¥ötw


	)

1047 
	#vw_sˇnw
 
vwsˇnw


	)

1053 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1054 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1069 
	#KEY_CODE_YES
 0400

	)

1070 
	#KEY_MIN
 0401

	)

1071 
	#KEY_BREAK
 0401

	)

1072 
	#KEY_SRESET
 0530

	)

1073 
	#KEY_RESET
 0531

	)

1077 
	#KEY_DOWN
 0402

	)

1078 
	#KEY_UP
 0403

	)

1079 
	#KEY_LEFT
 0404

	)

1080 
	#KEY_RIGHT
 0405

	)

1081 
	#KEY_HOME
 0406

	)

1082 
	#KEY_BACKSPACE
 0407

	)

1083 
	#KEY_F0
 0410

	)

1084 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1085 
	#KEY_DL
 0510

	)

1086 
	#KEY_IL
 0511

	)

1087 
	#KEY_DC
 0512

	)

1088 
	#KEY_IC
 0513

	)

1089 
	#KEY_EIC
 0514

	)

1090 
	#KEY_CLEAR
 0515

	)

1091 
	#KEY_EOS
 0516

	)

1092 
	#KEY_EOL
 0517

	)

1093 
	#KEY_SF
 0520

	)

1094 
	#KEY_SR
 0521

	)

1095 
	#KEY_NPAGE
 0522

	)

1096 
	#KEY_PPAGE
 0523

	)

1097 
	#KEY_STAB
 0524

	)

1098 
	#KEY_CTAB
 0525

	)

1099 
	#KEY_CATAB
 0526

	)

1100 
	#KEY_ENTER
 0527

	)

1101 
	#KEY_PRINT
 0532

	)

1102 
	#KEY_LL
 0533

	)

1103 
	#KEY_A1
 0534

	)

1104 
	#KEY_A3
 0535

	)

1105 
	#KEY_B2
 0536

	)

1106 
	#KEY_C1
 0537

	)

1107 
	#KEY_C3
 0540

	)

1108 
	#KEY_BTAB
 0541

	)

1109 
	#KEY_BEG
 0542

	)

1110 
	#KEY_CANCEL
 0543

	)

1111 
	#KEY_CLOSE
 0544

	)

1112 
	#KEY_COMMAND
 0545

	)

1113 
	#KEY_COPY
 0546

	)

1114 
	#KEY_CREATE
 0547

	)

1115 
	#KEY_END
 0550

	)

1116 
	#KEY_EXIT
 0551

	)

1117 
	#KEY_FIND
 0552

	)

1118 
	#KEY_HELP
 0553

	)

1119 
	#KEY_MARK
 0554

	)

1120 
	#KEY_MESSAGE
 0555

	)

1121 
	#KEY_MOVE
 0556

	)

1122 
	#KEY_NEXT
 0557

	)

1123 
	#KEY_OPEN
 0560

	)

1124 
	#KEY_OPTIONS
 0561

	)

1125 
	#KEY_PREVIOUS
 0562

	)

1126 
	#KEY_REDO
 0563

	)

1127 
	#KEY_REFERENCE
 0564

	)

1128 
	#KEY_REFRESH
 0565

	)

1129 
	#KEY_REPLACE
 0566

	)

1130 
	#KEY_RESTART
 0567

	)

1131 
	#KEY_RESUME
 0570

	)

1132 
	#KEY_SAVE
 0571

	)

1133 
	#KEY_SBEG
 0572

	)

1134 
	#KEY_SCANCEL
 0573

	)

1135 
	#KEY_SCOMMAND
 0574

	)

1136 
	#KEY_SCOPY
 0575

	)

1137 
	#KEY_SCREATE
 0576

	)

1138 
	#KEY_SDC
 0577

	)

1139 
	#KEY_SDL
 0600

	)

1140 
	#KEY_SELECT
 0601

	)

1141 
	#KEY_SEND
 0602

	)

1142 
	#KEY_SEOL
 0603

	)

1143 
	#KEY_SEXIT
 0604

	)

1144 
	#KEY_SFIND
 0605

	)

1145 
	#KEY_SHELP
 0606

	)

1146 
	#KEY_SHOME
 0607

	)

1147 
	#KEY_SIC
 0610

	)

1148 
	#KEY_SLEFT
 0611

	)

1149 
	#KEY_SMESSAGE
 0612

	)

1150 
	#KEY_SMOVE
 0613

	)

1151 
	#KEY_SNEXT
 0614

	)

1152 
	#KEY_SOPTIONS
 0615

	)

1153 
	#KEY_SPREVIOUS
 0616

	)

1154 
	#KEY_SPRINT
 0617

	)

1155 
	#KEY_SREDO
 0620

	)

1156 
	#KEY_SREPLACE
 0621

	)

1157 
	#KEY_SRIGHT
 0622

	)

1158 
	#KEY_SRSUME
 0623

	)

1159 
	#KEY_SSAVE
 0624

	)

1160 
	#KEY_SSUSPEND
 0625

	)

1161 
	#KEY_SUNDO
 0626

	)

1162 
	#KEY_SUSPEND
 0627

	)

1163 
	#KEY_UNDO
 0630

	)

1164 
	#KEY_MOUSE
 0631

	)

1165 
	#KEY_RESIZE
 0632

	)

1166 
	#KEY_EVENT
 0633

	)

1168 
	#KEY_MAX
 0777

	)

1177 #i‡
NCURSES_MOUSE_VERSION
 > 1

1178 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1180 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1183 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1184 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1185 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1186 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1187 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1188 
	#NCURSES_RESERVED_EVENT
 040L

	)

1191 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1192 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1193 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1194 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1195 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1197 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1198 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1199 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1200 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1201 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1203 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1204 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1205 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1206 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1207 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1209 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1210 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1211 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1212 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1213 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1219 #i‡
NCURSES_MOUSE_VERSION
 > 1

1221 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1222 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1223 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1224 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1225 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1227 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1228 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1229 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1230 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1234 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1235 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1236 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1237 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1239 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1240 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1241 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1242 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1246 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1249 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& (001 << (6 * ((xË- 1))))

	)

1250 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& (002 << (6 * ((xË- 1))))

	)

1251 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& (004 << (6 * ((xË- 1))))

	)

1252 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& (010 << (6 * ((xË- 1))))

	)

1253 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& (020 << (6 * ((xË- 1))))

	)

1254 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& (040 << (6 * ((xË- 1))))

	)

1258 
	gid
;

1259 
	gx
, 
	gy
, 
	gz
;

1260 
mmask_t
 
	gb°©e
;

1262 
	tMEVENT
;

1264 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1265 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1266 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1267 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1268 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1269 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1270 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1272 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1276 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1277 
NCURSES_EXPORT
(Ë
has_key
 ();

1281 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1282 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1283 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1284 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1285 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1286 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1287 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1288 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1289 #ifde‡
_XOPEN_SOURCE_EXTENDED


1290 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1291 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1292 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1293 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1295 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1296 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1298 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1299 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1302 
	#TRACE_DISABLE
 0x0000

	)

1303 
	#TRACE_TIMES
 0x0001

	)

1304 
	#TRACE_TPUTS
 0x0002

	)

1305 
	#TRACE_UPDATE
 0x0004

	)

1306 
	#TRACE_MOVE
 0x0008

	)

1307 
	#TRACE_CHARPUT
 0x0010

	)

1308 
	#TRACE_ORDINARY
 0x001F

	)

1309 
	#TRACE_CALLS
 0x0020

	)

1310 
	#TRACE_VIRTPUT
 0x0040

	)

1311 
	#TRACE_IEVENT
 0x0080

	)

1312 
	#TRACE_BITS
 0x0100

	)

1313 
	#TRACE_ICALLS
 0x0200

	)

1314 
	#TRACE_CCALLS
 0x0400

	)

1315 
	#TRACE_DATABASE
 0x0800

	)

1316 
	#TRACE_ATTRS
 0x1000

	)

1318 
	#TRACE_SHIFT
 13

	)

1319 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1321 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1322 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1323 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1324 
	#OPTIMIZE_MVCUR
 0x01

	)

1325 
	#OPTIMIZE_HASHMAP
 0x02

	)

1326 
	#OPTIMIZE_SCROLL
 0x04

	)

1327 
	#OPTIMIZE_ALL
 0xf‡

	)

1330 #ifde‡
__˝lu•lus


1333 #unde‡
box


1334 #unde‡
˛ór


1335 #unde‡
îa£


1336 #unde‡
move


1337 #unde‡
ª‰esh


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/form.h

35 #i‚de‡
FORM_H


36 
	#FORM_H


	)

38 
	~<cur£s.h
>

39 
	~<ëi.h
>

41 #ifde‡
__˝lu•lus


45 #i‚de‡
FORM_PRIV_H


46 *
	tFIELD_CELL
;

49 #i‚de‡
NCURSES_FIELD_INTERNALS


50 
	#NCURSES_FIELD_INTERNALS


	)

53 
	tF‹m_O±i⁄s
;

54 
	tFõld_O±i⁄s
;

61 
	gpmö
;

62 
	gpmax
;

63 
	gsmö
;

64 
	gsmax
;

65 } 
	t_PAGE
;

71 
	sfõldnode
 {

72 
	g°©us
;

73 
	grows
;

74 
	gcﬁs
;

75 
	g‰ow
;

76 
	gfcﬁ
;

77 
	gdrows
;

78 
	gdcﬁs
;

79 
	gmaxgrow
;

80 
	gƒow
;

81 
	gnbuf
;

82 
	gju°
;

83 
	g∑ge
;

84 
	gödex
;

85 
	g∑d
;

86 
chty≥
 
	gf‹e
;

87 
chty≥
 
	gback
;

88 
Fõld_O±i⁄s
 
	g›ts
;

89 
fõldnode
 * 
	g¢ext
;

90 
fõldnode
 * 
	g•ªv
;

91 
fõldnode
 * 
	glök
;

92 
f‹mnode
 * 
	gf‹m
;

93 
ty≥node
 * 
	gty≥
;

94 * 
	g¨g
;

95 
FIELD_CELL
 * 
	gbuf
;

96 * 
	gu§±r
;

105 
	gNCURSES_FIELD_INTERNALS


106 } 
	tFIELD
;

112 
	sty≥node
 {

113 
	g°©us
;

114 
	gªf
;

115 
ty≥node
 * 
	gÀ·
;

116 
ty≥node
 * 
	gright
;

118 * (*
	gmakórg
)(
	gva_li°
 *);

119 * (*
	gc›y¨g
)(const *);

120 (*
	g‰ì¨g
)(*);

122 
boﬁ
 (*
fcheck
)(
	gFIELD
 *,const *);

123 
boﬁ
 (*
ccheck
)(,const *);

125 
boﬁ
 (*
√xt
)(
	gFIELD
 *,const *);

126 
boﬁ
 (*
¥ev
)(
	gFIELD
 *,const *);

128 } 
	tFIELDTYPE
;

134 
	sf‹mnode
 {

135 
	g°©us
;

136 
	grows
;

137 
	gcﬁs
;

138 
	gcuºow
;

139 
	gcurcﬁ
;

140 
	gt›row
;

141 
	gbegöcﬁ
;

142 
	gmaxfõld
;

143 
	gmax∑ge
;

144 
	gcuΩage
;

145 
F‹m_O±i⁄s
 
	g›ts
;

146 
WINDOW
 * 
	gwö
;

147 
WINDOW
 * 
	gsub
;

148 
WINDOW
 * 
	gw
;

149 
FIELD
 ** 
	gfõld
;

150 
FIELD
 * 
	gcuºít
;

151 
_PAGE
 * 
	g∑ge
;

152 * 
	gu§±r
;

154 (*
	gf‹möô
)(
	gf‹mnode
 *);

155 (*
	gf‹mãrm
)(
	gf‹mnode
 *);

156 (*
	gfõldöô
)(
	gf‹mnode
 *);

157 (*
	gfõldãrm
)(
	gf‹mnode
 *);

159 } 
	tFORM
;

161 (*
	gF‹m_Hook
)(
	tFORM
 *);

168 
	#NO_JUSTIFICATION
 (0)

	)

169 
	#JUSTIFY_LEFT
 (1)

	)

170 
	#JUSTIFY_CENTER
 (2)

	)

171 
	#JUSTIFY_RIGHT
 (3)

	)

174 
	#O_VISIBLE
 (0x0001U)

	)

175 
	#O_ACTIVE
 (0x0002U)

	)

176 
	#O_PUBLIC
 (0x0004U)

	)

177 
	#O_EDIT
 (0x0008U)

	)

178 
	#O_WRAP
 (0x0010U)

	)

179 
	#O_BLANK
 (0x0020U)

	)

180 
	#O_AUTOSKIP
 (0x0040U)

	)

181 
	#O_NULLOK
 (0x0080U)

	)

182 
	#O_PASSOK
 (0x0100U)

	)

183 
	#O_STATIC
 (0x0200U)

	)

186 
	#O_NL_OVERLOAD
 (0x0001U)

	)

187 
	#O_BS_OVERLOAD
 (0x0002U)

	)

190 
	#REQ_NEXT_PAGE
 (
KEY_MAX
 + 1Ë

	)

191 
	#REQ_PREV_PAGE
 (
KEY_MAX
 + 2Ë

	)

192 
	#REQ_FIRST_PAGE
 (
KEY_MAX
 + 3Ë

	)

193 
	#REQ_LAST_PAGE
 (
KEY_MAX
 + 4Ë

	)

195 
	#REQ_NEXT_FIELD
 (
KEY_MAX
 + 5Ë

	)

196 
	#REQ_PREV_FIELD
 (
KEY_MAX
 + 6Ë

	)

197 
	#REQ_FIRST_FIELD
 (
KEY_MAX
 + 7Ë

	)

198 
	#REQ_LAST_FIELD
 (
KEY_MAX
 + 8Ë

	)

199 
	#REQ_SNEXT_FIELD
 (
KEY_MAX
 + 9Ë

	)

200 
	#REQ_SPREV_FIELD
 (
KEY_MAX
 + 10Ë

	)

201 
	#REQ_SFIRST_FIELD
 (
KEY_MAX
 + 11Ë

	)

202 
	#REQ_SLAST_FIELD
 (
KEY_MAX
 + 12Ë

	)

203 
	#REQ_LEFT_FIELD
 (
KEY_MAX
 + 13Ë

	)

204 
	#REQ_RIGHT_FIELD
 (
KEY_MAX
 + 14Ë

	)

205 
	#REQ_UP_FIELD
 (
KEY_MAX
 + 15Ë

	)

206 
	#REQ_DOWN_FIELD
 (
KEY_MAX
 + 16Ë

	)

208 
	#REQ_NEXT_CHAR
 (
KEY_MAX
 + 17Ë

	)

209 
	#REQ_PREV_CHAR
 (
KEY_MAX
 + 18Ë

	)

210 
	#REQ_NEXT_LINE
 (
KEY_MAX
 + 19Ë

	)

211 
	#REQ_PREV_LINE
 (
KEY_MAX
 + 20Ë

	)

212 
	#REQ_NEXT_WORD
 (
KEY_MAX
 + 21Ë

	)

213 
	#REQ_PREV_WORD
 (
KEY_MAX
 + 22Ë

	)

214 
	#REQ_BEG_FIELD
 (
KEY_MAX
 + 23Ë

	)

215 
	#REQ_END_FIELD
 (
KEY_MAX
 + 24Ë

	)

216 
	#REQ_BEG_LINE
 (
KEY_MAX
 + 25Ë

	)

217 
	#REQ_END_LINE
 (
KEY_MAX
 + 26Ë

	)

218 
	#REQ_LEFT_CHAR
 (
KEY_MAX
 + 27Ë

	)

219 
	#REQ_RIGHT_CHAR
 (
KEY_MAX
 + 28Ë

	)

220 
	#REQ_UP_CHAR
 (
KEY_MAX
 + 29Ë

	)

221 
	#REQ_DOWN_CHAR
 (
KEY_MAX
 + 30Ë

	)

223 
	#REQ_NEW_LINE
 (
KEY_MAX
 + 31Ë

	)

224 
	#REQ_INS_CHAR
 (
KEY_MAX
 + 32Ë

	)

225 
	#REQ_INS_LINE
 (
KEY_MAX
 + 33Ë

	)

226 
	#REQ_DEL_CHAR
 (
KEY_MAX
 + 34Ë

	)

227 
	#REQ_DEL_PREV
 (
KEY_MAX
 + 35Ë

	)

228 
	#REQ_DEL_LINE
 (
KEY_MAX
 + 36Ë

	)

229 
	#REQ_DEL_WORD
 (
KEY_MAX
 + 37Ë

	)

230 
	#REQ_CLR_EOL
 (
KEY_MAX
 + 38Ë

	)

231 
	#REQ_CLR_EOF
 (
KEY_MAX
 + 39Ë

	)

232 
	#REQ_CLR_FIELD
 (
KEY_MAX
 + 40Ë

	)

233 
	#REQ_OVL_MODE
 (
KEY_MAX
 + 41Ë

	)

234 
	#REQ_INS_MODE
 (
KEY_MAX
 + 42Ë

	)

235 
	#REQ_SCR_FLINE
 (
KEY_MAX
 + 43Ë

	)

236 
	#REQ_SCR_BLINE
 (
KEY_MAX
 + 44Ë

	)

237 
	#REQ_SCR_FPAGE
 (
KEY_MAX
 + 45Ë

	)

238 
	#REQ_SCR_BPAGE
 (
KEY_MAX
 + 46Ë

	)

239 
	#REQ_SCR_FHPAGE
 (
KEY_MAX
 + 47Ë

	)

240 
	#REQ_SCR_BHPAGE
 (
KEY_MAX
 + 48Ë

	)

241 
	#REQ_SCR_FCHAR
 (
KEY_MAX
 + 49Ë

	)

242 
	#REQ_SCR_BCHAR
 (
KEY_MAX
 + 50Ë

	)

243 
	#REQ_SCR_HFLINE
 (
KEY_MAX
 + 51Ë

	)

244 
	#REQ_SCR_HBLINE
 (
KEY_MAX
 + 52Ë

	)

245 
	#REQ_SCR_HFHALF
 (
KEY_MAX
 + 53Ë

	)

246 
	#REQ_SCR_HBHALF
 (
KEY_MAX
 + 54Ë

	)

248 
	#REQ_VALIDATION
 (
KEY_MAX
 + 55Ë

	)

249 
	#REQ_NEXT_CHOICE
 (
KEY_MAX
 + 56Ë

	)

250 
	#REQ_PREV_CHOICE
 (
KEY_MAX
 + 57Ë

	)

252 
	#MIN_FORM_COMMAND
 (
KEY_MAX
 + 1Ë

	)

253 
	#MAX_FORM_COMMAND
 (
KEY_MAX
 + 57Ë

	)

255 #i‡
deföed
(
MAX_COMMAND
)

256 #i‡(
MAX_FORM_COMMAND
 > 
MAX_COMMAND
)

257 #îr‹ 
Somëhög
 
is
 
wr⁄g
 -- 
MAX_FORM_COMMAND
 i†
gª©î
 
th™
 
MAX_COMMAND


258 #ñi‡(
MAX_COMMAND
 !(
KEY_MAX
 + 128))

259 #îr‹ 
Somëhög
 
is
 
wr⁄g
 -- 
MAX_COMMAND
 i†
Æªady
 
öc⁄si°íéy
 
deföed
.

262 
	#MAX_COMMAND
 (
KEY_MAX
 + 128)

	)

268 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_ALPHA
;

269 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_ALNUM
;

270 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_ENUM
;

271 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_INTEGER
;

272 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_NUMERIC
;

273 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_REGEXP
;

279 
NCURSES_EXPORT_VAR
(
FIELDTYPE
 *Ë
TYPE_IPV4
;

284 
NCURSES_EXPORT_VAR
(
FORM
 *Ë
_nc_DeÁu…_F‹m
;

285 
NCURSES_EXPORT_VAR
(
FIELD
 *Ë
_nc_DeÁu…_Fõld
;

291 
NCURSES_EXPORT
(
FIELDTYPE
 *Ë
√w_fõldty≥
 (

292 
boﬁ
 (* c⁄° 
fõld_check
)(
FIELD
 *,const *),

293 
boﬁ
 (* c⁄° 
ch¨_check
)(,const *));

294 
NCURSES_EXPORT
(
FIELDTYPE
 *Ë
lök_fõldty≥
(

295 
FIELDTYPE
 *, FIELDTYPE *);

297 
NCURSES_EXPORT
(Ë
‰ì_fõldty≥
 (
FIELDTYPE
 *);

298 
NCURSES_EXPORT
(Ë
£t_fõldty≥_¨g
 (
FIELDTYPE
 *,

299 * (* c⁄° 
make_¨g
)(
va_li°
 *),

300 * (* c⁄° 
c›y_¨g
)(const *),

301 (* c⁄° 
‰ì_¨g
)(*));

302 
NCURSES_EXPORT
(Ë
£t_fõldty≥_choi˚
 (
FIELDTYPE
 *,

303 
boﬁ
 (* c⁄° 
√xt_choi˚
)(
FIELD
 *,const *),

304 
boﬁ
 (* c⁄° 
¥ev_choi˚
)(
FIELD
 *,const *));

309 
NCURSES_EXPORT
(
FIELD
 *Ë
√w_fõld
 (,,,,,);

310 
NCURSES_EXPORT
(
FIELD
 *Ë
dup_fõld
 (FIELD *,,);

311 
NCURSES_EXPORT
(
FIELD
 *Ë
lök_fõld
 (FIELD *,,);

313 
NCURSES_EXPORT
(Ë
‰ì_fõld
 (
FIELD
 *);

314 
NCURSES_EXPORT
(Ë
fõld_öfo
 (c⁄° 
FIELD
 *,*,*,*,*,*,*);

315 
NCURSES_EXPORT
(Ë
dy«mic_fõld_öfo
 (c⁄° 
FIELD
 *,*,*,*);

316 
NCURSES_EXPORT
(Ë
£t_max_fõld
 ( 
FIELD
 *,);

317 
NCURSES_EXPORT
(Ë
move_fõld
 (
FIELD
 *,,);

318 
NCURSES_EXPORT
(Ë
£t_fõld_ty≥
 (
FIELD
 *,
FIELDTYPE
 *,...);

319 
NCURSES_EXPORT
(Ë
£t_√w_∑ge
 (
FIELD
 *,
boﬁ
);

320 
NCURSES_EXPORT
(Ë
£t_fõld_ju°
 (
FIELD
 *,);

321 
NCURSES_EXPORT
(Ë
fõld_ju°
 (c⁄° 
FIELD
 *);

322 
NCURSES_EXPORT
(Ë
£t_fõld_f‹e
 (
FIELD
 *,
chty≥
);

323 
NCURSES_EXPORT
(Ë
£t_fõld_back
 (
FIELD
 *,
chty≥
);

324 
NCURSES_EXPORT
(Ë
£t_fõld_∑d
 (
FIELD
 *,);

325 
NCURSES_EXPORT
(Ë
fõld_∑d
 (c⁄° 
FIELD
 *);

326 
NCURSES_EXPORT
(Ë
£t_fõld_buf„r
 (
FIELD
 *,,const *);

327 
NCURSES_EXPORT
(Ë
£t_fõld_°©us
 (
FIELD
 *,
boﬁ
);

328 
NCURSES_EXPORT
(Ë
£t_fõld_u£Ωå
 (
FIELD
 *, *);

329 
NCURSES_EXPORT
(Ë
£t_fõld_›ts
 (
FIELD
 *,
Fõld_O±i⁄s
);

330 
NCURSES_EXPORT
(Ë
fõld_›ts_⁄
 (
FIELD
 *,
Fõld_O±i⁄s
);

331 
NCURSES_EXPORT
(Ë
fõld_›ts_off
 (
FIELD
 *,
Fõld_O±i⁄s
);

333 
NCURSES_EXPORT
(
chty≥
Ë
fõld_f‹e
 (c⁄° 
FIELD
 *);

334 
NCURSES_EXPORT
(
chty≥
Ë
fõld_back
 (c⁄° 
FIELD
 *);

336 
NCURSES_EXPORT
(
boﬁ
Ë
√w_∑ge
 (c⁄° 
FIELD
 *);

337 
NCURSES_EXPORT
(
boﬁ
Ë
fõld_°©us
 (c⁄° 
FIELD
 *);

339 
NCURSES_EXPORT
(*Ë
fõld_¨g
 (c⁄° 
FIELD
 *);

341 
NCURSES_EXPORT
(*Ë
fõld_u£Ωå
 (c⁄° 
FIELD
 *);

343 
NCURSES_EXPORT
(
FIELDTYPE
 *Ë
fõld_ty≥
 (c⁄° 
FIELD
 *);

345 
NCURSES_EXPORT
(*Ë
fõld_buf„r
 (c⁄° 
FIELD
 *,);

347 
NCURSES_EXPORT
(
Fõld_O±i⁄s
Ë
fõld_›ts
 (c⁄° 
FIELD
 *);

353 
NCURSES_EXPORT
(
FORM
 *Ë
√w_f‹m
 (
FIELD
 **);

355 
NCURSES_EXPORT
(
FIELD
 **Ë
f‹m_fõlds
 (c⁄° 
FORM
 *);

356 
NCURSES_EXPORT
(
FIELD
 *Ë
cuºít_fõld
 (c⁄° 
FORM
 *);

358 
NCURSES_EXPORT
(
WINDOW
 *Ë
f‹m_wö
 (c⁄° 
FORM
 *);

359 
NCURSES_EXPORT
(
WINDOW
 *Ë
f‹m_sub
 (c⁄° 
FORM
 *);

361 
NCURSES_EXPORT
(
F‹m_Hook
Ë
f‹m_öô
 (c⁄° 
FORM
 *);

362 
NCURSES_EXPORT
(
F‹m_Hook
Ë
f‹m_ãrm
 (c⁄° 
FORM
 *);

363 
NCURSES_EXPORT
(
F‹m_Hook
Ë
fõld_öô
 (c⁄° 
FORM
 *);

364 
NCURSES_EXPORT
(
F‹m_Hook
Ë
fõld_ãrm
 (c⁄° 
FORM
 *);

366 
NCURSES_EXPORT
(Ë
‰ì_f‹m
 (
FORM
 *);

367 
NCURSES_EXPORT
(Ë
£t_f‹m_fõlds
 (
FORM
 *,
FIELD
 **);

368 
NCURSES_EXPORT
(Ë
fõld_cou¡
 (c⁄° 
FORM
 *);

369 
NCURSES_EXPORT
(Ë
£t_f‹m_wö
 (
FORM
 *,
WINDOW
 *);

370 
NCURSES_EXPORT
(Ë
£t_f‹m_sub
 (
FORM
 *,
WINDOW
 *);

371 
NCURSES_EXPORT
(Ë
£t_cuºít_fõld
 (
FORM
 *,
FIELD
 *);

372 
NCURSES_EXPORT
(Ë
fõld_ödex
 (c⁄° 
FIELD
 *);

373 
NCURSES_EXPORT
(Ë
£t_f‹m_∑ge
 (
FORM
 *,);

374 
NCURSES_EXPORT
(Ë
f‹m_∑ge
 (c⁄° 
FORM
 *);

375 
NCURSES_EXPORT
(Ë
sˇÀ_f‹m
 (c⁄° 
FORM
 *,*,*);

376 
NCURSES_EXPORT
(Ë
£t_f‹m_öô
 (
FORM
 *,
F‹m_Hook
);

377 
NCURSES_EXPORT
(Ë
£t_f‹m_ãrm
 (
FORM
 *,
F‹m_Hook
);

378 
NCURSES_EXPORT
(Ë
£t_fõld_öô
 (
FORM
 *,
F‹m_Hook
);

379 
NCURSES_EXPORT
(Ë
£t_fõld_ãrm
 (
FORM
 *,
F‹m_Hook
);

380 
NCURSES_EXPORT
(Ë
po°_f‹m
 (
FORM
 *);

381 
NCURSES_EXPORT
(Ë
u≈o°_f‹m
 (
FORM
 *);

382 
NCURSES_EXPORT
(Ë
pos_f‹m_curs‹
 (
FORM
 *);

383 
NCURSES_EXPORT
(Ë
f‹m_drivî
 (
FORM
 *,);

384 
NCURSES_EXPORT
(Ë
£t_f‹m_u£Ωå
 (
FORM
 *,*);

385 
NCURSES_EXPORT
(Ë
£t_f‹m_›ts
 (
FORM
 *,
F‹m_O±i⁄s
);

386 
NCURSES_EXPORT
(Ë
f‹m_›ts_⁄
 (
FORM
 *,
F‹m_O±i⁄s
);

387 
NCURSES_EXPORT
(Ë
f‹m_›ts_off
 (
FORM
 *,
F‹m_O±i⁄s
);

388 
NCURSES_EXPORT
(Ë
f‹m_ªque°_by_«me
 (const *);

390 
NCURSES_EXPORT
(c⁄° *Ë
f‹m_ªque°_«me
 ();

392 
NCURSES_EXPORT
(*Ë
f‹m_u£Ωå
 (c⁄° 
FORM
 *);

394 
NCURSES_EXPORT
(
F‹m_O±i⁄s
Ë
f‹m_›ts
 (c⁄° 
FORM
 *);

396 
NCURSES_EXPORT
(
boﬁ
Ë
d©a_ahód
 (c⁄° 
FORM
 *);

397 
NCURSES_EXPORT
(
boﬁ
Ë
d©a_behöd
 (c⁄° 
FORM
 *);

399 #ifde‡
__˝lu•lus


	@/usr/include/menu.h

35 #i‚de‡
ETI_MENU


36 
	#ETI_MENU


	)

38 #ifde‡
AMIGA


39 
	#TEXT
 
TEXT_ncur£s


	)

42 
	~<cur£s.h
>

43 
	~<ëi.h
>

45 #ifde‡
__˝lu•lus


49 
	tMíu_O±i⁄s
;

50 
	tIãm_O±i⁄s
;

53 
	#O_ONEVALUE
 (0x01)

	)

54 
	#O_SHOWDESC
 (0x02)

	)

55 
	#O_ROWMAJOR
 (0x04)

	)

56 
	#O_IGNORECASE
 (0x08)

	)

57 
	#O_SHOWMATCH
 (0x10)

	)

58 
	#O_NONCYCLIC
 (0x20)

	)

61 
	#O_SELECTABLE
 (0x01)

	)

65 c⁄° * 
°r
;

66 
Àngth
;

67 } 
	tTEXT
;

69 
	sègITEM


71 
TEXT
 
«me
;

72 
TEXT
 
des¸ùti⁄
;

73 
ègMENU
 *
imíu
;

74 *
u£Ωå
;

75 
Iãm_O±i⁄s
 
›t
;

76 
ödex
;

77 
y
;

78 
x
;

79 
boﬁ
 
vÆue
;

81 
ègITEM
 *
À·
;

82 
ègITEM
 *
right
;

83 
ègITEM
 *
up
;

84 
ègITEM
 *
down
;

86 } 
	tITEM
;

88 (*
Míu_Hook
)(
	tègMENU
 *);

90 
	sègMENU


92 
height
;

93 
width
;

94 
rows
;

95 
cﬁs
;

96 
‰ows
;

97 
fcﬁs
;

98 
¨ows
;

99 
«mñí
;

100 
des˛í
;

101 
m¨kÀn
;

102 
ôemÀn
;

103 
•c_desc
;

104 
•c_cﬁs
;

105 
•c_rows
;

106 *
∑âîn
;

107 
pödex
;

108 
WINDOW
 *
wö
;

109 
WINDOW
 *
sub
;

110 
WINDOW
 *
u£rwö
;

111 
WINDOW
 *
u£rsub
;

112 
ITEM
 **
ôems
;

113 
nôems
;

114 
ITEM
 *
curôem
;

115 
t›row
;

116 
chty≥
 
f‹e
;

117 
chty≥
 
back
;

118 
chty≥
 
gªy
;

119 
∑d
;

121 
Míu_Hook
 
míuöô
;

122 
Míu_Hook
 
míuãrm
;

123 
Míu_Hook
 
ôemöô
;

124 
Míu_Hook
 
ôemãrm
;

126 *
u£Ωå
;

127 *
m¨k
;

129 
Míu_O±i⁄s
 
›t
;

130 
°©us
;

132 } 
	tMENU
;

137 
	#REQ_LEFT_ITEM
 (
KEY_MAX
 + 1)

	)

138 
	#REQ_RIGHT_ITEM
 (
KEY_MAX
 + 2)

	)

139 
	#REQ_UP_ITEM
 (
KEY_MAX
 + 3)

	)

140 
	#REQ_DOWN_ITEM
 (
KEY_MAX
 + 4)

	)

141 
	#REQ_SCR_ULINE
 (
KEY_MAX
 + 5)

	)

142 
	#REQ_SCR_DLINE
 (
KEY_MAX
 + 6)

	)

143 
	#REQ_SCR_DPAGE
 (
KEY_MAX
 + 7)

	)

144 
	#REQ_SCR_UPAGE
 (
KEY_MAX
 + 8)

	)

145 
	#REQ_FIRST_ITEM
 (
KEY_MAX
 + 9)

	)

146 
	#REQ_LAST_ITEM
 (
KEY_MAX
 + 10)

	)

147 
	#REQ_NEXT_ITEM
 (
KEY_MAX
 + 11)

	)

148 
	#REQ_PREV_ITEM
 (
KEY_MAX
 + 12)

	)

149 
	#REQ_TOGGLE_ITEM
 (
KEY_MAX
 + 13)

	)

150 
	#REQ_CLEAR_PATTERN
 (
KEY_MAX
 + 14)

	)

151 
	#REQ_BACK_PATTERN
 (
KEY_MAX
 + 15)

	)

152 
	#REQ_NEXT_MATCH
 (
KEY_MAX
 + 16)

	)

153 
	#REQ_PREV_MATCH
 (
KEY_MAX
 + 17)

	)

155 
	#MIN_MENU_COMMAND
 (
KEY_MAX
 + 1)

	)

156 
	#MAX_MENU_COMMAND
 (
KEY_MAX
 + 17)

	)

162 #i‡
deföed
(
MAX_COMMAND
)

163 #i‡(
MAX_MENU_COMMAND
 > 
MAX_COMMAND
)

164 #îr‹ 
Somëhög
 
is
 
wr⁄g
 -- 
MAX_MENU_COMMAND
 i†
gª©î
 
th™
 
MAX_COMMAND


165 #ñi‡(
MAX_COMMAND
 !(
KEY_MAX
 + 128))

166 #îr‹ 
Somëhög
 
is
 
wr⁄g
 -- 
MAX_COMMAND
 i†
Æªady
 
öc⁄si°íéy
 
deföed
.

169 
	#MAX_COMMAND
 (
KEY_MAX
 + 128)

	)

175 
NCURSES_EXPORT
(
ITEM
 **Ë
míu_ôems
 (c⁄° 
MENU
 *);

176 
NCURSES_EXPORT
(
ITEM
 *Ë
cuºít_ôem
 (c⁄° 
MENU
 *);

177 
NCURSES_EXPORT
(
ITEM
 *Ë
√w_ôem
 (const *,const *);

179 
NCURSES_EXPORT
(
MENU
 *Ë
√w_míu
 (
ITEM
 **);

181 
NCURSES_EXPORT
(
Iãm_O±i⁄s
Ë
ôem_›ts
 (c⁄° 
ITEM
 *);

182 
NCURSES_EXPORT
(
Míu_O±i⁄s
Ë
míu_›ts
 (c⁄° 
MENU
 *);

184 
NCURSES_EXPORT
(
Míu_Hook
Ë
ôem_öô
 (c⁄° 
MENU
 *);

185 
NCURSES_EXPORT
(
Míu_Hook
Ë
ôem_ãrm
 (c⁄° 
MENU
 *);

186 
NCURSES_EXPORT
(
Míu_Hook
Ë
míu_öô
 (c⁄° 
MENU
 *);

187 
NCURSES_EXPORT
(
Míu_Hook
Ë
míu_ãrm
 (c⁄° 
MENU
 *);

189 
NCURSES_EXPORT
(
WINDOW
 *Ë
míu_sub
 (c⁄° 
MENU
 *);

190 
NCURSES_EXPORT
(
WINDOW
 *Ë
míu_wö
 (c⁄° 
MENU
 *);

192 
NCURSES_EXPORT
(c⁄° *Ë
ôem_des¸ùti⁄
 (c⁄° 
ITEM
 *);

193 
NCURSES_EXPORT
(c⁄° *Ë
ôem_«me
 (c⁄° 
ITEM
 *);

194 
NCURSES_EXPORT
(c⁄° *Ë
míu_m¨k
 (c⁄° 
MENU
 *);

195 
NCURSES_EXPORT
(c⁄° *Ë
míu_ªque°_«me
 ();

197 
NCURSES_EXPORT
(*Ë
míu_∑âîn
 (c⁄° 
MENU
 *);

199 
NCURSES_EXPORT
(*Ë
míu_u£Ωå
 (c⁄° 
MENU
 *);

200 
NCURSES_EXPORT
(*Ë
ôem_u£Ωå
 (c⁄° 
ITEM
 *);

202 
NCURSES_EXPORT
(
chty≥
Ë
míu_back
 (c⁄° 
MENU
 *);

203 
NCURSES_EXPORT
(
chty≥
Ë
míu_f‹e
 (c⁄° 
MENU
 *);

204 
NCURSES_EXPORT
(
chty≥
Ë
míu_gªy
 (c⁄° 
MENU
 *);

206 
NCURSES_EXPORT
(Ë
‰ì_ôem
 (
ITEM
 *);

207 
NCURSES_EXPORT
(Ë
‰ì_míu
 (
MENU
 *);

208 
NCURSES_EXPORT
(Ë
ôem_cou¡
 (c⁄° 
MENU
 *);

209 
NCURSES_EXPORT
(Ë
ôem_ödex
 (c⁄° 
ITEM
 *);

210 
NCURSES_EXPORT
(Ë
ôem_›ts_off
 (
ITEM
 *,
Iãm_O±i⁄s
);

211 
NCURSES_EXPORT
(Ë
ôem_›ts_⁄
 (
ITEM
 *,
Iãm_O±i⁄s
);

212 
NCURSES_EXPORT
(Ë
míu_drivî
 (
MENU
 *,);

213 
NCURSES_EXPORT
(Ë
míu_›ts_off
 (
MENU
 *,
Míu_O±i⁄s
);

214 
NCURSES_EXPORT
(Ë
míu_›ts_⁄
 (
MENU
 *,
Míu_O±i⁄s
);

215 
NCURSES_EXPORT
(Ë
míu_∑d
 (c⁄° 
MENU
 *);

216 
NCURSES_EXPORT
(Ë
pos_míu_curs‹
 (c⁄° 
MENU
 *);

217 
NCURSES_EXPORT
(Ë
po°_míu
 (
MENU
 *);

218 
NCURSES_EXPORT
(Ë
sˇÀ_míu
 (c⁄° 
MENU
 *,*,*);

219 
NCURSES_EXPORT
(Ë
£t_cuºít_ôem
 (
MENU
 *
míu
,
ITEM
 *
ôem
);

220 
NCURSES_EXPORT
(Ë
£t_ôem_öô
 (
MENU
 *,(*)(MENU *));

221 
NCURSES_EXPORT
(Ë
£t_ôem_›ts
 (
ITEM
 *,
Iãm_O±i⁄s
);

222 
NCURSES_EXPORT
(Ë
£t_ôem_ãrm
 (
MENU
 *,(*)(MENU *));

223 
NCURSES_EXPORT
(Ë
£t_ôem_u£Ωå
 (
ITEM
 *, *);

224 
NCURSES_EXPORT
(Ë
£t_ôem_vÆue
 (
ITEM
 *,
boﬁ
);

225 
NCURSES_EXPORT
(Ë
£t_míu_back
 (
MENU
 *,
chty≥
);

226 
NCURSES_EXPORT
(Ë
£t_míu_f‹e
 (
MENU
 *,
chty≥
);

227 
NCURSES_EXPORT
(Ë
£t_míu_f‹m©
 (
MENU
 *,,);

228 
NCURSES_EXPORT
(Ë
£t_míu_gªy
 (
MENU
 *,
chty≥
);

229 
NCURSES_EXPORT
(Ë
£t_míu_öô
 (
MENU
 *,(*)(MENU *));

230 
NCURSES_EXPORT
(Ë
£t_míu_ôems
 (
MENU
 *,
ITEM
 **);

231 
NCURSES_EXPORT
(Ë
£t_míu_m¨k
 (
MENU
 *, const *);

232 
NCURSES_EXPORT
(Ë
£t_míu_›ts
 (
MENU
 *,
Míu_O±i⁄s
);

233 
NCURSES_EXPORT
(Ë
£t_míu_∑d
 (
MENU
 *,);

234 
NCURSES_EXPORT
(Ë
£t_míu_∑âîn
 (
MENU
 *,const *);

235 
NCURSES_EXPORT
(Ë
£t_míu_sub
 (
MENU
 *,
WINDOW
 *);

236 
NCURSES_EXPORT
(Ë
£t_míu_ãrm
 (
MENU
 *,(*)(MENU *));

237 
NCURSES_EXPORT
(Ë
£t_míu_u£Ωå
 (
MENU
 *,*);

238 
NCURSES_EXPORT
(Ë
£t_míu_wö
 (
MENU
 *,
WINDOW
 *);

239 
NCURSES_EXPORT
(Ë
£t_t›_row
 (
MENU
 *,);

240 
NCURSES_EXPORT
(Ë
t›_row
 (c⁄° 
MENU
 *);

241 
NCURSES_EXPORT
(Ë
u≈o°_míu
 (
MENU
 *);

242 
NCURSES_EXPORT
(Ë
míu_ªque°_by_«me
 (const *);

243 
NCURSES_EXPORT
(Ë
£t_míu_•acög
 (
MENU
 *,,,);

244 
NCURSES_EXPORT
(Ë
míu_•acög
 (c⁄° 
MENU
 *,*,*,*);

247 
NCURSES_EXPORT
(
boﬁ
Ë
ôem_vÆue
 (c⁄° 
ITEM
 *);

248 
NCURSES_EXPORT
(
boﬁ
Ë
ôem_visibÀ
 (c⁄° 
ITEM
 *);

250 
NCURSES_EXPORT
(Ë
míu_f‹m©
 (c⁄° 
MENU
 *,*,*);

252 #ifde‡
__˝lu•lus


	@/usr/include/panel.h

36 #i‚de‡
NCURSES_PANEL_H_ö˛


37 
	#NCURSES_PANEL_H_ö˛
 1

	)

39 
	~<cur£s.h
>

41 
	s∑√l


43 
WINDOW
 *
	mwö
;

44 
∑√l
 *
	mbñow
;

45 
∑√l
 *
	mabove
;

46 
NCURSES_CONST
 *
	mu£r
;

47 } 
	tPANEL
;

49 #if 
deföed
(
__˝lu•lus
)

53 
NCURSES_EXPORT
(
WINDOW
*Ë
∑√l_wödow
 (c⁄° 
PANEL
 *);

54 
NCURSES_EXPORT
(Ë
upd©e_∑√ls
 ();

55 
NCURSES_EXPORT
(Ë
hide_∑√l
 (
PANEL
 *);

56 
NCURSES_EXPORT
(Ë
show_∑√l
 (
PANEL
 *);

57 
NCURSES_EXPORT
(Ë
dñ_∑√l
 (
PANEL
 *);

58 
NCURSES_EXPORT
(Ë
t›_∑√l
 (
PANEL
 *);

59 
NCURSES_EXPORT
(Ë
bŸtom_∑√l
 (
PANEL
 *);

60 
NCURSES_EXPORT
(
PANEL
*Ë
√w_∑√l
 (
WINDOW
 *);

61 
NCURSES_EXPORT
(
PANEL
*Ë
∑√l_above
 (const PANEL *);

62 
NCURSES_EXPORT
(
PANEL
*Ë
∑√l_bñow
 (const PANEL *);

63 
NCURSES_EXPORT
(Ë
£t_∑√l_u£Ωå
 (
PANEL
 *, 
NCURSES_CONST
 *);

64 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
∑√l_u£Ωå
 (c⁄° 
PANEL
 *);

65 
NCURSES_EXPORT
(Ë
move_∑√l
 (
PANEL
 *, , );

66 
NCURSES_EXPORT
(Ë
ª∂a˚_∑√l
 (
PANEL
 *,
WINDOW
 *);

67 
NCURSES_EXPORT
(Ë
∑√l_hiddí
 (c⁄° 
PANEL
 *);

69 #if 
deföed
(
__˝lu•lus
)

	@/usr/include/pthread.h

15 #i‚de‡
_PTHREAD_H


16 
	#_PTHREAD_H
 1

	)

18 
	~<„©uªs.h
>

20 
	~<sched.h
>

21 
	~<time.h
>

23 
	#__√ed_sig£t_t


	)

24 
	~<sig«l.h
>

25 
	~<bôs/±hªadty≥s.h
>

26 
	~<bôs/öô•ö.h
>

29 
	g__BEGIN_DECLS


33 
	#PTHREAD_MUTEX_INITIALIZER
 \

34 {0, 0, 0, 
PTHREAD_MUTEX_TIMED_NP
, 
__LOCK_ALT_INITIALIZER
}

	)

35 #ifde‡
__USE_GNU


36 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

37 {0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__LOCK_ALT_INITIALIZER
}

	)

38 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

39 {0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__LOCK_ALT_INITIALIZER
}

	)

40 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

41 {0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__LOCK_ALT_INITIALIZER
}

	)

44 
	#PTHREAD_COND_INITIALIZER
 {
__LOCK_ALT_INITIALIZER
, 0, "", 0}

	)

46 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


47 
	#PTHREAD_RWLOCK_INITIALIZER
 \

48 { 
__LOCK_ALT_INITIALIZER
, 0, 
NULL
, NULL, NULL, \

49 
PTHREAD_RWLOCK_DEFAULT_NP
, 
PTHREAD_PROCESS_PRIVATE
 }

	)

51 #ifde‡
__USE_GNU


52 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

53 { 
__LOCK_ALT_INITIALIZER
, 0, 
NULL
, NULL, NULL, \

54 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, 
PTHREAD_PROCESS_PRIVATE
 }

	)

61 
	mPTHREAD_CREATE_JOINABLE
,

62 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

63 
	mPTHREAD_CREATE_DETACHED


64 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

69 
	mPTHREAD_INHERIT_SCHED
,

70 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

71 
	mPTHREAD_EXPLICIT_SCHED


72 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

77 
	mPTHREAD_SCOPE_SYSTEM
,

78 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

79 
	mPTHREAD_SCOPE_PROCESS


80 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

85 
	mPTHREAD_MUTEX_TIMED_NP
,

86 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

87 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

88 
	mPTHREAD_MUTEX_ADAPTIVE_NP


89 #ifde‡
__USE_UNIX98


91 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

92 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

93 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

94 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


96 #ifde‡
__USE_GNU


98 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_ADAPTIVE_NP


104 
	mPTHREAD_PROCESS_PRIVATE
,

105 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

106 
	mPTHREAD_PROCESS_SHARED


107 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

110 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


113 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

114 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

115 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

116 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_WRITER_NP


120 
	#PTHREAD_ONCE_INIT
 0

	)

124 #ifde‡
__USE_XOPEN2K


126 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

131 
	s_±hªad_˛ónup_buf„r


133 (*
	m__routöe
) (*);

134 *
	m__¨g
;

135 
	m__ˇn˚…y≥
;

136 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

143 
	mPTHREAD_CANCEL_ENABLE
,

144 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

145 
	mPTHREAD_CANCEL_DISABLE


146 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

150 
	mPTHREAD_CANCEL_DEFERRED
,

151 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

152 
	mPTHREAD_CANCEL_ASYNCHRONOUS


153 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

155 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

163 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__thªadp
,

164 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

165 *(*
__°¨t_routöe
) (*),

166 *
__ª°ri˘
 
__¨g
Ë
__THROW
;

169 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
;

172 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

175 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

180 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

186 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

194 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

197 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

200 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

201 
__dëach°©e
Ë
__THROW
;

204 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

205 *
__dëach°©e
Ë
__THROW
;

208 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

209 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


210 
__∑øm
Ë
__THROW
;

213 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


214 
__©å
,

215 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

216 
__THROW
;

219 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

220 
__THROW
;

223 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


224 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

225 
__THROW
;

228 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

229 
__öhîô
Ë
__THROW
;

232 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


233 
__©å
, *
__ª°ri˘
 
__öhîô
)

234 
__THROW
;

237 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

238 
__THROW
;

241 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

242 *
__ª°ri˘
 
__sc›e
Ë
__THROW
;

244 #ifde‡
__USE_UNIX98


246 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

247 
size_t
 
__gu¨dsize
Ë
__THROW
;

250 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


251 
__©å
, 
size_t
 *
__ª°ri˘
 
__gu¨dsize
)

252 
__THROW
;

259 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

260 *
__°ackaddr
Ë
__THROW
;

263 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


264 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

265 
__THROW
;

267 #ifde‡
__USE_XOPEN2K


271 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

272 
size_t
 
__°acksize
Ë
__THROW
;

275 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

276 **
__ª°ri˘
 
__°ackaddr
,

277 
size_t
 *
__ª°ri˘
 
__°acksize
Ë
__THROW
;

283 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

284 
size_t
 
__°acksize
Ë
__THROW
;

287 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


288 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

289 
__THROW
;

291 #ifde‡
__USE_GNU


295 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
Ë
__THROW
;

302 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

303 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

304 
__THROW
;

307 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

308 *
__ª°ri˘
 
__pﬁicy
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
;

312 #ifde‡
__USE_UNIX98


314 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

317 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

320 #ifde‡
__USE_GNU


325 
	$±hªad_yõld
 (Ë
__THROW
;

332 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

333 
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


334 
__muãx_©å
Ë
__THROW
;

337 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

340 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

343 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

345 #ifde‡
__USE_XOPEN2K


347 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

348 
__c⁄°
 
time•ec
 *
__ª°ri˘


349 
__ab°ime
Ë
__THROW
;

353 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

360 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

363 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

366 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

367 
__ª°ri˘
 
__©å
,

368 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

371 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

372 
__psh¨ed
Ë
__THROW
;

374 #ifde‡
__USE_UNIX98


378 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

379 
__THROW
;

382 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


383 
__©å
, *
__ª°ri˘
 
__köd
Ë
__THROW
;

391 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

392 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


393 
__c⁄d_©å
Ë
__THROW
;

396 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

399 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

402 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

406 
	`±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

407 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
);

413 
	`±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

414 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

415 
__c⁄°
 
time•ec
 *
__ª°ri˘


416 
__ab°ime
);

421 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

424 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

427 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

428 
__ª°ri˘
 
__©å
,

429 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

432 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

433 
__psh¨ed
Ë
__THROW
;

436 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


441 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

442 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


443 
__©å
Ë
__THROW
;

446 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

449 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

452 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

454 #ifde‡
__USE_XOPEN2K


456 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

457 
__c⁄°
 
time•ec
 *
__ª°ri˘


458 
__ab°ime
Ë
__THROW
;

462 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

465 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

467 #ifde‡
__USE_XOPEN2K


469 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

470 
__c⁄°
 
time•ec
 *
__ª°ri˘


471 
__ab°ime
Ë
__THROW
;

475 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

481 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

484 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

487 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

488 
__ª°ri˘
 
__©å
,

489 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

492 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

493 
__psh¨ed
Ë
__THROW
;

496 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
,

497 *
__¥ef
Ë
__THROW
;

500 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

501 
__¥ef
Ë
__THROW
;

504 #ifde‡
__USE_XOPEN2K


510 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

511 
__THROW
;

514 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

517 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

520 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

523 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

528 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

529 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


530 
__©å
, 
__cou¡
Ë
__THROW
;

532 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

534 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

536 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

538 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

539 
__ª°ri˘
 
__©å
,

540 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

542 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

543 
__psh¨ed
Ë
__THROW
;

545 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

557 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

558 (*
__de°r_fun˘i⁄
Ë(*)Ë
__THROW
;

561 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

564 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

565 
__c⁄°
 *
__poöãr
Ë
__THROW
;

568 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

580 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

581 (*
__öô_routöe
) ());

588 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

592 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

595 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__ˇn˚…hªad
);

600 
	`±hªad_ã°ˇn˚l
 ();

610 
	#±hªad_˛ónup_push
(
routöe
,
¨g
) \

611 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

612 
	`_±hªad_˛ónup_push
 (&
_buf„r
, (
routöe
), (
¨g
));

	)

614 
	`_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

615 (*
__routöe
) (*),

616 *
__¨g
Ë
__THROW
;

621 
	#±hªad_˛ónup_p›
(
execuã
) \

622 
	`_±hªad_˛ónup_p›
 (&
_buf„r
, (
execuã
)); 
	}

	)
}

624 
	$_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

625 
__execuã
Ë
__THROW
;

630 #ifde‡
__USE_GNU


631 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
,
¨g
) \

632 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

633 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
routöe
), (
¨g
));

	)

635 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

636 (*
__routöe
) (*),

637 *
__¨g
Ë
__THROW
;

643 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

644 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
execuã
)); 
	}

	)
}

646 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

647 
__execuã
Ë
__THROW
;

651 #ifde‡
__USE_XOPEN2K


653 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

654 
__˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

659 
	~<bôs/sigthªad.h
>

675 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

676 (*
__∑ª¡
) (),

677 (*
__chûd
Ë()Ë
__THROW
;

682 
	$±hªad_kûl_Ÿhî_thªads_≈
 (Ë
__THROW
;

684 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë¯## 
U


	)

301 
	#UINT16_C
(
c
Ë¯## 
U


	)

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
__BEGIN_NAMESPACE_STD


46 
_IO_FILE
 
	tFILE
;

47 
	g__END_NAMESPACE_STD


48 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

49 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

50 || 
deföed
 
__USE_POSIX2


51 
	$__USING_NAMESPACE_STD
(
FILE
)

54 
	#__FILE_deföed
 1

	)

56 #unde‡
__√ed_FILE


59 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


62 
_IO_FILE
 
	t__FILE
;

64 
	#____FILE_deföed
 1

	)

66 #unde‡
__√ed___FILE


69 #ifdef 
_STDIO_H


70 
	#_STDIO_USES_IOSTREAM


	)

72 
	~<libio.h
>

74 #ifde‡
__USE_XOPEN


75 #ifde‡
__GNUC__


76 #i‚de‡
_VA_LIST_DEFINED


77 
_G_va_li°
 
	tva_li°
;

78 
	#_VA_LIST_DEFINED


	)

81 
	~<°d¨g.h
>

86 
__BEGIN_NAMESPACE_STD


87 #i‚de‡
__USE_FILE_OFFSET64


88 
_G_Âos_t
 
	tÂos_t
;

90 
_G_Âos64_t
 
	tÂos_t
;

92 
__END_NAMESPACE_STD


93 #ifde‡
__USE_LARGEFILE64


94 
_G_Âos64_t
 
	tÂos64_t
;

98 
	#_IOFBF
 0

	)

99 
	#_IOLBF
 1

	)

100 
	#_IONBF
 2

	)

104 #i‚de‡
BUFSIZ


105 
	#BUFSIZ
 
_IO_BUFSIZ


	)

111 #i‚de‡
EOF


112 
	#EOF
 (-1)

	)

118 
	#SEEK_SET
 0

	)

119 
	#SEEK_CUR
 1

	)

120 
	#SEEK_END
 2

	)

123 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


125 
	#P_tmpdú
 "/tmp"

	)

138 
	~<bôs/°dio_lim.h
>

142 
_IO_FILE
 *
°dö
;

143 
_IO_FILE
 *
°dout
;

144 
_IO_FILE
 *
°dîr
;

146 
	#°dö
 
°dö


	)

147 
	#°dout
 
°dout


	)

148 
	#°dîr
 
°dîr


	)

150 
__BEGIN_NAMESPACE_STD


152 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

154 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

155 
__END_NAMESPACE_STD


158 
__BEGIN_NAMESPACE_STD


163 #i‚de‡
__USE_FILE_OFFSET64


164 
FILE
 *
	`tmpfûe
 ();

166 #ifde‡
__REDIRECT


167 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
);

169 
	#tmpfûe
 
tmpfûe64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
FILE
 *
	`tmpfûe64
 ();

178 *
	$tm≤am
 (*
__s
Ë
__THROW
;

179 
__END_NAMESPACE_STD


181 #ifde‡
__USE_MISC


184 *
	$tm≤am_r
 (*
__s
Ë
__THROW
;

188 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


196 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

197 
__THROW
 
__©åibuã_mÆloc__
;

201 
__BEGIN_NAMESPACE_STD


206 
	`f˛o£
 (
FILE
 *
__°ªam
);

211 
	`fÊush
 (
FILE
 *
__°ªam
);

212 
__END_NAMESPACE_STD


214 #ifde‡
__USE_MISC


221 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

224 #ifde‡
__USE_GNU


231 
	`f˛o£Æl
 ();

235 
__BEGIN_NAMESPACE_STD


236 #i‚de‡
__USE_FILE_OFFSET64


241 
FILE
 *
	`f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

242 
__c⁄°
 *
__ª°ri˘
 
__modes
);

247 
FILE
 *
	`‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

248 
__c⁄°
 *
__ª°ri˘
 
__modes
,

249 
FILE
 *
__ª°ri˘
 
__°ªam
);

251 #ifde‡
__REDIRECT


252 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

253 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
);

254 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

255 
__c⁄°
 *
__ª°ri˘
 
__modes
,

256 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
);

258 
	#f›í
 
f›í64


	)

259 
	#‰e›í
 
‰e›í64


	)

262 
__END_NAMESPACE_STD


263 #ifde‡
__USE_LARGEFILE64


264 
FILE
 *
	`f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

265 
__c⁄°
 *
__ª°ri˘
 
__modes
);

266 
FILE
 *
	`‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

267 
__c⁄°
 *
__ª°ri˘
 
__modes
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
);

271 #ifdef 
__USE_POSIX


273 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
;

276 #ifdef 
__USE_GNU


279 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
;

284 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
Ë
__THROW
;

289 
FILE
 *
	$›í_mem°ªam
 (**
__ª°ri˘
 
__buÊoc
,

290 
size_t
 *
__ª°ri˘
 
__sizñoc
Ë
__THROW
;

294 
__BEGIN_NAMESPACE_STD


297 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

301 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

302 
__modes
, 
size_t
 
__n
Ë
__THROW
;

303 
__END_NAMESPACE_STD


305 #ifdef 
__USE_BSD


308 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
size_t
 
__size
Ë
__THROW
;

312 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

316 
__BEGIN_NAMESPACE_STD


321 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

322 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

327 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
	$•rötf
 (*
__ª°ri˘
 
__s
,

330 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

336 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

337 
_G_va_li°
 
__¨g
);

342 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

344 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

345 
_G_va_li°
 
__¨g
Ë
__THROW
;

346 
__END_NAMESPACE_STD


348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


349 
__BEGIN_NAMESPACE_C99


351 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

352 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

353 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

355 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

356 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

357 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

358 
__END_NAMESPACE_C99


361 #ifde‡
__USE_GNU


364 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

365 
_G_va_li°
 
__¨g
)

366 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

367 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

368 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

370 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

371 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

372 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

380 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

381 
_G_va_li°
 
__¨g
)

382 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

383 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

388 
__BEGIN_NAMESPACE_STD


393 
	`fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

394 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

399 
	`sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

401 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

402 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

403 
__END_NAMESPACE_STD


405 #ifdef 
__USE_ISOC99


406 
__BEGIN_NAMESPACE_C99


411 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

412 
_G_va_li°
 
__¨g
)

413 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

419 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 1, 0)));

423 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

424 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

425 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

426 
__END_NAMESPACE_C99


430 
__BEGIN_NAMESPACE_STD


435 
	`fgëc
 (
FILE
 *
__°ªam
);

436 
	`gëc
 (
FILE
 *
__°ªam
);

442 
	`gëch¨
 ();

443 
__END_NAMESPACE_STD


447 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

449 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


454 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

455 
	`gëch¨_u∆ocked
 ();

458 #ifde‡
__USE_MISC


465 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

469 
__BEGIN_NAMESPACE_STD


477 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

478 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

484 
	`putch¨
 (
__c
);

485 
__END_NAMESPACE_STD


489 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

491 #ifde‡
__USE_MISC


498 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

501 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


506 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

507 
	`putch¨_u∆ocked
 (
__c
);

511 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

512 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

514 
	`gëw
 (
FILE
 *
__°ªam
);

517 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

521 
__BEGIN_NAMESPACE_STD


526 *
	`fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
);

533 *
	`gës
 (*
__s
);

534 
__END_NAMESPACE_STD


536 #ifde‡
__USE_GNU


543 *
	`fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

544 
FILE
 *
__ª°ri˘
 
__°ªam
);

548 #ifdef 
__USE_GNU


559 
_IO_ssize_t
 
	`__gëdñim
 (**
__ª°ri˘
 
__löïå
,

560 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

561 
FILE
 *
__ª°ri˘
 
__°ªam
);

562 
_IO_ssize_t
 
	`gëdñim
 (**
__ª°ri˘
 
__löïå
,

563 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

564 
FILE
 *
__ª°ri˘
 
__°ªam
);

572 
_IO_ssize_t
 
	`gëlöe
 (**
__ª°ri˘
 
__löïå
,

573 
size_t
 *
__ª°ri˘
 
__n
,

574 
FILE
 *
__ª°ri˘
 
__°ªam
);

578 
__BEGIN_NAMESPACE_STD


583 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

589 
	`puts
 (
__c⁄°
 *
__s
);

596 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

603 
size_t
 
	`‰ód
 (*
__ª°ri˘
 
__±r
, size_à
__size
,

604 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

609 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

610 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

611 
__END_NAMESPACE_STD


613 #ifde‡
__USE_GNU


620 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

621 
FILE
 *
__ª°ri˘
 
__°ªam
);

624 #ifde‡
__USE_MISC


631 
size_t
 
	`‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, size_à
__size
,

632 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

633 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

634 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

638 
__BEGIN_NAMESPACE_STD


643 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

648 
	`·ñl
 (
FILE
 *
__°ªam
);

653 
	`ªwöd
 (
FILE
 *
__°ªam
);

654 
__END_NAMESPACE_STD


661 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


662 #i‚de‡
__USE_FILE_OFFSET64


667 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

672 
__off_t
 
	`·ñlo
 (
FILE
 *
__°ªam
);

674 #ifde‡
__REDIRECT


675 
	`__REDIRECT
 (
f£eko
,

676 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

677 
f£eko64
);

678 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

680 
	#f£eko
 
f£eko64


	)

681 
	#·ñlo
 
·ñlo64


	)

686 
__BEGIN_NAMESPACE_STD


687 #i‚de‡
__USE_FILE_OFFSET64


692 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

697 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

699 #ifde‡
__REDIRECT


700 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

701 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

702 
	`__REDIRECT
 (
f£ços
,

703 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

705 
	#fgëpos
 
fgëpos64


	)

706 
	#f£ços
 
f£ços64


	)

709 
__END_NAMESPACE_STD


711 #ifde‡
__USE_LARGEFILE64


712 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

713 
__off64_t
 
	`·ñlo64
 (
FILE
 *
__°ªam
);

714 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

715 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

718 
__BEGIN_NAMESPACE_STD


720 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

722 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
;

724 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
;

725 
__END_NAMESPACE_STD


727 #ifde‡
__USE_MISC


729 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

730 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

731 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

735 
__BEGIN_NAMESPACE_STD


740 
	`≥º‹
 (
__c⁄°
 *
__s
);

741 
__END_NAMESPACE_STD


747 
	~<bôs/sys_îæi°.h
>

750 #ifdef 
__USE_POSIX


752 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
;

755 #ifde‡
__USE_MISC


757 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

761 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

762 
deföed
 
__USE_MISC
)

767 
FILE
 *
	`p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
);

773 
	`p˛o£
 (
FILE
 *
__°ªam
);

777 #ifdef 
__USE_POSIX


779 *
	$˘îmid
 (*
__s
Ë
__THROW
;

783 #ifde‡
__USE_XOPEN


785 *
	`cu£rid
 (*
__s
);

789 #ifdef 
__USE_GNU


790 
ob°ack
;

793 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

794 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

795 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

796 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

797 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

798 
_G_va_li°
 
__¨gs
)

799 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

803 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


807 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

811 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

814 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

817 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


821 
	#__√ed_gë›t


	)

822 
	~<gë›t.h
>

827 #ifde‡
__USE_EXTERN_INLINES


828 
	~<bôs/°dio.h
>

830 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


831 
	~<bôs/°dio2.h
>

834 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_C99


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

277 
	$__°πod_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

278 **
__ª°ri˘
 
__íd±r
, 
__group
)

279 
__THROW
 
	`__n⁄nuŒ
 ((1));

280 
	$__°πof_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

281 **
__ª°ri˘
 
__íd±r
, 
__group
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$__°πﬁd_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

284 **
__ª°ri˘
 
__íd±r
,

285 
__group
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

286 #i‚de‡
__°πﬁ_öã∫Æ_deföed


287 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

288 **
__ª°ri˘
 
__íd±r
,

289 
__ba£
, 
__group
)

290 
__THROW
 
	`__n⁄nuŒ
 ((1));

291 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

293 #i‚de‡
__°πoul_öã∫Æ_deföed


294 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

295 **
__ª°ri˘
 
__íd±r
,

296 
__ba£
, 
__group
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	#__°πoul_öã∫Æ_deföed
 1

	)

300 #i‡
deföed
 
__GNUC__
 || deföed 
__USE_ISOC99


301 #i‚de‡
__°πﬁl_öã∫Æ_deföed


302 
__exãnsi⁄__


303 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
__ba£
, 
__group
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

309 #i‚de‡
__°πouŒ_öã∫Æ_deföed


310 
__exãnsi⁄__


311 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

312 
__ª°ri˘
 
__≈å
,

313 **
__ª°ri˘
 
__íd±r
,

314 
__ba£
, 
__group
)

315 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

320 #ifde‡
__USE_EXTERN_INLINES


323 
__BEGIN_NAMESPACE_STD


324 
__ölöe
 

325 
	`__NTH
 (
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

327  
	`__°πod_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

328 
	}
}

329 
__ölöe
 

330 
__NTH
 (
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

331 
__ba£
))

333  
	`__°πﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

334 
	}
}

335 
__ölöe
 

336 
__NTH
 (
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

337 
__ba£
))

339  
	`__°πoul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

340 
	}
}

341 
__END_NAMESPACE_STD


343 #ifde‡
__USE_ISOC99


344 
__BEGIN_NAMESPACE_C99


345 
__ölöe
 

346 
__NTH
 (
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

348  
	`__°πof_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

349 
	}
}

350 
__ölöe
 

351 
__NTH
 (
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

353  
	`__°πﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

354 
	}
}

355 
__END_NAMESPACE_C99


358 #ifde‡
__USE_BSD


359 
__exãnsi⁄__
 
__ölöe
 

360 
__NTH
 (
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

361 
__ba£
))

363  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

364 
	}
}

365 
__exãnsi⁄__
 
__ölöe
 

366 
__NTH
 (
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

367 
__ba£
))

369  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

370 
	}
}

373 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


374 
__BEGIN_NAMESPACE_C99


375 
__exãnsi⁄__
 
__ölöe
 

376 
__NTH
 (
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

377 
__ba£
))

379  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

380 
	}
}

381 
__exãnsi⁄__
 
__ölöe
 

382 
__NTH
 (
	$°πouŒ
 (
__c⁄°
 * 
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

383 
__ba£
))

385  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

386 
	}
}

387 
__END_NAMESPACE_C99


390 
__BEGIN_NAMESPACE_STD


391 
__ölöe
 

392 
__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

394  
	`°πod
 (
__≈å
, (**Ë
NULL
);

395 
	}
}

396 
__ölöe
 

397 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

399  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

400 
	}
}

401 
__ölöe
 

402 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

404  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

405 
	}
}

406 
__END_NAMESPACE_STD


408 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


409 
__BEGIN_NAMESPACE_C99


410 
__exãnsi⁄__
 
__ölöe
 

411 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

413  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

414 
	}
}

415 
__END_NAMESPACE_C99


420 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


424 *
	$l64a
 (
__n
Ë
__THROW
;

427 
	$a64l
 (
__c⁄°
 *
__s
)

428 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

432 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


433 
	~<sys/ty≥s.h
>

440 
	$øndom
 (Ë
__THROW
;

443 
	$§™dom
 (
__£ed
Ë
__THROW
;

449 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

450 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

454 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 #ifde‡
__USE_MISC


462 
	søndom_d©a


464 
öt32_t
 *
Âå
;

465 
öt32_t
 *
Ωå
;

466 
öt32_t
 *
°©e
;

467 
ønd_ty≥
;

468 
ønd_deg
;

469 
ønd_£p
;

470 
öt32_t
 *
íd_±r
;

473 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

474 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

476 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

477 
__THROW
 
	`__n⁄nuŒ
 ((2));

479 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

480 
size_t
 
__°©ñí
,

481 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

482 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

484 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

485 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

486 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

491 
__BEGIN_NAMESPACE_STD


493 
	$ønd
 (Ë
__THROW
;

495 
	$§™d
 (
__£ed
Ë
__THROW
;

496 
__END_NAMESPACE_STD


498 #ifde‡
__USE_POSIX


500 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

504 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


508 
	$dønd48
 (Ë
__THROW
;

509 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

512 
	$Ã™d48
 (Ë
__THROW
;

513 
	$ƒ™d48
 (
__xsubi
[3])

514 
__THROW
 
	`__n⁄nuŒ
 ((1));

517 
	$mønd48
 (Ë
__THROW
;

518 
	$jønd48
 (
__xsubi
[3])

519 
__THROW
 
	`__n⁄nuŒ
 ((1));

522 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

523 *
	$£ed48
 (
__£ed16v
[3])

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

525 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

527 #ifde‡
__USE_MISC


531 
	sdønd48_d©a


533 
__x
[3];

534 
__ﬁd_x
[3];

535 
__c
;

536 
__öô
;

537 
__a
;

541 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

542 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

543 
	$î™d48_r
 (
__xsubi
[3],

544 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

545 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

548 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

549 *
__ª°ri˘
 
__ªsu…
)

550 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 
	$ƒ™d48_r
 (
__xsubi
[3],

552 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

553 *
__ª°ri˘
 
__ªsu…
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

558 *
__ª°ri˘
 
__ªsu…
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

560 
	$jønd48_r
 (
__xsubi
[3],

561 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

562 *
__ª°ri˘
 
__ªsu…
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

566 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

567 
__THROW
 
	`__n⁄nuŒ
 ((2));

569 
	$£ed48_r
 (
__£ed16v
[3],

570 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 
	$lc⁄g48_r
 (
__∑øm
[7],

573 
dønd48_d©a
 *
__buf„r
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


581 
	#__mÆloc_™d_ˇŒoc_deföed


	)

582 
__BEGIN_NAMESPACE_STD


584 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
;

586 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

587 
__THROW
 
__©åibuã_mÆloc__
;

588 
__END_NAMESPACE_STD


591 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


592 
__BEGIN_NAMESPACE_STD


595 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
;

597 
	$‰ì
 (*
__±r
Ë
__THROW
;

598 
__END_NAMESPACE_STD


600 #ifdef 
__USE_MISC


602 
	$c‰ì
 (*
__±r
Ë
__THROW
;

605 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


606 
	~<Æloˇ.h
>

609 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


611 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
;

614 #ifde‡
__USE_XOPEN2K


616 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

617 
__THROW
 
	`__n⁄nuŒ
 ((1));

620 
__BEGIN_NAMESPACE_STD


622 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

627 
__END_NAMESPACE_STD


629 #ifdef 
__USE_MISC


632 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

633 
__THROW
 
	`__n⁄nuŒ
 ((1));

636 
__BEGIN_NAMESPACE_STD


640 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

641 
__END_NAMESPACE_STD


643 #ifde‡
__USE_ISOC99


644 
__BEGIN_NAMESPACE_C99


647 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

648 
__END_NAMESPACE_C99


652 
__BEGIN_NAMESPACE_STD


654 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

655 
__END_NAMESPACE_STD


659 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

661 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


665 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

668 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


671 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

672 
__THROW
 
	`__n⁄nuŒ
 ((2));

675 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

678 #ifdef 
__USE_MISC


682 
	$˛óªnv
 (Ë
__THROW
;

686 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


691 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

701 #i‚de‡
__USE_FILE_OFFSET64


702 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1));

704 #ifde‡
__REDIRECT


705 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
Ë
	`__n⁄nuŒ
 ((1));

707 
	#mk°emp
 
mk°emp64


	)

710 #ifde‡
__USE_LARGEFILE64


711 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1));

715 #ifde‡
__USE_BSD


721 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

725 
__BEGIN_NAMESPACE_STD


730 
	`sy°em
 (
__c⁄°
 *
__comm™d
);

731 
__END_NAMESPACE_STD


734 #ifdef 
__USE_GNU


738 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


749 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

750 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
;

755 #i‚de‡
__COMPAR_FN_T


756 
	#__COMPAR_FN_T


	)

757 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

759 #ifdef 
__USE_GNU


760 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

764 
__BEGIN_NAMESPACE_STD


767 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

768 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

769 
	`__n⁄nuŒ
 ((1, 2, 5));

773 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

774 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

778 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

779 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

780 
__END_NAMESPACE_STD


782 #ifde‡
__USE_ISOC99


783 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

784 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

788 
__BEGIN_NAMESPACE_STD


792 
div_t
 
	$div
 (
__numî
, 
__díom
)

793 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

794 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

796 
__END_NAMESPACE_STD


798 #ifde‡
__USE_ISOC99


799 
__BEGIN_NAMESPACE_C99


800 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

801 
__díom
)

802 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

803 
__END_NAMESPACE_C99


807 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


814 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

820 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

821 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

826 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3));

830 #ifde‡
__USE_MISC


832 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

835 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

836 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

838 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

839 
__THROW
 
	`__n⁄nuŒ
 ((3));

844 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

847 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

848 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

849 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

852 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

853 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

854 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

855 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

856 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

857 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

858 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

863 
__BEGIN_NAMESPACE_STD


866 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

870 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

873 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

877 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

878 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

880 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

881 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

882 
__THROW
;

883 
__END_NAMESPACE_STD


886 #ifde‡
__USE_SVID


891 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN_EXTENDED


902 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

903 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

904 **
__ª°ri˘
 
__vÆuï
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

909 #ifde‡
__USE_XOPEN


911 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

917 #ifde‡
__USE_XOPEN2K


919 
	`posix_›í±
 (
__oÊag
);

922 #ifde‡
__USE_XOPEN


927 
	$gø¡±
 (
__fd
Ë
__THROW
;

931 
	$u∆ock±
 (
__fd
Ë
__THROW
;

936 *
	$±¢ame
 (
__fd
Ë
__THROW
;

939 #ifde‡
__USE_GNU


943 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

944 
__THROW
 
	`__n⁄nuŒ
 ((2));

947 
	`gë±
 ();

950 #ifde‡
__USE_BSD


954 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

955 
__THROW
 
	`__n⁄nuŒ
 ((1));

959 #unde‡
__√ed_mÆloc_™d_ˇŒoc


961 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

288 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_BSD


292 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

296 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

300 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

303 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

307 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

308 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

312 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

316 #ifdef 
__USE_GNU


317 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

318 #ifde‡
__GNUC__


319 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

330 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

333 #ifdef 
__USE_GNU


336 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

337 
__loˇÀ_t
 
__loc
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

340 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

341 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

345 #ifdef 
__USE_BSD


348 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

349 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

353 #ifdef 
__USE_GNU


355 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

356 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

359 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

362 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

364 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

370 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

373 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

380 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

382 #i‚de‡
ba£«me


387 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

393 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

394 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


414 
	~<bôs/°rög.h
>

417 
	~<bôs/°rög2.h
>

420 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


422 
	~<bôs/°rög3.h
>

426 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

118 
	stime•ec


120 
__time_t
 
tv_£c
;

121 
tv_n£c
;

125 #unde‡
__√ed_time•ec


128 #ifdef 
_TIME_H


129 
__BEGIN_NAMESPACE_STD


131 
	stm


133 
tm_£c
;

134 
tm_mö
;

135 
tm_hour
;

136 
tm_mday
;

137 
tm_m⁄
;

138 
tm_yór
;

139 
tm_wday
;

140 
tm_yday
;

141 
tm_isd°
;

143 #ifdef 
__USE_BSD


144 
tm_gmtoff
;

145 
__c⁄°
 *
tm_z⁄e
;

147 
__tm_gmtoff
;

148 
__c⁄°
 *
__tm_z⁄e
;

151 
__END_NAMESPACE_STD


152 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


153 
	$__USING_NAMESPACE_STD
(
tm
)

157 #ifde‡
__USE_POSIX199309


159 
	sôimî•ec


161 
time•ec
 
ô_öãrvÆ
;

162 
time•ec
 
ô_vÆue
;

166 
sigevít
;

170 #ifde‡
__USE_XOPEN2K


171 #i‚de‡
__pid_t_deföed


172 
__pid_t
 
	tpid_t
;

173 
	#__pid_t_deföed


	)

178 
__BEGIN_NAMESPACE_STD


181 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

184 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

187 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

188 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

191 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

197 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

198 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

199 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

200 
__END_NAMESPACE_STD


202 #ifde‡
__USE_XOPEN


205 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

207 
__THROW
;

210 #ifde‡
__USE_GNU


213 
	~<xloˇÀ.h
>

215 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

216 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

217 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

218 
__loˇÀ_t
 
__loc
Ë
__THROW
;

220 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

221 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

222 
__loˇÀ_t
 
__loc
Ë
__THROW
;

226 
__BEGIN_NAMESPACE_STD


229 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

233 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

234 
__END_NAMESPACE_STD


236 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


239 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

240 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

244 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

245 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
__BEGIN_NAMESPACE_STD


251 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

254 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

255 
__END_NAMESPACE_STD


257 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


262 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

263 *
__ª°ri˘
 
__buf
Ë
__THROW
;

266 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

272 *
__tz«me
[2];

273 
__daylight
;

274 
__timez⁄e
;

277 #ifdef 
__USE_POSIX


279 *
tz«me
[2];

283 
	$tz£t
 (Ë
__THROW
;

286 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


287 
daylight
;

288 
timez⁄e
;

291 #ifde‡
__USE_SVID


294 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

300 
	#__i¶óp
(
yór
) \

301 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

304 #ifde‡
__USE_MISC


309 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

312 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

315 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

319 #ifde‡
__USE_POSIX199309


324 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

325 
time•ec
 *
__ªmaöög
);

329 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

332 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

335 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

336 
__THROW
;

338 #ifde‡
__USE_XOPEN2K


343 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

344 
__c⁄°
 
time•ec
 *
__ªq
,

345 
time•ec
 *
__ªm
);

348 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

353 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

354 
sigevít
 *
__ª°ri˘
 
__evp
,

355 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

358 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

361 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

362 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

363 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

366 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

367 
__THROW
;

370 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

374 #ifde‡
__USE_XOPEN_EXTENDED


386 
gëd©e_îr
;

395 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

398 #ifde‡
__USE_GNU


409 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

410 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

413 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_UNIX98


60 
	#_XOPEN_VERSION
 500

	)

62 
	#_XOPEN_VERSION
 4

	)

66 
	#_XOPEN_XCU_VERSION
 4

	)

69 
	#_XOPEN_XPG2
 1

	)

70 
	#_XOPEN_XPG3
 1

	)

71 
	#_XOPEN_XPG4
 1

	)

74 
	#_XOPEN_UNIX
 1

	)

77 
	#_XOPEN_CRYPT
 1

	)

81 
	#_XOPEN_ENH_I18N
 1

	)

84 
	#_XOPEN_LEGACY
 1

	)

171 
	~<bôs/posix_›t.h
>

174 #ifde‡
__USE_UNIX98


175 
	~<bôs/ívú⁄míts.h
>

179 
	#STDIN_FILENO
 0

	)

180 
	#STDOUT_FILENO
 1

	)

181 
	#STDERR_FILENO
 2

	)

186 
	~<bôs/ty≥s.h
>

188 #i‚def 
__ssize_t_deföed


189 
__ssize_t
 
	tssize_t
;

190 
	#__ssize_t_deföed


	)

193 
	#__√ed_size_t


	)

194 
	#__√ed_NULL


	)

195 
	~<°ddef.h
>

197 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


200 #i‚de‡
__gid_t_deföed


201 
__gid_t
 
	tgid_t
;

202 
	#__gid_t_deföed


	)

205 #i‚de‡
__uid_t_deföed


206 
__uid_t
 
	tuid_t
;

207 
	#__uid_t_deföed


	)

210 #i‚de‡
__off_t_deföed


211 #i‚de‡
__USE_FILE_OFFSET64


212 
__off_t
 
	toff_t
;

214 
__off64_t
 
	toff_t
;

216 
	#__off_t_deföed


	)

218 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


219 
__off64_t
 
	toff64_t
;

220 
	#__off64_t_deföed


	)

223 #i‚de‡
__u£c⁄ds_t_deföed


224 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

225 
	#__u£c⁄ds_t_deföed


	)

228 #i‚de‡
__pid_t_deföed


229 
__pid_t
 
	tpid_t
;

230 
	#__pid_t_deföed


	)

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


235 #i‚de‡
__öçå_t_deföed


236 
__öçå_t
 
	töçå_t
;

237 
	#__öçå_t_deföed


	)

241 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


242 #i‚de‡
__sockÀn_t_deföed


243 
__sockÀn_t
 
	tsockÀn_t
;

244 
	#__sockÀn_t_deföed


	)

250 
	#R_OK
 4

	)

251 
	#W_OK
 2

	)

252 
	#X_OK
 1

	)

253 
	#F_OK
 0

	)

256 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

258 #ifde‡
__USE_GNU


261 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1));

267 #i‚def 
_STDIO_H


268 
	#SEEK_SET
 0

	)

269 
	#SEEK_CUR
 1

	)

270 
	#SEEK_END
 2

	)

273 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


275 
	#L_SET
 
SEEK_SET


	)

276 
	#L_INCR
 
SEEK_CUR


	)

277 
	#L_XTND
 
SEEK_END


	)

286 #i‚de‡
__USE_FILE_OFFSET64


287 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

289 #ifde‡
__REDIRECT_NTH


290 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

291 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

292 
l£ek64
);

294 
	#l£ek
 
l£ek64


	)

297 #ifde‡
__USE_LARGEFILE64


298 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

305 
	`˛o£
 (
__fd
);

312 
ssize_t
 
	`ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
);

318 
ssize_t
 
	`wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
);

320 #ifde‡
__USE_UNIX98


321 #i‚de‡
__USE_FILE_OFFSET64


328 
ssize_t
 
	`¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

329 
__off_t
 
__off£t
);

336 
ssize_t
 
	`pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

337 
__off_t
 
__off£t
);

339 #ifde‡
__REDIRECT


340 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

341 
__off64_t
 
__off£t
),

342 
¥ód64
);

343 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

344 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

345 
pwrôe64
);

347 
	#¥ód
 
¥ód64


	)

348 
	#pwrôe
 
pwrôe64


	)

352 #ifde‡
__USE_LARGEFILE64


356 
ssize_t
 
	`¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

357 
__off64_t
 
__off£t
);

360 
ssize_t
 
	`pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

361 
__off64_t
 
__off£t
);

369 
	$pùe
 (
__pùedes
[2]Ë
__THROW
;

378 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

390 
	`¶ìp
 (
__£c⁄ds
);

392 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


397 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

398 
__THROW
;

405 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

414 
	`∑u£
 ();

418 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

419 
__THROW
 
	`__n⁄nuŒ
 ((1));

421 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


423 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
;

428 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

429 
__THROW
 
	`__n⁄nuŒ
 ((1));

434 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

436 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


438 
	$fchdú
 (
__fd
Ë
__THROW
;

448 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
;

450 #ifdef 
__USE_GNU


454 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

457 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 *
	$gëwd
 (*
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

466 
	$dup
 (
__fd
Ë
__THROW
;

469 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

472 **
__ívú⁄
;

473 #ifde‡
__USE_GNU


474 **
ívú⁄
;

480 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

481 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

483 #ifde‡
__USE_GNU


486 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

487 
__THROW
;

492 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

493 
__THROW
 
	`__n⁄nuŒ
 ((1));

497 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

498 
__THROW
 
	`__n⁄nuŒ
 ((1));

502 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

503 
__THROW
 
	`__n⁄nuŒ
 ((1));

507 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

508 
__THROW
 
	`__n⁄nuŒ
 ((1));

513 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

514 
__THROW
 
	`__n⁄nuŒ
 ((1));

517 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


519 
	$ni˚
 (
__öc
Ë
__THROW
;

524 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

530 
	~<bôs/c⁄‚ame.h
>

533 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1));

537 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

540 
	$sysc⁄f
 (
__«me
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

542 #ifdef 
__USE_POSIX2


544 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

549 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

552 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

556 #i‚de‡
__FAVOR_BSD


557 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

559 #ifde‡
__REDIRECT_NTH


560 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

562 
	#gëpgΩ
 
__gëpgid


	)

567 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

568 #ifde‡
__USE_XOPEN_EXTENDED


569 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

576 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

578 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


589 #i‚de‡
__FAVOR_BSD


593 
	$£çgΩ
 (Ë
__THROW
;

598 #ifde‡
__REDIRECT_NTH


599 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

601 
	#£çgΩ
 
£çgid


	)

610 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

612 #ifde‡
__USE_XOPEN_EXTENDED


614 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

618 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

621 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

624 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

627 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

632 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
;

634 #ifdef 
__USE_GNU


636 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

643 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

645 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


648 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


653 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

660 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

662 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

668 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


670 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

673 #ifde‡
__USE_GNU


676 
	`gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
);

680 
	`gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
);

684 
	`£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
);

688 
	`£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
);

695 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

697 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


702 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

708 *
	$ây«me
 (
__fd
Ë
__THROW
;

712 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

713 
__THROW
 
	`__n⁄nuŒ
 ((2));

717 
	$ißây
 (
__fd
Ë
__THROW
;

719 #i‡
deföed
 
__USE_BSD
 \

720 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

723 
	$ây¶Ÿ
 (Ë
__THROW
;

728 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


733 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

734 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

739 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

740 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

744 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

747 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

751 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

754 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

761 *
	`gëlogö
 ();

762 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_UNIX98


769 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

772 #ifdef 
__USE_BSD


774 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

778 #ifdef 
__USE_POSIX2


782 
	#__√ed_gë›t


	)

783 
	~<gë›t.h
>

787 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


791 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

795 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

798 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1));

803 
	$£tho°id
 (
__id
Ë
__THROW
;

809 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

811 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1));

818 
	$vh™gup
 (Ë
__THROW
;

821 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

829 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

830 
size_t
 
__off£t
, 
__sˇÀ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

837 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

841 *
	$gëu£rshñl
 (Ë
__THROW
;

842 
	$ídu£rshñl
 (Ë
__THROW
;

843 
	$£tu£rshñl
 (Ë
__THROW
;

849 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
;

853 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

856 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

860 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

864 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


869 
	`fsync
 (
__fd
);

873 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


876 
	`gëho°id
 ();

879 
	$sync
 (Ë
__THROW
;

884 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

889 
	$gëdèbÀsize
 (Ë
__THROW
;

893 #i‚de‡
__USE_FILE_OFFSET64


894 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

895 
__THROW
 
	`__n⁄nuŒ
 ((1));

897 #ifde‡
__REDIRECT_NTH


898 
	`__REDIRECT_NTH
 (
åunˇã
,

899 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

900 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1));

902 
	#åunˇã
 
åunˇã64


	)

905 #ifde‡
__USE_LARGEFILE64


906 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

907 
__THROW
 
	`__n⁄nuŒ
 ((1));

912 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


915 #i‚de‡
__USE_FILE_OFFSET64


916 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
;

918 #ifde‡
__REDIRECT_NTH


919 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

920 
·runˇã64
);

922 
	#·runˇã
 
·runˇã64


	)

925 #ifde‡
__USE_LARGEFILE64


926 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
;

932 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


936 
	$brk
 (*
__addr
Ë
__THROW
;

942 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

946 #ifde‡
__USE_MISC


957 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

962 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


974 
	#F_ULOCK
 0

	)

975 
	#F_LOCK
 1

	)

976 
	#F_TLOCK
 2

	)

977 
	#F_TEST
 3

	)

979 #i‚de‡
__USE_FILE_OFFSET64


980 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

982 #ifde‡
__REDIRECT


983 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

984 
lockf64
);

986 
	#lockf
 
lockf64


	)

989 #ifde‡
__USE_LARGEFILE64


990 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

995 #ifde‡
__USE_GNU


1000 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1001 (
__exãnsi⁄__
 \

1002 ({ 
__ªsu…
; \

1003 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1004 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1005 
__ªsu…
; 
	}
}))

	)

1008 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1011 
	$fd©async
 (
__fûdes
Ë
__THROW
;

1017 #ifdef 
__USE_XOPEN


1019 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1024 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1031 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1032 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1038 #ifde‡
__USE_XOPEN


1040 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1043 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS


502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

508 
	m_CS_PATH
,

509 
	#_CS_PATH
 
_CS_PATH


	)

511 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

512 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

514 
	m_CS_GNU_LIBC_VERSION
,

515 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

516 
	m_CS_GNU_LIBPTHREAD_VERSION
,

517 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

519 
	m_CS_LFS_CFLAGS
 = 1000,

520 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

521 
	m_CS_LFS_LDFLAGS
,

522 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

523 
	m_CS_LFS_LIBS
,

524 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

525 
	m_CS_LFS_LINTFLAGS
,

526 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

527 
	m_CS_LFS64_CFLAGS
,

528 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

529 
	m_CS_LFS64_LDFLAGS
,

530 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

531 
	m_CS_LFS64_LIBS
,

532 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

533 
	m_CS_LFS64_LINTFLAGS
,

534 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

536 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

537 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

538 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

539 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

540 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

541 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

542 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

543 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

544 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

545 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

546 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

547 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

548 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

549 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

550 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

551 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

552 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

553 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

554 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

555 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

556 
	m_CS_XBS5_LP64_OFF64_LIBS
,

557 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

558 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

559 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

560 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

561 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

562 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

563 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

564 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

565 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

566 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

567 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

569 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

570 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

571 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

572 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

573 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

574 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

575 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

576 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

577 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

578 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

579 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

580 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

581 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

582 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

583 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

584 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

585 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

586 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

587 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

588 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

589 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

590 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

591 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

592 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

593 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

594 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

595 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

596 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

597 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

598 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

599 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


600 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


41 
	#_POSIX_V6_ILP32_OFF32
 1

	)

42 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

43 
	#_XBS5_ILP32_OFF32
 1

	)

44 
	#_XBS5_ILP32_OFFBIG
 1

	)

57 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

58 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

59 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

60 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

61 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

62 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

32 #i‚de‡
ECANCELED


33 
	#ECANCELED
 125

	)

36 #i‚de‡
__ASSEMBLER__


38 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

40 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


42 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

47 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


51 
	#EDOM
 33

	)

52 
	#EILSEQ
 84

	)

53 
	#ERANGE
 34

	)

	@/usr/include/bits/initspin.h

23 
	#__LT_SPINLOCK_INIT
 0

	)

26 
	#__LOCK_INITIALIZER
 ((
_±hªad_Á°lock
){ 0, 
__LT_SPINLOCK_INIT
 })

	)

27 
	#__LOCK_ALT_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

28 
	#__ALT_LOCK_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

29 
	#__ATOMIC_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200112L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

86 
	#_POSIX_SEMAPHORES
 200112L

	)

89 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

92 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

93 
	#_POSIX_ASYNC_IO
 1

	)

95 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

97 
	#_POSIX_PRIORITIZED_IO
 200112L

	)

100 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

103 
	#_LFS_LARGEFILE
 1

	)

104 
	#_LFS64_LARGEFILE
 1

	)

105 
	#_LFS64_STDIO
 1

	)

108 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

111 
	#_POSIX_CPUTIME
 0

	)

114 
	#_POSIX_THREAD_CPUTIME
 0

	)

117 
	#_POSIX_REGEXP
 1

	)

120 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

123 
	#_POSIX_SHELL
 1

	)

126 
	#_POSIX_TIMEOUTS
 200112L

	)

129 
	#_POSIX_SPIN_LOCKS
 200112L

	)

132 
	#_POSIX_SPAWN
 200112L

	)

135 
	#_POSIX_TIMERS
 200112L

	)

138 
	#_POSIX_BARRIERS
 200112L

	)

141 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

144 
	#_POSIX_THREAD_PROCESS_SHARED
 -1

	)

147 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

150 
	#_POSIX_CLOCK_SELECTION
 -1

	)

153 
	#_POSIX_ADVISORY_INFO
 200112L

	)

156 
	#_POSIX_IPV6
 200112L

	)

159 
	#_POSIX_RAW_SOCKETS
 200112L

	)

162 
	#_POSIX2_CHAR_TERM
 200112L

	)

165 
	#_POSIX_SPORADIC_SERVER
 -1

	)

166 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

169 
	#_POSIX_TRACE
 -1

	)

170 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

171 
	#_POSIX_TRACE_INHERIT
 -1

	)

172 
	#_POSIX_TRACE_LOG
 -1

	)

175 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

178 
	#_POSIX_THREAD_PRIO_INHERIT
 -1

	)

179 
	#_POSIX_THREAD_PRIO_PROTECT
 -1

	)

	@/usr/include/bits/pthreadtypes.h

15 #i‡!
deföed
 
_BITS_TYPES_H
 && !deföed 
_PTHREAD_H


19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__√ed_sched∑øm


	)

23 
	~<bôs/sched.h
>

25 
	t__©omic_lock_t
;

28 
	s_±hªad_Á°lock


30 
	m__°©us
;

31 
__©omic_lock_t
 
	m__•ölock
;

35 #i‚de‡
_PTHREAD_DESCR_DEFINED


37 
_±hªad_des¸_°ru˘
 *
	t_±hªad_des¸
;

38 
	#_PTHREAD_DESCR_DEFINED


	)

43 
	s__±hªad_©å_s


45 
	m__dëach°©e
;

46 
	m__schedpﬁicy
;

47 
__sched_∑øm
 
	m__sched∑øm
;

48 
	m__öhîôsched
;

49 
	m__sc›e
;

50 
size_t
 
	m__gu¨dsize
;

51 
	m__°ackaddr_£t
;

52 *
	m__°ackaddr
;

53 
size_t
 
	m__°acksize
;

54 } 
	t±hªad_©å_t
;

59 #ifde‡
__GLIBC_HAVE_LONG_LONG


60 
__exãnsi⁄__
 
	t__±hªad_c⁄d_Æign_t
;

62 
	t__±hªad_c⁄d_Æign_t
;

67 
_±hªad_Á°lock
 
	m__c_lock
;

68 
_±hªad_des¸
 
	m__c_waôög
;

69 
	m__∑ddög
[48 -  (
_±hªad_Á°lock
)

70 -  (
_±hªad_des¸
Ë-  (
__±hªad_c⁄d_Æign_t
)];

71 
__±hªad_c⁄d_Æign_t
 
	m__Æign
;

72 } 
	t±hªad_c⁄d_t
;

78 
	m__dummy
;

79 } 
	t±hªad_c⁄d©å_t
;

82 
	t±hªad_key_t
;

90 
	m__m_ª£rved
;

91 
	m__m_cou¡
;

92 
_±hªad_des¸
 
	m__m_ow√r
;

93 
	m__m_köd
;

94 
_±hªad_Á°lock
 
	m__m_lock
;

95 } 
	t±hªad_muãx_t
;

101 
	m__muãxköd
;

102 } 
	t±hªad_muãx©å_t
;

106 
	t±hªad_⁄˚_t
;

109 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


111 
	s_±hªad_rwlock_t


113 
_±hªad_Á°lock
 
	m__rw_lock
;

114 
	m__rw_ªadîs
;

115 
_±hªad_des¸
 
	m__rw_wrôî
;

116 
_±hªad_des¸
 
	m__rw_ªad_waôög
;

117 
_±hªad_des¸
 
	m__rw_wrôe_waôög
;

118 
	m__rw_köd
;

119 
	m__rw_psh¨ed
;

120 } 
	t±hªad_rwlock_t
;

126 
	m__lockköd
;

127 
	m__psh¨ed
;

128 } 
	t±hªad_rwlock©å_t
;

131 #ifde‡
__USE_XOPEN2K


133 vﬁ©ûê
	t±hªad_•ölock_t
;

137 
_±hªad_Á°lock
 
	m__ba_lock
;

138 
	m__ba_ªquúed
;

139 
	m__ba_¥e£¡
;

140 
_±hªad_des¸
 
	m__ba_waôög
;

141 } 
	t±hªad_b¨rõr_t
;

145 
	m__psh¨ed
;

146 } 
	t±hªad_b¨rõøâr_t
;

152 
	t±hªad_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #ifde‡
__˝lu•lus


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


33 
__STDIO_INLINE
 

34 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

36  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

37 
	}
}

40 
__STDIO_INLINE
 

41 
	$gëch¨
 ()

43  
	`_IO_gëc
 (
°dö
);

44 
	}
}

47 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


49 
__STDIO_INLINE
 

50 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

52  
	`_IO_gëc_u∆ocked
 (
__Â
);

53 
	}
}

56 
__STDIO_INLINE
 

57 
	$gëch¨_u∆ocked
 ()

59  
	`_IO_gëc_u∆ocked
 (
°dö
);

60 
	}
}

65 
__STDIO_INLINE
 

66 
	$putch¨
 (
__c
)

68  
	`_IO_putc
 (
__c
, 
°dout
);

69 
	}
}

72 #ifde‡
__USE_MISC


74 
__STDIO_INLINE
 

75 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

77  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

78 
	}
}

82 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


84 
__STDIO_INLINE
 

85 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

87  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

88 
	}
}

91 
__STDIO_INLINE
 

92 
	$putch¨_u∆ocked
 (
__c
)

94  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

95 
	}
}

99 #ifdef 
__USE_GNU


101 
__STDIO_INLINE
 
_IO_ssize_t


102 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

104  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

105 
	}
}

109 #ifde‡
__USE_MISC


111 
__STDIO_INLINE
 

112 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

114  
	`_IO_„of_u∆ocked
 (
__°ªam
);

115 
	}
}

118 
__STDIO_INLINE
 

119 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

121  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

122 
	}
}

128 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__


130 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

131 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

132 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

133 && (
size_t
Ë(
size
) != 0) \

134 ? ({ *
__±r
 = (*Ë(
±r
); \

135 
FILE
 *
__°ªam
 = (
°ªam
); \

136 
size_t
 
__˙t
; \

137 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

138 
__˙t
 > 0; --__cnt) \

140 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

141 i‡(
__c
 =
EOF
) \

143 *
__±r
++ = 
__c
; \

145 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

146 / (
size_t
Ë(
size
); }) \

147 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

148 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

150 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

151 (Ë(
n
), (
size_t
) 0) \

152 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

154 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

155 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

156 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

157 && (
size_t
Ë(
size
) != 0) \

158 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

159 
FILE
 *
__°ªam
 = (
°ªam
); \

160 
size_t
 
__˙t
; \

161 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

162 
__˙t
 > 0; --__cnt) \

163 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

165 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

166 / (
size_t
Ë(
size
); }) \

167 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

168 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

170 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

171 (Ë(
n
), (
size_t
) 0) \

172 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

176 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 
	#•rötf
(
°r
, ...) \

31 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

32 
__VA_ARGS__
)

	)

33 
	#v•rötf
(
°r
, 
fmt
, 
≠
) \

34 
	`__buûtö___v•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (°r), 
fmt
, 
≠
)

	)

36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


38 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

39 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

40 ...Ë
__THROW
;

41 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

42 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

43 
_G_va_li°
 
__≠
Ë
__THROW
;

45 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

46 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

47 
__VA_ARGS__
)

	)

48 
	#v¢¥ötf
(
°r
, 
Àn
, 
fmt
, 
≠
) \

49 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

50 
fmt
, 
≠
)

	)

54 #i‡
__USE_FORTIFY_LEVEL
 > 1

56 
	`__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

57 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

58 
	`__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

59 
	`__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

60 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

61 
	`__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

62 
_G_va_li°
 
__≠
);

64 
	#¥ötf
(...) \

65 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

66 
	#Ârötf
(
°ªam
, ...) \

67 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

68 
	#v¥ötf
(
f‹m©
, 
≠
) \

69 
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

70 
	#vÂrötf
(
°ªam
, 
f‹m©
, 
≠
) \

71 
	`__vÂrötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

75 *
	`__gës_chk
 (*
__°r
, 
size_t
);

76 
	#gës
(
__°r
) \

77 ((
	`__bos
 (
__°r
Ë=(
size_t
) -1) \

78 ? (
gës
Ë(
__°r
Ë: 
	`__gës_chk
 (__°r, 
	`__bos
 (__°r)))

	)

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/string.h

21 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

31 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

32 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


34 #i‚de‡
__STRING_INLINE


35 #ifde‡
__˝lu•lus


36 
	#__STRING_INLINE
 
ölöe


	)

38 
	#__STRING_INLINE
 
__ölöe


	)

43 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

44 ((((
__c⁄°
 *Ë(
§c
))[
idx
 + 1] << 8) \

45 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

46 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

47 (((((
__c⁄°
 *Ë(
§c
))[
idx
 + 3] << 8 \

48 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 2]) << 8 \

49 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 1]) << 8 \

50 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

54 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

55 
	#mem˝y
(
de°
, 
§c
, 
n
) \

56 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

57 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

58 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

59 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

60 ((
n
) == 0 \

61 ? (
de°
) \

62 : (((
n
) % 4 == 0) \

63 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

64 : (((
n
) % 2 == 0) \

65 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

66 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

68 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

69 
size_t
 
__n
);

71 
__STRING_INLINE
 *

72 
	$__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

74 
__d0
, 
__d1
;

75 *
__tmp
 = 
__de°
;

76 
__asm__
 
__vﬁ©ûe__


84 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

85 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

87  
__de°
;

88 
	}
}

90 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

91 
size_t
 
__n
);

93 
__STRING_INLINE
 *

94 
	$__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

96 
__d0
, 
__d1
;

97 *
__tmp
 = 
__de°
;

98 
__asm__
 
__vﬁ©ûe__


111 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

112 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

114  
__de°
;

115 
	}
}

117 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
,

118 
size_t
 
__n
);

120 
__STRING_INLINE
 *

121 
	$__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

123 
__d0
, 
__d1
, 
__d2
;

124 *
__tmp
 = 
__de°
;

125 
__asm__
 
__vﬁ©ûe__


136 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

137 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

138 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

139 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

141  
__de°
;

142 
	}
}

144 
	#_HAVE_STRING_ARCH_memmove
 1

	)

145 #i‚de‡
_FORCE_INLINES


148 
__STRING_INLINE
 *

149 
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

151 
__d0
, 
__d1
, 
__d2
;

152 *
__tmp
 = 
__de°
;

153 i‡(
__de°
 < 
__§c
)

154 
__asm__
 
__vﬁ©ûe__


157 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

158 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

159 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

160 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

162 
__asm__
 
__vﬁ©ûe__


166 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

167 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

168 : "0" (
__n
), "1" (__¿- 1 + (
__c⁄°
 *Ë
__§c
),

169 "2" (
__n
 - 1 + (*Ë
__tmp
),

170 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

171  
__de°
;

172 
	}
}

176 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

177 #i‚de‡
_FORCE_INLINES


178 #i‚de‡
__PIC__


180 
__STRING_INLINE
 

181 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

183 
__d0
, 
__d1
, 
__d2
;

184 
__ªs
;

185 
__asm__
 
__vﬁ©ûe__


193 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

194 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

195 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

196 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

198  
__ªs
;

199 
	}
}

204 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

205 
	#_USE_STRING_ARCH_mem£t
 1

	)

206 
	#mem£t
(
s
, 
c
, 
n
) \

207 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

208 ? ((
n
) == 1 \

209 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

210 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

211 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

212 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

213 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

214 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

215 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

216 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

217 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

219 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

220 *((*Ë
__s
Ë(Ë(
c
); \

221 
__s
; })

	)

223 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

224 ({ *
__s
 = (
s
); \

226 
__ui
; \

227 
__usi
; \

228 
__uc
; \

229 } *
__u
 = 
__s
; \

230 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

236 i‡((
n
) == 3 || (n) >= 5) \

237 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

240 
n
) \

243 
__u
->
__ui
 = 
__c
; \

244 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

246 
__u
->
__ui
 = 
__c
; \

247 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

249 
__u
->
__ui
 = 
__c
; \

250 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

252 
__u
->
__usi
 = (Ë
__c
; \

253 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

254 
__u
->
__uc
 = (Ë
__c
; \

258 
__u
->
__ui
 = 
__c
; \

259 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

261 
__u
->
__ui
 = 
__c
; \

262 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__usi
 = (Ë
__c
; \

271 
__u
->
__ui
 = 
__c
; \

272 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

274 
__u
->
__ui
 = 
__c
; \

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

277 
__u
->
__ui
 = 
__c
; \

278 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

280 
__u
->
__uc
 = (Ë
__c
; \

284 
__u
->
__ui
 = 
__c
; \

285 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

287 
__u
->
__ui
 = 
__c
; \

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

290 
__u
->
__ui
 = 
__c
; \

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

293 
__u
->
__ui
 = 
__c
; \

298 
__s
; })

	)

300 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

301 (((
n
) % 4 == 0) \

302 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

303 
n
) \

304 : (((
n
) % 2 == 0) \

305 ? 
	`__mem£t_c˙_by2
 (
s
, \

306 ((Ë((Ë(
c
))) * 0x01010101,\

307 
n
) \

308 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

310 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

311 
size_t
 
__n
);

313 
__STRING_INLINE
 *

314 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

316 *
__tmp
 = 
__s
;

317 
__d0
;

318 #ifde‡
__i686__


319 
__asm__
 
__vﬁ©ûe__


322 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

323 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

324 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

327 
__asm__
 
__vﬁ©ûe__


333 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338  
__s
;

339 
	}
}

341 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

342 
size_t
 
__n
);

344 
__STRING_INLINE
 *

345 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

347 
__d0
, 
__d1
;

348 *
__tmp
 = 
__s
;

349 #ifde‡
__i686__


350 
__asm__
 
__vﬁ©ûe__


354 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359 
__asm__
 
__vﬁ©ûe__


365 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370  
__s
;

371 
	}
}

373 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

374 (((
n
) % 4 == 0) \

375 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

376 : (((
n
) % 2 == 0) \

377 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

378 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

380 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

382 
__STRING_INLINE
 *

383 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

385 *
__tmp
 = 
__s
;

386 
__d0
;

387 
__asm__
 
__vﬁ©ûe__


397 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

398 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

399 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

401  
__s
;

402 
	}
}

404 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

406 
__STRING_INLINE
 *

407 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

409 
__d0
, 
__d1
;

410 *
__tmp
 = 
__s
;

411 
__asm__
 
__vﬁ©ûe__


422 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

423 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

424 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

426  
__s
;

427 
	}
}

431 
	#_HAVE_STRING_ARCH_memchr
 1

	)

432 #i‚de‡
_FORCE_INLINES


433 
__STRING_INLINE
 *

434 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

436 
__d0
;

437 #ifde‡
__i686__


438 
__d1
;

440 *
__ªs
;

441 i‡(
__n
 == 0)

442  
NULL
;

443 #ifde‡
__i686__


444 
__asm__
 
__vﬁ©ûe__


448 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

449 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

450 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

453 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464  
__ªs
 - 1;

465 
	}
}

468 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

469 #i‚de‡
_FORCE_INLINES


470 
__STRING_INLINE
 *
__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
);

472 
__STRING_INLINE
 *

473 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

475 
__d0
;

476 #ifde‡
__i686__


477 
__d1
;

479 *
__ªs
;

480 i‡(
__n
 == 0)

481  
NULL
;

482 #ifde‡
__i686__


483 
__asm__
 
__vﬁ©ûe__


489 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

490 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

491 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

494 
__asm__
 
__vﬁ©ûe__


501 : "=D" (
__ªs
), "=&c" (
__d0
)

502 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

503 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

506  
__ªs
;

507 
	}
}

508 #ifde‡
__USE_GNU


509 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

514 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

515 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

517 #i‚de‡
_FORCE_INLINES


518 
__STRING_INLINE
 *

519 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

521 
__d0
;

522 *
__ªs
;

523 
__asm__
 
__vﬁ©ûe__


526 : "=D" (
__ªs
), "=&c" (
__d0
)

527 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

528 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

530  
__ªs
 - 1;

531 
	}
}

532 #ifde‡
__USE_GNU


533 
__STRING_INLINE
 *

534 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

536  
	`__øwmemchr
 (
__s
, 
__c
);

537 
	}
}

543 
	#_HAVE_STRING_ARCH_°æí
 1

	)

544 
	#°æí
(
°r
) \

545 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

546 ? 
	`__buûtö_°æí
 (
°r
) \

547 : 
	`__°æí_g
 (
°r
)))

	)

548 
__STRING_INLINE
 
size_t
 
__°æí_g
 (
__c⁄°
 *
__°r
);

550 
__STRING_INLINE
 
size_t


551 
	$__°æí_g
 (
__c⁄°
 *
__°r
)

553 
__dummy
;

554 
__c⁄°
 *
__tmp
 = 
__°r
;

555 
__asm__
 
__vﬁ©ûe__


561 : "Ù" (
__tmp
), "=&q" (
__dummy
)

562 : "0" (
__°r
),

563 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

565  
__tmp
 - 
__°r
 - 1;

566 
	}
}

570 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

571 
	#°r˝y
(
de°
, 
§c
) \

572 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

573 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

574 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

575 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

576 (
__c⁄°
 *Ë(
§c
), \

577 
	`°æí
 (
§c
) + 1)) \

578 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

580 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

581 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

583 
__ui
; \

584 
__usi
; \

585 
__uc
; \

586 
__c
; \

587 } *
__u
 = (*Ë
__de°
; \

588 
§˛í
) \

591 
__u
->
__uc
 = '\0'; \

594 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

597 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

598 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

599 
__u
->
__uc
 = '\0'; \

602 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

605 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

606 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

607 
__u
->
__uc
 = '\0'; \

610 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

611 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

612 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

615 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

617 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

618 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

619 
__u
->
__uc
 = '\0'; \

622 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

623 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

624 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

627 (*Ë
__de°
; }))

	)

629 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

631 
__STRING_INLINE
 *

632 
	$__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

634 *
__tmp
 = 
__de°
;

635 
__dummy
;

636 
__asm__
 
__vﬁ©ûe__


645 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

646 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

647 : "0" (
__§c
), "1" (
__tmp
),

648 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

650  
__de°
;

651 
	}
}

654 #ifde‡
__USE_GNU


655 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

657 
	#__°p˝y
(
de°
, 
§c
) \

658 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

659 ? (
	`°æí
 (
§c
) + 1 <= 8 \

660 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

661 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

662 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

663 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

664 ((
§˛í
) % 4 == 0 \

665 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

666 : ((
§˛í
) % 2 == 0 \

667 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

668 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

671 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

673 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

674 (
	`__exãnsi⁄__
 ({ union { \

675 
__ui
; \

676 
__usi
; \

677 
__uc
; \

678 
__c
; \

679 } *
__u
 = (*Ë(
de°
); \

680 
§˛í
) \

683 
__u
->
__uc
 = '\0'; \

686 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

687 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

690 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

691 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

692 
__u
->
__uc
 = '\0'; \

695 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

696 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

699 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

700 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

701 
__u
->
__uc
 = '\0'; \

704 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

705 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

706 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

713 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

714 
__u
->
__uc
 = '\0'; \

717 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

719 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

720 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

723 (*Ë
__u
; }))

	)

725 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

726 
size_t
 
__§˛í
);

728 
__STRING_INLINE
 *

729 
	$__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

731 *
__tmp
 = 
__de°
;

732 
__d0
, 
__d1
;

733 
__asm__
 
__vﬁ©ûe__


741 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

742 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

744  
__tmp
;

745 
	}
}

747 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

748 
size_t
 
__§˛í
);

750 
__STRING_INLINE
 *

751 
	$__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

753 *
__tmp
 = 
__de°
;

754 
__d0
, 
__d1
;

755 
__asm__
 
__vﬁ©ûe__


768 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

769 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

770 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

771 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

773  
__tmp
 + 2;

774 
	}
}

776 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
,

777 
size_t
 
__§˛í
);

779 
__STRING_INLINE
 *

780 
	$__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

782 
__d0
, 
__d1
;

783 *
__tmp
 = 
__de°
;

784 
__asm__
 
__vﬁ©ûe__


795 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

796 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

797 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

798 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

800  
__tmp
;

801 
	}
}

803 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

805 
__STRING_INLINE
 *

806 
	$__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

808 *
__tmp
 = 
__de°
;

809 
__dummy
;

810 
__asm__
 
__vﬁ©ûe__


819 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

820 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

821 : "0" (
__§c
), "1" (
__tmp
),

822 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

824  
__tmp
 - 1;

825 
	}
}

830 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

831 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

832 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

833 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

834 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

835 (
__c⁄°
 *Ë(
§c
), 
n
) \

836 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

837 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

838 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

839 (((
§˛í
) % 4 == 0) \

840 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

841 : (((
§˛í
) % 2 == 0) \

842 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

843 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

845 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[],

846 
size_t
 
__§˛í
, size_à
__n
);

848 
__STRING_INLINE
 *

849 
	$__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

851 *
__tmp
 = 
__de°
;

852 
__dummy1
, 
__dummy2
;

853 
__asm__
 
__vﬁ©ûe__


861 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

862 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

863 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

864 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

866 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

867  
__de°
;

868 
	}
}

870 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[],

871 
size_t
 
__§˛í
, size_à
__n
);

873 
__STRING_INLINE
 *

874 
	$__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

876 *
__tmp
 = 
__de°
;

877 
__dummy1
, 
__dummy2
;

878 
__asm__
 
__vﬁ©ûe__


891 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

892 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

893 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

894 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

896 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

897  
__de°
;

898 
	}
}

900 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[],

901 
size_t
 
__§˛í
, size_à
__n
);

903 
__STRING_INLINE
 *

904 
	$__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

906 
__d0
, 
__d1
;

907 *
__tmp
 = 
__de°
;

908 
__asm__
 
__vﬁ©ûe__


919 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

920 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

921 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

922 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

924 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

925  
__de°
;

926 
	}
}

928 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
,

929 
size_t
 
__n
);

931 
__STRING_INLINE
 *

932 
	$__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

934 *
__tmp
 = 
__de°
;

935 
__dummy
;

936 i‡(
__n
 > 0)

937 
__asm__
 
__vﬁ©ûe__


953 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

954 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

957  
__de°
;

958 
	}
}

962 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

963 
	#°rˇt
(
de°
, 
§c
) \

964 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

965 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

966 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

968 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[],

969 
size_t
 
__§˛í
);

971 
__STRING_INLINE
 *

972 
	$__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
)

974 #ifde‡
__i686__


975 
__d0
;

976 *
__tmp
;

977 
__asm__
 
__vﬁ©ûe__


979 : "=D" (
__tmp
), "=&c" (
__d0
),

980 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

981 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

982 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

984 --
__tmp
;

986 *
__tmp
 = 
__de°
 - 1;

987 
__asm__
 
__vﬁ©ûe__


992 : "Ù" (
__tmp
),

993 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

994 : "0" (
__tmp
),

995 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

998 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

999  
__de°
;

1000 
	}
}

1002 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

1004 
__STRING_INLINE
 *

1005 
	$__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

1007 *
__tmp
 = 
__de°
 - 1;

1008 
__dummy
;

1009 
__asm__
 
__vﬁ©ûe__


1021 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1022 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1023 : "1" (
__tmp
), "2" (
__§c
),

1024 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1026  
__de°
;

1027 
	}
}

1031 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1032 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1033 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1034 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1035 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1036 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1037 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1038 (
__c⁄°
 *Ë(
§c
), \

1039 (
n
)Ë0, 
__de°
)) \

1040 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1042 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[],

1043 
size_t
 
__n
);

1045 
__STRING_INLINE
 *

1046 
	$__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__n
)

1048 *
__tmp
 = 
__de°
;

1049 
__dummy
;

1050 #ifde‡
__i686__


1051 
__asm__
 
__vﬁ©ûe__


1065 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1066 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1069 --
__tmp
;

1070 
__asm__
 
__vﬁ©ûe__


1087 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1088 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1091  
__de°
;

1092 
	}
}

1096 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1097 
	#°rcmp
(
s1
, 
s2
) \

1098 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1099 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1100 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1101 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

1102 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1103 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1104 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1105 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1106 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1107 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1108 (
__c⁄°
 *Ë(
s2
), \

1109 
	`°æí
 (
s1
)) \

1110 : 
	`__°rcmp_cg
 ((
__c⁄°
 *Ë(
s1
), \

1111 (
__c⁄°
 *Ë(
s2
), \

1112 
	`°æí
 (
s1
))) \

1113 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1114 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1115 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1116 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1117 (
__c⁄°
 *Ë(
s2
), \

1118 
	`°æí
 (
s2
)) \

1119 : 
	`__°rcmp_gc
 ((
__c⁄°
 *Ë(
s1
), \

1120 (
__c⁄°
 *Ë(
s2
), \

1121 
	`°æí
 (
s2
))) \

1122 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1124 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1125 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1126 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1128 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1129 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1131 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1132 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1133 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1136 
__ªsu…
; }))

	)

1138 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1139 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = (
s2
); \

1140 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1141 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1143 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1144 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1146 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1147 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1148 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1151 
__ªsu…
; }))

	)

1153 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1154 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = (
s1
); \

1155 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1156 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1158 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1159 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1161 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1162 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1163 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1166 
__ªsu…
; }))

	)

1168 
__STRING_INLINE
 
__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
);

1170 
__STRING_INLINE
 

1171 
	$__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

1173 
__ªs
;

1174 
__asm__
 
__vﬁ©ûe__


1190 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1191 : "1" (
__s1
), "2" (
__s2
),

1192 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1193 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1195  
__ªs
;

1196 
	}
}

1200 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1201 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1202 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1203 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1204 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1205 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1206 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1208 
__STRING_INLINE
 
__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

1209 
size_t
 
__n
);

1211 
__STRING_INLINE
 

1212 
	$__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

1214 
__ªs
;

1215 
__asm__
 
__vﬁ©ûe__


1234 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1235 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1236 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1237 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1239  
__ªs
;

1240 
	}
}

1244 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1245 
	#_USE_STRING_ARCH_°rchr
 1

	)

1246 
	#°rchr
(
s
, 
c
) \

1247 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1248 ? ((
c
) == '\0' \

1249 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1250 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1251 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1253 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1255 
__STRING_INLINE
 *

1256 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1258 
__d0
;

1259 *
__ªs
;

1260 
__asm__
 
__vﬁ©ûe__


1270 : "Ù" (
__ªs
), "=&a" (
__d0
)

1271 : "0" (
__s
), "1" (
__c
),

1272 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1274  
__ªs
;

1275 
	}
}

1277 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1279 
__STRING_INLINE
 *

1280 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1282 
__d0
;

1283 *
__ªs
;

1284 
__asm__
 
__vﬁ©ûe__


1295 : "Ù" (
__ªs
), "=&a" (
__d0
)

1296 : "0" (
__s
), "1" (
__c
),

1297 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1299  
__ªs
;

1300 
	}
}

1304 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1305 
	#__°rch∫ul
(
s
, 
c
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1307 ? ((
c
) == '\0' \

1308 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1309 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1310 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1312 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

1314 
__STRING_INLINE
 *

1315 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

1317 
__d0
;

1318 *
__ªs
;

1319 
__asm__
 
__vﬁ©ûe__


1329 : "Ù" (
__ªs
), "=&a" (
__d0
)

1330 : "0" (
__s
), "1" (
__c
),

1331 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1333  
__ªs
;

1334 
	}
}

1336 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

1338 
__STRING_INLINE
 *

1339 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

1341 
__d0
;

1342 *
__ªs
;

1343 
__asm__
 
__vﬁ©ûe__


1354 : "Ù" (
__ªs
), "=&a" (
__d0
)

1355 : "0" (
__s
), "1" (
__c
),

1356 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1358  
__ªs
;

1359 
	}
}

1360 #ifde‡
__USE_GNU


1361 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1365 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1367 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1368 
	#ödex
(
s
, 
c
) \

1369 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1370 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1371 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1376 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1377 
	#°ºchr
(
s
, 
c
) \

1378 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1379 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1380 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1382 #ifde‡
__i686__


1383 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1385 
__STRING_INLINE
 *

1386 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1388 
__d0
, 
__d1
;

1389 *
__ªs
;

1390 
__asm__
 
__vﬁ©ûe__


1398 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1399 : "0" (1), "1" (
__s
), "2" (
__c
),

1400 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1402  
__ªs
 - 1;

1403 
	}
}

1405 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1407 
__STRING_INLINE
 *

1408 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1410 
__d0
, 
__d1
;

1411 *
__ªs
;

1412 
__asm__
 
__vﬁ©ûe__


1421 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1422 : "0" (1), "1" (
__s
), "2" (
__c
),

1423 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1425  
__ªs
 - 1;

1426 
	}
}

1428 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1430 
__STRING_INLINE
 *

1431 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1433 
__d0
, 
__d1
;

1434 *
__ªs
;

1435 
__asm__
 
__vﬁ©ûe__


1445 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1446 : "0" (0), "1" (
__s
), "2" (
__c
),

1447 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1449  
__ªs
;

1450 
	}
}

1452 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1454 
__STRING_INLINE
 *

1455 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1457 
__d0
, 
__d1
;

1458 *
__ªs
;

1459 
__asm__
 
__vﬁ©ûe__


1470 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1471 : "0" (0), "1" (
__s
), "2" (
__c
),

1472 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1474  
__ªs
;

1475 
	}
}

1479 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1481 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1482 
	#rödex
(
s
, 
c
) \

1483 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1484 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1485 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1491 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1492 
	#°rc•n
(
s
, 
ªje˘
) \

1493 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1494 ? ((
ªje˘
)[0] == '\0' \

1495 ? 
	`°æí
 (
s
) \

1496 : ((
ªje˘
)[1] == '\0' \

1497 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1498 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1499 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1501 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

1503 #i‚de‡
_FORCE_INLINES


1504 
__STRING_INLINE
 
size_t


1505 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

1507 
__d0
;

1508 *
__ªs
;

1509 
__asm__
 
__vﬁ©ûe__


1518 : "Ù" (
__ªs
), "=&a" (
__d0
)

1519 : "0" (
__s
), "1" (
__ªje˘
),

1520 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1522  (
__ªs
 - 1Ë- 
__s
;

1523 
	}
}

1526 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[],

1527 
size_t
 
__ªje˘_Àn
);

1529 
__STRING_INLINE
 
size_t


1530 
	$__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1532 
__d0
, 
__d1
, 
__d2
;

1533 
__c⁄°
 *
__ªs
;

1534 
__asm__
 
__vﬁ©ûe__


1545 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1546 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1548  (
__ªs
 - 1Ë- 
__s
;

1549 
	}
}

1551 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
);

1552 #ifde‡
__PIC__


1554 
__STRING_INLINE
 
size_t


1555 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1557 
__d0
, 
__d1
, 
__d2
;

1558 
__c⁄°
 *
__ªs
;

1559 
__asm__
 
__vﬁ©ûe__


1576 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1577 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1579  (
__ªs
 - 1Ë- 
__s
;

1580 
	}
}

1582 
__STRING_INLINE
 
size_t


1583 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1585 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1586 
__c⁄°
 *
__ªs
;

1587 
__asm__
 
__vﬁ©ûe__


1601 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1602 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1605  (
__ªs
 - 1Ë- 
__s
;

1606 
	}
}

1612 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1613 
	#°r•n
(
s
, 
ac˚±
) \

1614 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1615 ? ((
ac˚±
)[0] == '\0' \

1616 ? ((Ë(
s
), 0) \

1617 : ((
ac˚±
)[1] == '\0' \

1618 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1619 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1620 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1622 #i‚de‡
_FORCE_INLINES


1623 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1625 
__STRING_INLINE
 
size_t


1626 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1628 
__d0
;

1629 *
__ªs
;

1631 
__asm__
 
__vﬁ©ûe__


1637 : "Ù" (
__ªs
), "=&q" (
__d0
)

1638 : "0" (
__s
), "1" (
__ac˚±
),

1639 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1641  (
__ªs
 - 1Ë- 
__s
;

1642 
	}
}

1645 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1646 
size_t
 
__ac˚±_Àn
);

1648 
__STRING_INLINE
 
size_t


1649 
	$__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1651 
__d0
, 
__d1
, 
__d2
;

1652 
__c⁄°
 *
__ªs
;

1653 
__asm__
 
__vﬁ©ûe__


1664 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1665 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1668 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1669 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1671  (
__ªs
 - 1Ë- 
__s
;

1672 
	}
}

1674 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1675 #ifde‡
__PIC__


1677 
__STRING_INLINE
 
size_t


1678 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1680 
__d0
, 
__d1
, 
__d2
;

1681 
__c⁄°
 *
__ªs
;

1682 
__asm__
 
__vﬁ©ûe__


1698 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1699 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1701  (
__ªs
 - 1Ë- 
__s
;

1702 
	}
}

1704 
__STRING_INLINE
 
size_t


1705 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1707 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1708 
__c⁄°
 *
__ªs
;

1709 
__asm__
 
__vﬁ©ûe__


1723 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1724 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1726  (
__ªs
 - 1Ë- 
__s
;

1727 
	}
}

1732 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1733 
	#°Ωbrk
(
s
, 
ac˚±
) \

1734 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1735 ? ((
ac˚±
)[0] == '\0' \

1736 ? ((Ë(
s
), (*) 0) \

1737 : ((
ac˚±
)[1] == '\0' \

1738 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1739 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1740 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1742 
__STRING_INLINE
 *
__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1743 
size_t
 
__ac˚±_Àn
);

1745 
__STRING_INLINE
 *

1746 
	$__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1748 
__d0
, 
__d1
, 
__d2
;

1749 *
__ªs
;

1750 
__asm__
 
__vﬁ©ûe__


1765 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1766 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1768  
__ªs
;

1769 
	}
}

1771 
__STRING_INLINE
 *
__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1772 #ifde‡
__PIC__


1774 
__STRING_INLINE
 *

1775 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1777 
__d0
, 
__d1
, 
__d2
;

1778 *
__ªs
;

1779 
__asm__
 
__vﬁ©ûe__


1800 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1801 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1803  
__ªs
;

1804 
	}
}

1806 
__STRING_INLINE
 *

1807 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1809 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1810 *
__ªs
;

1811 
__asm__
 
__vﬁ©ûe__


1830 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1831 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1833  
__ªs
;

1834 
	}
}

1839 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1840 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1841 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1842 ? ((
√edÀ
)[0] == '\0' \

1843 ? (
hay°ack
) \

1844 : ((
√edÀ
)[1] == '\0' \

1845 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1846 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1847 
	`°æí
 (
√edÀ
)))) \

1848 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1852 
__STRING_INLINE
 *
__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1853 
size_t
 
__√edÀ_Àn
);

1855 
__STRING_INLINE
 *

1856 
	$__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1857 
size_t
 
__√edÀ_Àn
)

1859 
__d0
, 
__d1
, 
__d2
;

1860 *
__ªs
;

1861 
__asm__
 
__vﬁ©ûe__


1874 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1875 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1877  
__ªs
;

1878 
	}
}

1880 
__STRING_INLINE
 *
__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
);

1881 #ifde‡
__PIC__


1883 
__STRING_INLINE
 *

1884 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1886 
__d0
, 
__d1
, 
__d2
;

1887 *
__ªs
;

1888 
__asm__
 
__vﬁ©ûe__


1907 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1908 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1909 "d" (
__√edÀ
)

1911  
__ªs
;

1912 
	}
}

1914 
__STRING_INLINE
 *

1915 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1917 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1918 *
__ªs
;

1919 
__asm__
 
__vﬁ©ûe__


1936 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1937 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1938 "b" (
__√edÀ
)

1940  
__ªs
;

1941 
	}
}

1947 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1948 #ifde‡
__i686__


1949 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1950 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1951 ? 
	`__buûtö_ffs
 (
w‹d
) \

1952 : ({ 
__˙t
, 
__tmp
; \

1953 
__asm__
 
__vﬁ©ûe__
 \

1956 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1957 : "rm" (
w‹d
), "1" (-1)); \

1958 
__˙t
 + 1; }))

	)

1960 #i‚de‡
ff¶


1961 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1966 #i‚de‡
_FORCE_INLINES


1967 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1170 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1173 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1174 
__STRING_INLINE
 *

1175 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1177 *
__ªsu…
;

1178 i‡(
__s
 =
NULL
)

1179 
__s
 = *
__√xç
;

1180 *
__s
 =
__£p
)

1181 ++
__s
;

1182 
__ªsu…
 = 
NULL
;

1183 i‡(*
__s
 != '\0')

1185 
__ªsu…
 = 
__s
++;

1186 *
__s
 != '\0')

1187 i‡(*
__s
++ =
__£p
)

1189 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1194  
__ªsu…
;

1195 
	}
}

1196 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1197 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1202 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1203 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1205 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1206 
	#__°r£p
(
s
, 
ªje˘
) \

1207 
__exãnsi⁄__
 \

1208 ({ 
__r0
, 
__r1
, 
__r2
; \

1209 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1210 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1211 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1212 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1213 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1214 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1215 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1216 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1217 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1218 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1220 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1223 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1224 
__STRING_INLINE
 *

1225 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1227 *
__ªtvÆ
 = *
__s
;

1228 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1229 *(*
__s
)++ = '\0';

1230  
__ªtvÆ
;

1231 
	}
}

1233 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1234 
__STRING_INLINE
 *

1235 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1237 *
__ªtvÆ
 = *
__s
;

1238 i‡(
__ªtvÆ
 !
NULL
)

1240 *
__˝
 = 
__ªtvÆ
;

1243 i‡(*
__˝
 == '\0')

1245 
__˝
 = 
NULL
;

1248 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1250 *
__˝
++ = '\0';

1253 ++
__˝
;

1255 *
__s
 = 
__˝
;

1257  
__ªtvÆ
;

1258 
	}
}

1260 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1261 
__ªje˘3
);

1262 
__STRING_INLINE
 *

1263 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1265 *
__ªtvÆ
 = *
__s
;

1266 i‡(
__ªtvÆ
 !
NULL
)

1268 *
__˝
 = 
__ªtvÆ
;

1271 i‡(*
__˝
 == '\0')

1273 
__˝
 = 
NULL
;

1276 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1278 *
__˝
++ = '\0';

1281 ++
__˝
;

1283 *
__s
 = 
__˝
;

1285  
__ªtvÆ
;

1286 
	}
}

1287 #ifde‡
__USE_BSD


1288 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1295 #ifde‡
__USE_MISC


1297 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1298 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1299 
	~<°dlib.h
>

1302 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1304 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1305 
	#__°rdup
(
s
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1307 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1308 ? (*Ë
	`ˇŒoc
 (1, 1) \

1309 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1310 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1311 i‡(
__ªtvÆ
 !
NULL
) \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1313 
__ªtvÆ
; 
	}
})) \

1314 : 
	`__°rdup
 (
s
)))

	)

1316 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1317 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1321 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1323 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1324 
__THROW
 
__©åibuã_mÆloc__
;

1325 
	#__°∫dup
(
s
, 
n
) \

1326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1327 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1328 ? (*Ë
	`ˇŒoc
 (1, 1) \

1329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1330 
size_t
 
__n
 = (
n
); \

1331 *
__ªtvÆ
; \

1332 i‡(
__n
 < 
__Àn
) \

1333 
__Àn
 = 
__n
 + 1; \

1334 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1335 i‡(
__ªtvÆ
 !
NULL
) \

1337 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1338 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1339 
__Àn
 - 1); \

1341 
__ªtvÆ
; 
	}
})) \

1342 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1344 #ifde‡
__USE_GNU


1345 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1351 #i‚de‡
_FORCE_INLINES


1352 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


26 #unde‡
mem˝y


27 #unde‡
memmove


28 #unde‡
mem£t


29 #unde‡
°rˇt


30 #unde‡
°r˝y


31 #unde‡
°∫ˇt


32 #unde‡
°∫˝y


33 #ifde‡
__USE_GNU


34 #unde‡
memp˝y


35 #unde‡
°p˝y


37 #ifde‡
__USE_BSD


38 #unde‡
bc›y


39 #unde‡
bzîo


43 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

44 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

45 ? 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

46 : 
	`__mem˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

47 
__ölöe__
 *

48 
__©åibuã__
 ((
__Æways_ölöe__
))

49 
	$__mem˝y_ichk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
)

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

56 
	#memmove
(
de°
, 
§c
, 
Àn
) \

57 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

58 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

59 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
))

	)

60 
__ölöe__
 *

61 
__©åibuã__
 ((
__Æways_ölöe__
))

62 
	$__memmove_ichk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
)

64  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

65 
	}
}

68 #ifde‡
__USE_GNU


69 
	#memp˝y
(
de°
, 
§c
, 
Àn
) \

70 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

71 ? 
	`__buûtö___memp˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

72 : 
	`__memp˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

73 
__ölöe__
 *

74 
__©åibuã__
 ((
__Æways_ölöe__
))

75 
	$__memp˝y_ichk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

76 
size_t
 
__Àn
)

78  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

79 
	}
}

83 
	#mem£t
(
de°
, 
ch
, 
Àn
) \

84 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

85 ? 
	`__buûtö___mem£t_chk
 (
de°
, 
ch
, 
Àn
, 
	`__bos0
 (dest)) \

86 : 
	`__mem£t_ichk
 (
de°
, 
ch
, 
Àn
))

	)

87 
__ölöe__
 *

88 
__©åibuã__
 ((
__Æways_ölöe__
))

89 
	$__mem£t_ichk
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
)

91  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 #ifde‡
__USE_BSD


95 
	#bc›y
(
§c
, 
de°
, 
Àn
) (() \

96 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

97 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

98 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
)))

	)

99 
	#bzîo
(
de°
, 
Àn
) (() \

100 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

101 ? 
	`__buûtö___mem£t_chk
 (
de°
, '\0', 
Àn
, 
	`__bos0
 (dest)) \

102 : 
	`__mem£t_ichk
 (
de°
, '\0', 
Àn
)))

	)

106 
	#°r˝y
(
de°
, 
§c
) \

107 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

108 ? 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

109 : 
	`__°r˝y_ichk
 (
de°
, 
§c
))

	)

110 
__ölöe__
 *

111 
__©åibuã__
 ((
__Æways_ölöe__
))

112 
	$__°r˝y_ichk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

114  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

118 #ifde‡
__USE_GNU


119 
	#°p˝y
(
de°
, 
§c
) \

120 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

121 ? 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

122 : 
	`__°p˝y_ichk
 (
de°
, 
§c
))

	)

123 
__ölöe__
 *

124 
__©åibuã__
 ((
__Æways_ölöe__
))

125 
	$__°p˝y_ichk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

127  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

128 
	}
}

132 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

133 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

134 ? 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

135 : 
	`__°∫˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

136 
__ölöe__
 *

137 
__©åibuã__
 ((
__Æways_ölöe__
))

138 
	$__°∫˝y_ichk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

139 
size_t
 
__Àn
)

141  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

142 
	}
}

145 
	#°rˇt
(
de°
, 
§c
) \

146 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

147 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

148 : 
	`__°rˇt_ichk
 (
de°
, 
§c
))

	)

149 
__ölöe__
 *

150 
__©åibuã__
 ((
__Æways_ölöe__
))

151 
	$__°rˇt_ichk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

153  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

154 
	}
}

157 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

158 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

159 ? 
	`__buûtö___°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

160 : 
	`__°∫ˇt_ichk
 (
de°
, 
§c
, 
Àn
))

	)

161 
__ölöe__
 *

162 
__©åibuã__
 ((
__Æways_ölöe__
))

163 
	$__°∫ˇt_ichk
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

164 
size_t
 
__Àn
)

166  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

167 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	t__u_ch¨
;

35 
	t__u_sh‹t
;

36 
	t__u_öt
;

37 
	t__u_l⁄g
;

40 sig√d 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 sig√d 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 sig√d 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 #i‡
__WORDSIZE
 == 64

47 sig√d 
	t__öt64_t
;

48 
	t__uöt64_t
;

49 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


50 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

51 
__exãnsi⁄__
 
	t__uöt64_t
;

55 #i‡
__WORDSIZE
 == 64

56 
	t__quad_t
;

57 
	t__u_quad_t
;

58 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


59 
__exãnsi⁄__
 
	t__quad_t
;

60 
__exãnsi⁄__
 
	t__u_quad_t
;

64 
	m__vÆ
[2];

65 } 
	t__quad_t
;

68 
__u_l⁄g
 
	m__vÆ
[2];

69 } 
	t__u_quad_t
;

102 
	#__S16_TYPE
 

	)

103 
	#__U16_TYPE
 

	)

104 
	#__S32_TYPE
 

	)

105 
	#__U32_TYPE
 

	)

106 
	#__SLONGWORD_TYPE
 

	)

107 
	#__ULONGWORD_TYPE
 

	)

108 #i‡
__WORDSIZE
 == 32

109 
	#__SQUAD_TYPE
 
__quad_t


	)

110 
	#__UQUAD_TYPE
 
__u_quad_t


	)

111 
	#__SWORD_TYPE
 

	)

112 
	#__UWORD_TYPE
 

	)

113 
	#__SLONG32_TYPE
 

	)

114 
	#__ULONG32_TYPE
 

	)

115 
	#__S64_TYPE
 
__quad_t


	)

116 
	#__U64_TYPE
 
__u_quad_t


	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	#__SQUAD_TYPE
 

	)

119 
	#__UQUAD_TYPE
 

	)

120 
	#__SWORD_TYPE
 

	)

121 
	#__UWORD_TYPE
 

	)

122 
	#__SLONG32_TYPE
 

	)

123 
	#__ULONG32_TYPE
 

	)

124 
	#__S64_TYPE
 

	)

125 
	#__U64_TYPE
 

	)

129 
	~<bôs/ty≥sizes.h
>

133 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

136 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

137 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

138 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

139 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

140 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

141 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

142 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

143 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

144 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

145 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

146 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

147 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

148 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

149 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

150 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

151 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

152 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

153 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

155 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

156 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

157 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

160 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

163 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

166 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

171 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

172 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

175 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

176 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

179 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

180 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

182 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

186 
__off64_t
 
	t__loff_t
;

187 
__quad_t
 *
	t__qaddr_t
;

188 *
	t__ˇddr_t
;

191 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

194 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

197 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WALL
 0x40000000

	)

36 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/eti.h

35 #i‚de‡
NCURSES_ETI_H_ö˛


36 
	#NCURSES_ETI_H_ö˛
 1

	)

38 
	#E_OK
 (0)

	)

39 
	#E_SYSTEM_ERROR
 (-1)

	)

40 
	#E_BAD_ARGUMENT
 (-2)

	)

41 
	#E_POSTED
 (-3)

	)

42 
	#E_CONNECTED
 (-4)

	)

43 
	#E_BAD_STATE
 (-5)

	)

44 
	#E_NO_ROOM
 (-6)

	)

45 
	#E_NOT_POSTED
 (-7)

	)

46 
	#E_UNKNOWN_COMMAND
 (-8)

	)

47 
	#E_NO_MATCH
 (-9)

	)

48 
	#E_NOT_SELECTABLE
 (-10)

	)

49 
	#E_NOT_CONNECTED
 (-11)

	)

50 
	#E_REQUEST_DENIED
 (-12)

	)

51 
	#E_INVALID_FIELD
 (-13)

	)

52 
	#E_CURRENT
 (-14)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

90 #unde‡
__USE_ISOC99


91 #unde‡
__USE_POSIX


92 #unde‡
__USE_POSIX2


93 #unde‡
__USE_POSIX199309


94 #unde‡
__USE_POSIX199506


95 #unde‡
__USE_XOPEN


96 #unde‡
__USE_XOPEN_EXTENDED


97 #unde‡
__USE_UNIX98


98 #unde‡
__USE_XOPEN2K


99 #unde‡
__USE_LARGEFILE


100 #unde‡
__USE_LARGEFILE64


101 #unde‡
__USE_FILE_OFFSET64


102 #unde‡
__USE_BSD


103 #unde‡
__USE_SVID


104 #unde‡
__USE_MISC


105 #unde‡
__USE_GNU


106 #unde‡
__USE_REENTRANT


107 #unde‡
__USE_FORTIFY_LEVEL


108 #unde‡
__FAVOR_BSD


109 #unde‡
__KERNEL_STRICT_NAMES


113 #i‚de‡
_LOOSE_KERNEL_NAMES


114 
	#__KERNEL_STRICT_NAMES


	)

118 
	#__USE_ANSI
 1

	)

127 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


128 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

129 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

131 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

136 #i‡
deföed
 
_BSD_SOURCE
 && \

137 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

138 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

139 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

140 
	#__FAVOR_BSD
 1

	)

144 #ifde‡
_GNU_SOURCE


145 #unde‡
_ISOC99_SOURCE


146 
	#_ISOC99_SOURCE
 1

	)

147 #unde‡
_POSIX_SOURCE


148 
	#_POSIX_SOURCE
 1

	)

149 #unde‡
_POSIX_C_SOURCE


150 
	#_POSIX_C_SOURCE
 199506L

	)

151 #unde‡
_XOPEN_SOURCE


152 
	#_XOPEN_SOURCE
 600

	)

153 #unde‡
_XOPEN_SOURCE_EXTENDED


154 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

155 #unde‡
_LARGEFILE64_SOURCE


156 
	#_LARGEFILE64_SOURCE
 1

	)

157 #unde‡
_BSD_SOURCE


158 
	#_BSD_SOURCE
 1

	)

159 #unde‡
_SVID_SOURCE


160 
	#_SVID_SOURCE
 1

	)

165 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

166 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

167 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

168 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

169 
	#_BSD_SOURCE
 1

	)

170 
	#_SVID_SOURCE
 1

	)

177 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

178 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

179 
	#__USE_ISOC99
 1

	)

184 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

185 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

186 
	#_POSIX_SOURCE
 1

	)

187 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

188 
	#_POSIX_C_SOURCE
 2

	)

190 
	#_POSIX_C_SOURCE
 199506L

	)

194 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


195 
	#__USE_POSIX
 1

	)

198 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


199 
	#__USE_POSIX2
 1

	)

202 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

203 
	#__USE_POSIX199309
 1

	)

206 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

207 
	#__USE_POSIX199506
 1

	)

210 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

211 
	#__USE_XOPEN2K
 1

	)

214 #ifdef 
_XOPEN_SOURCE


215 
	#__USE_XOPEN
 1

	)

216 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

217 
	#__USE_XOPEN_EXTENDED
 1

	)

218 
	#__USE_UNIX98
 1

	)

219 #unde‡
_LARGEFILE_SOURCE


220 
	#_LARGEFILE_SOURCE
 1

	)

221 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

222 
	#__USE_XOPEN2K
 1

	)

223 #unde‡
__USE_ISOC99


224 
	#__USE_ISOC99
 1

	)

227 #ifde‡
_XOPEN_SOURCE_EXTENDED


228 
	#__USE_XOPEN_EXTENDED
 1

	)

233 #ifde‡
_LARGEFILE_SOURCE


234 
	#__USE_LARGEFILE
 1

	)

237 #ifde‡
_LARGEFILE64_SOURCE


238 
	#__USE_LARGEFILE64
 1

	)

241 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

242 
	#__USE_FILE_OFFSET64
 1

	)

245 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


246 
	#__USE_MISC
 1

	)

249 #ifdef 
_BSD_SOURCE


250 
	#__USE_BSD
 1

	)

253 #ifdef 
_SVID_SOURCE


254 
	#__USE_SVID
 1

	)

257 #ifdef 
_GNU_SOURCE


258 
	#__USE_GNU
 1

	)

261 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


262 
	#__USE_REENTRANT
 1

	)

265 #i‡
_FORTIFY_SOURCE
 > 0 && 
__GNUC_PREREQ
 (4, 1Ë&& 
__OPTIMIZE__
 > 0

266 #i‡
_FORTIFY_SOURCE
 == 1

267 
	#__USE_FORTIFY_LEVEL
 1

	)

268 #ñi‡
_FORTIFY_SOURCE
 > 1

269 
	#__USE_FORTIFY_LEVEL
 2

	)

274 
	#__STDC_IEC_559__
 1

	)

275 
	#__STDC_IEC_559_COMPLEX__
 1

	)

278 
	#__STDC_ISO_10646__
 200009L

	)

286 #unde‡
__GNU_LIBRARY__


287 
	#__GNU_LIBRARY__
 6

	)

291 
	#__GLIBC__
 2

	)

292 
	#__GLIBC_MINOR__
 3

	)

294 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

295 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

298 #i‡
deföed
 
__GNUC__
 \

299 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

300 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

301 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

302 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

306 #i‚de‡
__ASSEMBLER__


307 #i‚de‡
_SYS_CDEFS_H


308 
	~<sys/cdefs.h
>

313 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


314 
	#__USE_LARGEFILE
 1

	)

315 
	#__USE_LARGEFILE64
 1

	)

321 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

322 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


323 
	#__USE_EXTERN_INLINES
 1

	)

331 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

147 
	#_IO_SKIPWS
 01

	)

148 
	#_IO_LEFT
 02

	)

149 
	#_IO_RIGHT
 04

	)

150 
	#_IO_INTERNAL
 010

	)

151 
	#_IO_DEC
 020

	)

152 
	#_IO_OCT
 040

	)

153 
	#_IO_HEX
 0100

	)

154 
	#_IO_SHOWBASE
 0200

	)

155 
	#_IO_SHOWPOINT
 0400

	)

156 
	#_IO_UPPERCASE
 01000

	)

157 
	#_IO_SHOWPOS
 02000

	)

158 
	#_IO_SCIENTIFIC
 04000

	)

159 
	#_IO_FIXED
 010000

	)

160 
	#_IO_UNITBUF
 020000

	)

161 
	#_IO_STDIO
 040000

	)

162 
	#_IO_DONT_CLOSE
 0100000

	)

163 
	#_IO_BOOLALPHA
 0200000

	)

166 
_IO_jump_t
; 
	g_IO_FILE
;

169 #ifde‡
_IO_MTSAFE_IO


170 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

171 
	~<bôs/°dio-lock.h
>

176 
	t_IO_lock_t
;

182 
	s_IO_m¨kî
 {

183 
_IO_m¨kî
 *
	m_√xt
;

184 
_IO_FILE
 *
	m_sbuf
;

188 
	m_pos
;

190 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

191 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

192 
	mpublic
:

193 
°ªamm¨kî
(
°ªambuf
 *
sb
);

194 ~
°ªamm¨kî
();

195 
ßvög
(Ë{  
	m_•os
 == -2; }

196 
dñè
(
°ªamm¨kî
&);

197 
dñè
();

202 
	e__codecvt_ªsu…


204 
	m__codecvt_ok
,

205 
	m__codecvt_∑πül
,

206 
	m__codecvt_îr‹
,

207 
	m__codecvt_noc⁄v


210 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


213 
	s_IO_codecvt


215 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

216 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

217 
	m__mb°©e_t
 *,

218 c⁄° 
	mwch¨_t
 *,

219 c⁄° 
	mwch¨_t
 *,

220 c⁄° 
	mwch¨_t
 **, *,

222 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *, *,

225 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

226 
	m__mb°©e_t
 *,

228 c⁄° **, 
	mwch¨_t
 *,

229 
	mwch¨_t
 *, wchar_t **);

230 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

231 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

232 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

233 c⁄° *, c⁄° *, 
	m_IO_size_t
);

234 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

236 
_IO_ic⁄v_t
 
	m__cd_ö
;

237 
_IO_ic⁄v_t
 
	m__cd_out
;

241 
	s_IO_wide_d©a


243 
wch¨_t
 *
	m_IO_ªad_±r
;

244 
wch¨_t
 *
	m_IO_ªad_íd
;

245 
wch¨_t
 *
	m_IO_ªad_ba£
;

246 
wch¨_t
 *
	m_IO_wrôe_ba£
;

247 
wch¨_t
 *
	m_IO_wrôe_±r
;

248 
wch¨_t
 *
	m_IO_wrôe_íd
;

249 
wch¨_t
 *
	m_IO_buf_ba£
;

250 
wch¨_t
 *
	m_IO_buf_íd
;

252 
wch¨_t
 *
	m_IO_ßve_ba£
;

253 
wch¨_t
 *
	m_IO_backup_ba£
;

255 
wch¨_t
 *
	m_IO_ßve_íd
;

257 
__mb°©e_t
 
	m_IO_°©e
;

258 
__mb°©e_t
 
	m_IO_œ°_°©e
;

259 
_IO_codecvt
 
	m_codecvt
;

261 
wch¨_t
 
	m_sh‹tbuf
[1];

263 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

267 
	s_IO_FILE
 {

268 
	m_Êags
;

269 
	#_IO_fûe_Êags
 
_Êags


	)

273 * 
	m_IO_ªad_±r
;

274 * 
	m_IO_ªad_íd
;

275 * 
	m_IO_ªad_ba£
;

276 * 
	m_IO_wrôe_ba£
;

277 * 
	m_IO_wrôe_±r
;

278 * 
	m_IO_wrôe_íd
;

279 * 
	m_IO_buf_ba£
;

280 * 
	m_IO_buf_íd
;

282 *
	m_IO_ßve_ba£
;

283 *
	m_IO_backup_ba£
;

284 *
	m_IO_ßve_íd
;

286 
_IO_m¨kî
 *
	m_m¨kîs
;

288 
_IO_FILE
 *
	m_chaö
;

290 
	m_fûío
;

292 
	m_blksize
;

294 
	m_Êags2
;

296 
_IO_off_t
 
	m_ﬁd_off£t
;

298 
	#__HAVE_COLUMN


	)

300 
	m_cur_cﬁumn
;

301 sig√d 
	m_vèbÀ_off£t
;

302 
	m_sh‹tbuf
[1];

306 
_IO_lock_t
 *
	m_lock
;

307 #ifde‡
_IO_USE_OLD_IO_FILE


310 
	s_IO_FILE_com∂ëe


312 
_IO_FILE
 
	m_fûe
;

314 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

315 
_IO_off64_t
 
	m_off£t
;

316 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


318 
_IO_codecvt
 *
	m_codecvt
;

319 
_IO_wide_d©a
 *
	m_wide_d©a
;

321 *
	m__∑d1
;

322 *
	m__∑d2
;

324 
	m_mode
;

326 
	m_unu£d2
[15 *  () - 2 *  (*)];

330 #i‚de‡
__˝lu•lus


331 
_IO_FILE
 
	t_IO_FILE
;

334 
	g_IO_FILE_∂us
;

336 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

337 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

338 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

339 #i‚de‡
_LIBC


340 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

341 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

342 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

344 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

345 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

346 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

354 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

362 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

363 
	tsize_t
 
	t__n
);

371 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

374 
	t__io_˛o£_‚
 (*
	t__cookõ
);

377 #ifde‡
_GNU_SOURCE


379 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

380 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

381 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

382 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

387 
__io_ªad_‚
 *
	mªad
;

388 
__io_wrôe_‚
 *
	mwrôe
;

389 
__io_£ek_‚
 *
	m£ek
;

390 
__io_˛o£_‚
 *
	m˛o£
;

391 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

392 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

394 
	g_IO_cookõ_fûe
;

397 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

398 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

402 #ifde‡
__˝lu•lus


406 
__undîÊow
 (
_IO_FILE
 *Ë
__THROW
;

407 
__uÊow
 (
_IO_FILE
 *Ë
__THROW
;

408 
__ovîÊow
 (
_IO_FILE
 *, Ë
__THROW
;

409 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *Ë
__THROW
;

410 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *Ë
__THROW
;

411 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wöt_tË
__THROW
;

413 #i‡ 
__GNUC__
 >= 3

414 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (ex¥,Ñes)

	)

416 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

419 
	#_IO_gëc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

421 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

422 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

423 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

424 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

425 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

426 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

427 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

428 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

429 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

431 
	#_IO_gëwc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

434 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

435 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

436 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

437 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

438 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

439 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

441 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

442 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

444 
_IO_gëc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

445 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

446 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

447 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

449 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

452 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

453 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

455 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

456 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

457 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

459 #ifde‡
_IO_MTSAFE_IO


460 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

461 
	#_IO_Êockfûe
(
_Â
) \

462 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

463 
	#_IO_fu∆ockfûe
(
_Â
) \

464 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

466 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

467 
	#_IO_Êockfûe
(
_Â
Ë

	)

468 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

469 
	#_IO_·rylockfûe
(
_Â
Ë

	)

470 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

471 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

474 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

475 
_IO_va_li°
, *
__ª°ri˘
Ë
__THROW
;

476 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

477 
_IO_va_li°
Ë
__THROW
;

478 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_tË
__THROW
;

479 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_tË
__THROW
;

481 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , Ë
__THROW
;

482 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, Ë
__THROW
;

484 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

486 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


487 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

488 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

489 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

490 #i‡
__GNUC__
 >= 2

493 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


494 
	~<shlib-com∑t.h
>

495 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

496 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

497 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

498 c⁄° 
_IO_°dö_u£d
;

499 
wók_exã∫
 (
_IO_°dö_u£d
);

502 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


503 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

507 
	#_IO_fwide
(
__Â
, 
__mode
) \

508 ({ 
__ªsu…
 = (
__mode
); \

509 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

511 i‡((
__Â
)->
_mode
 == 0) \

513 (
__Â
)->
_mode
 = -1; \

514 
__ªsu…
 = (
__Â
)->
_mode
; \

516 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

517 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

519 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

520 
__ªsu…
; })

	)

523 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

524 
_IO_va_li°
, *
__ª°ri˘
Ë
__THROW
;

525 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

526 
_IO_va_li°
Ë
__THROW
;

527 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_tË
__THROW
;

528 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

531 #ifde‡
__˝lu•lus


	@/usr/include/ncurses_dll.h

30 #i‚de‡
NCURSES_DLL_H_ö˛


31 
	#NCURSES_DLL_H_ö˛
 1

	)

37 #unde‡
NCURSES_DLL


38 
	#NCURSES_STATIC


	)

40 #i‡
deföed
(
__CYGWIN__
)

41 #i‡
deföed
(
NCURSES_DLL
)

42 #i‡
deföed
(
NCURSES_STATIC
)

43 #unde‡
NCURSES_STATIC


46 #unde‡
NCURSES_IMPEXP


47 #unde‡
NCURSES_API


48 #unde‡
NCURSES_EXPORT


49 #unde‡
NCURSES_EXPORT_VAR


50 #i‡
deföed
(
NCURSES_DLL
)

52 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

53 #ñi‡
deföed
(
NCURSES_STATIC
)

55 
	#NCURSES_IMPEXP


	)

58 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

60 
	#NCURSES_API
 
__cde˛


	)

61 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

62 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

66 #i‡!
deföed
(
NCURSES_IMPEXP
)

67 
	#NCURSES_IMPEXP


	)

69 #i‡!
deföed
(
NCURSES_API
)

70 
	#NCURSES_API


	)

72 #i‡!
deföed
(
NCURSES_EXPORT
)

73 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

75 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

76 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

	@/usr/include/netinet/in.h

19 #i‚def 
_NETINET_IN_H


20 
	#_NETINET_IN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°döt.h
>

24 
	~<sys/sockë.h
>

25 
	~<bôs/ty≥s.h
>

28 
__BEGIN_DECLS


33 
	mIPPROTO_IP
 = 0,

34 
	#IPPROTO_IP
 
IPPROTO_IP


	)

35 
	mIPPROTO_HOPOPTS
 = 0,

36 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

37 
	mIPPROTO_ICMP
 = 1,

38 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

39 
	mIPPROTO_IGMP
 = 2,

40 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

41 
	mIPPROTO_IPIP
 = 4,

42 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

43 
	mIPPROTO_TCP
 = 6,

44 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

45 
	mIPPROTO_EGP
 = 8,

46 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

47 
	mIPPROTO_PUP
 = 12,

48 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

49 
	mIPPROTO_UDP
 = 17,

50 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

51 
	mIPPROTO_IDP
 = 22,

52 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

53 
	mIPPROTO_TP
 = 29,

54 
	#IPPROTO_TP
 
IPPROTO_TP


	)

55 
	mIPPROTO_IPV6
 = 41,

56 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

57 
	mIPPROTO_ROUTING
 = 43,

58 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

59 
	mIPPROTO_FRAGMENT
 = 44,

60 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

61 
	mIPPROTO_RSVP
 = 46,

62 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

63 
	mIPPROTO_GRE
 = 47,

64 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

65 
	mIPPROTO_ESP
 = 50,

66 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

67 
	mIPPROTO_AH
 = 51,

68 
	#IPPROTO_AH
 
IPPROTO_AH


	)

69 
	mIPPROTO_ICMPV6
 = 58,

70 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

71 
	mIPPROTO_NONE
 = 59,

72 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

73 
	mIPPROTO_DSTOPTS
 = 60,

74 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

75 
	mIPPROTO_MTP
 = 92,

76 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

77 
	mIPPROTO_ENCAP
 = 98,

78 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

79 
	mIPPROTO_PIM
 = 103,

80 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

81 
	mIPPROTO_COMP
 = 108,

82 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

83 
	mIPPROTO_SCTP
 = 132,

84 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

85 
	mIPPROTO_RAW
 = 255,

86 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

87 
	mIPPROTO_MAX


92 
uöt16_t
 
	tö_p‹t_t
;

97 
	mIPPORT_ECHO
 = 7,

98 
	mIPPORT_DISCARD
 = 9,

99 
	mIPPORT_SYSTAT
 = 11,

100 
	mIPPORT_DAYTIME
 = 13,

101 
	mIPPORT_NETSTAT
 = 15,

102 
	mIPPORT_FTP
 = 21,

103 
	mIPPORT_TELNET
 = 23,

104 
	mIPPORT_SMTP
 = 25,

105 
	mIPPORT_TIMESERVER
 = 37,

106 
	mIPPORT_NAMESERVER
 = 42,

107 
	mIPPORT_WHOIS
 = 43,

108 
	mIPPORT_MTP
 = 57,

110 
	mIPPORT_TFTP
 = 69,

111 
	mIPPORT_RJE
 = 77,

112 
	mIPPORT_FINGER
 = 79,

113 
	mIPPORT_TTYLINK
 = 87,

114 
	mIPPORT_SUPDUP
 = 95,

117 
	mIPPORT_EXECSERVER
 = 512,

118 
	mIPPORT_LOGINSERVER
 = 513,

119 
	mIPPORT_CMDSERVER
 = 514,

120 
	mIPPORT_EFSSERVER
 = 520,

123 
	mIPPORT_BIFFUDP
 = 512,

124 
	mIPPORT_WHOSERVER
 = 513,

125 
	mIPPORT_ROUTESERVER
 = 520,

128 
	mIPPORT_RESERVED
 = 1024,

131 
	mIPPORT_USERRESERVED
 = 5000

136 
uöt32_t
 
	tö_addr_t
;

137 
	sö_addr


139 
ö_addr_t
 
	ms_addr
;

148 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

149 
	#IN_CLASSA_NET
 0xff000000

	)

150 
	#IN_CLASSA_NSHIFT
 24

	)

151 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

152 
	#IN_CLASSA_MAX
 128

	)

154 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

155 
	#IN_CLASSB_NET
 0xffff0000

	)

156 
	#IN_CLASSB_NSHIFT
 16

	)

157 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

158 
	#IN_CLASSB_MAX
 65536

	)

160 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

161 
	#IN_CLASSC_NET
 0xffffff00

	)

162 
	#IN_CLASSC_NSHIFT
 8

	)

163 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

165 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

166 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

168 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

169 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

172 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

174 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

176 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

179 
	#IN_LOOPBACKNET
 127

	)

181 #i‚de‡
INADDR_LOOPBACK


182 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

186 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

187 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

188 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

189 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

193 
	sö6_addr


197 
uöt8_t
 
	mu6_addr8
[16];

198 
uöt16_t
 
	mu6_addr16
[8];

199 
uöt32_t
 
	mu6_addr32
[4];

200 } 
	mö6_u
;

201 
	#s6_addr
 
ö6_u
.
u6_addr8


	)

202 
	#s6_addr16
 
ö6_u
.
u6_addr16


	)

203 
	#s6_addr32
 
ö6_u
.
u6_addr32


	)

206 c⁄° 
ö6_addr
 
ö6addr_™y
;

207 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

208 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

209 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

211 
	#INET_ADDRSTRLEN
 16

	)

212 
	#INET6_ADDRSTRLEN
 46

	)

215 
	~<bôs/sockë.h
>

219 
	ssockaddr_ö


221 
__SOCKADDR_COMMON
 (
sö_
);

222 
ö_p‹t_t
 
	msö_p‹t
;

223 
ö_addr
 
	msö_addr
;

226 
	msö_zîo
[ (
sockaddr
) -

227 
__SOCKADDR_COMMON_SIZE
 -

228  (
ö_p‹t_t
) -

229  (
ö_addr
)];

233 
	ssockaddr_ö6


235 
__SOCKADDR_COMMON
 (
sö6_
);

236 
ö_p‹t_t
 
	msö6_p‹t
;

237 
uöt32_t
 
	msö6_Êowöfo
;

238 
ö6_addr
 
	msö6_addr
;

239 
uöt32_t
 
	msö6_sc›e_id
;

244 
	sù_mªq


247 
ö_addr
 
	mimr_mu…üddr
;

250 
ö_addr
 
	mimr_öãrÁ˚
;

253 
	sù_mªq_sour˚


256 
ö_addr
 
	mimr_mu…üddr
;

259 
ö_addr
 
	mimr_öãrÁ˚
;

262 
ö_addr
 
	mimr_sour˚addr
;

266 
	sùv6_mªq


269 
ö6_addr
 
	mùv6mr_mu…üddr
;

272 
	mùv6mr_öãrÁ˚
;

277 
	sgroup_ªq


280 
uöt32_t
 
	mgr_öãrÁ˚
;

283 
sockaddr_°‹age
 
	mgr_group
;

286 
	sgroup_sour˚_ªq


289 
uöt32_t
 
	mg§_öãrÁ˚
;

292 
sockaddr_°‹age
 
	mg§_group
;

295 
sockaddr_°‹age
 
	mg§_sour˚
;

300 
	sù_msfûãr


303 
ö_addr
 
	mimsf_mu…üddr
;

306 
ö_addr
 
	mimsf_öãrÁ˚
;

309 
uöt32_t
 
	mimsf_fmode
;

312 
uöt32_t
 
	mimsf_num§c
;

314 
ö_addr
 
	mimsf_¶i°
[1];

317 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

318 -  (
ö_addr
) \

319 + (
num§c
Ë*  (
ö_addr
))

	)

321 
	sgroup_fûãr


324 
uöt32_t
 
	mgf_öãrÁ˚
;

327 
sockaddr_°‹age
 
	mgf_group
;

330 
uöt32_t
 
	mgf_fmode
;

333 
uöt32_t
 
	mgf_num§c
;

335 
sockaddr_°‹age
 
	mgf_¶i°
[1];

338 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

339 -  (
sockaddr_°‹age
) \

340 + ((
num§c
) \

341 *  (
sockaddr_°‹age
)))

	)

345 
	~<bôs/ö.h
>

354 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

355 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

356 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

357 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

358 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

359 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

360 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

362 
	~<ídün.h
>

365 
	~<bôs/byãsw≠.h
>

367 #ifde‡
__OPTIMIZE__


371 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


374 
	#¡ohl
(
x
Ë(x)

	)

375 
	#¡ohs
(
x
Ë(x)

	)

376 
	#ht⁄l
(
x
Ë(x)

	)

377 
	#ht⁄s
(
x
Ë(x)

	)

379 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


380 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

381 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

382 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

383 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

388 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

389 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

390 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

391 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

392 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

394 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

395 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

396 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

397 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

398 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

400 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

402 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

403 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

404 =
	`ht⁄l
 (0x„800000))

	)

406 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

407 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

408 =
	`ht⁄l
 (0x„c00000))

	)

410 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

411 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

412 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

413 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

415 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

416 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

417 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

418 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

419 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

421 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

425 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

428 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

431 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

432 
__THROW
;

435 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

436 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

437 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

439 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

440 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

441 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

443 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

444 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

445 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

447 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

448 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

449 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

451 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

452 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

453 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

456 
	sö6_pktöfo


458 
ö6_addr
 
ùi6_addr
;

459 
ùi6_ifödex
;

463 #ifde‡
__USE_GNU


465 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
Ë
__THROW
;

466 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

467 
__ty≥
Ë
__THROW
;

468 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

469 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

470 
__∂usy
Ë
__THROW
;

471 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

472 
__mu…x
, 
__∂usy
Ë
__THROW
;

473 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

474 
uöt8_t
 **
__çåp
Ë
__THROW
;

475 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

476 
uöt8_t
 **
__çåp
, 
__ty≥
Ë
__THROW
;

482 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

483 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

484 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

485 
__THROW
;

488 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

489 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

490 
uöt32_t
 
__num§c
,

491 
__c⁄°
 
ö_addr
 *
__¶i°
)

492 
__THROW
;

496 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

497 
__c⁄°
 
sockaddr
 *
__group
,

498 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

499 
uöt32_t
 *
__num§c
,

500 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

503 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

504 
__c⁄°
 
sockaddr
 *
__group
,

505 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

506 
uöt32_t
 
__num§c
,

507 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

510 
__END_DECLS


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 
	$sched_yõld
 (Ë
__THROW
;

57 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

66 #ifde‡
__USE_GNU


68 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

69 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET
 (˝u, cpu£ç)

	)

70 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR
 (˝u, cpu£ç)

	)

71 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET
 (˝u, cpu£ç)

	)

72 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO
 (˝u£ç)

	)

76 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

77 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

80 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

81 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


346 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

348 
	~<bôs/sig°ack.h
>

349 #ifde‡
__USE_XOPEN


351 
	~<sys/uc⁄ãxt.h
>

357 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

358 
__THROW
 
__©åibuã_dïªˇãd__
;

362 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

363 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

367 #ifde‡
__USE_XOPEN_EXTENDED


371 
	$sighﬁd
 (
__sig
Ë
__THROW
;

374 
	$sigªl£
 (
__sig
Ë
__THROW
;

377 
	$sigign‹e
 (
__sig
Ë
__THROW
;

380 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

383 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


386 
	~<bôs/±hªadty≥s.h
>

387 
	~<bôs/sigthªad.h
>

394 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

396 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

400 
__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__GLIBC_HAVE_LONG_LONG


167 
__exãnsi⁄__
 
	töt64_t
;

172 
	tu_öt8_t
;

173 
	tu_öt16_t
;

174 
	tu_öt32_t
;

175 #i‡
__GLIBC_HAVE_LONG_LONG


176 
__exãnsi⁄__
 
	tu_öt64_t
;

179 
	tªgi°î_t
;

184 
	#__ötN_t
(
N
, 
MODE
) \

185 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

186 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

187 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 #i‚de‡
	t__öt8_t_deföed


190 
	t__öt8_t_deföed


	)

191 
	t__ötN_t
 (8, 
	t__QI__
);

192 
__ötN_t
 (16, 
__HI__
);

193 
__ötN_t
 (32, 
__SI__
);

194 
__ötN_t
 (64, 
__DI__
);

197 
__u_ötN_t
 (8, 
__QI__
);

198 
__u_ötN_t
 (16, 
__HI__
);

199 
__u_ötN_t
 (32, 
__SI__
);

200 
__u_ötN_t
 (64, 
__DI__
);

202 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

208 
	#__BIT_TYPES_DEFINED__
 1

	)

211 #ifdef 
__USE_BSD


213 
	~<ídün.h
>

216 
	~<sys/£À˘.h
>

219 
	~<sys/sysma¸os.h
>

223 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


224 
__blksize_t
 
	tblksize_t
;

225 
	#__blksize_t_deföed


	)

229 #i‚de‡
__USE_FILE_OFFSET64


230 #i‚de‡
__blk˙t_t_deföed


231 
__blk˙t_t
 
	tblk˙t_t
;

232 
	#__blk˙t_t_deföed


	)

234 #i‚de‡
__fsblk˙t_t_deföed


235 
__fsblk˙t_t
 
	tfsblk˙t_t
;

236 
	#__fsblk˙t_t_deföed


	)

238 #i‚de‡
__fsfû˙t_t_deföed


239 
__fsfû˙t_t
 
	tfsfû˙t_t
;

240 
	#__fsfû˙t_t_deföed


	)

243 #i‚de‡
__blk˙t_t_deföed


244 
__blk˙t64_t
 
	tblk˙t_t
;

245 
	#__blk˙t_t_deföed


	)

247 #i‚de‡
__fsblk˙t_t_deföed


248 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

249 
	#__fsblk˙t_t_deföed


	)

251 #i‚de‡
__fsfû˙t_t_deföed


252 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

253 
	#__fsfû˙t_t_deföed


	)

257 #ifde‡
__USE_LARGEFILE64


258 
__blk˙t64_t
 
	tblk˙t64_t
;

259 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

260 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

265 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


266 
	~<bôs/±hªadty≥s.h
>

269 
	g__END_DECLS


	@/usr/include/unctrl.h

44 #i‚de‡
NCURSES_UNCTRL_H_ö˛


45 
	#NCURSES_UNCTRL_H_ö˛
 1

	)

47 #unde‡
NCURSES_VERSION


48 
	#NCURSES_VERSION
 "5.5"

	)

50 #ifde‡
__˝lu•lus


54 
	~<cur£s.h
>

56 #unde‡
un˘æ


57 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
un˘æ
 (
chty≥
);

59 #ifde‡
__˝lu•lus


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‚de‡
__√ed_mb°©e_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

43 
	#__√ed_size_t


	)

44 
	#__√ed_wch¨_t


	)

45 
	#__√ed_NULL


	)

47 
	#__√ed_wöt_t


	)

48 
	~<°ddef.h
>

50 
	~<bôs/wch¨.h
>

54 #i‚de‡
_WINT_T


59 
	#_WINT_T


	)

60 
	twöt_t
;

64 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

65 && 
deföed
 
__WINT_TYPE__


66 
__BEGIN_NAMESPACE_STD


67 
__WINT_TYPE__
 
	twöt_t
;

68 
	g__END_NAMESPACE_STD


73 #i‚de‡
__mb°©e_t_deföed


74 
	#__mb°©e_t_deföed
 1

	)

78 
	m__cou¡
;

81 
wöt_t
 
	m__wch
;

82 
	m__wchb
[4];

83 } 
	m__vÆue
;

84 } 
	t__mb°©e_t
;

86 #unde‡
__√ed_mb°©e_t


91 #ifde‡
_WCHAR_H


93 
__BEGIN_NAMESPACE_C99


95 
__mb°©e_t
 
	tmb°©e_t
;

96 
	g__END_NAMESPACE_C99


97 #ifde‡
__USE_GNU


98 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

101 #i‚de‡
WCHAR_MIN


103 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

104 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

107 #i‚de‡
WEOF


108 
	#WEOF
 (0xffffffffu)

	)

113 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


114 
	~<w˘y≥.h
>

118 
__BEGIN_DECLS


120 
__BEGIN_NAMESPACE_STD


123 
tm
;

127 
	$__USING_NAMESPACE_STD
(
tm
)

128 
__END_NAMESPACE_STD


131 
__BEGIN_NAMESPACE_C99


133 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

134 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

136 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

137 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

138 
__THROW
;

141 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

142 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

144 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
;

149 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

150 
__THROW
 
__©åibuã_puª__
;

152 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

153 
__THROW
 
__©åibuã_puª__
;

154 
__END_NAMESPACE_C99


156 #ifde‡
__USE_GNU


158 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

161 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

162 
size_t
 
__n
Ë
__THROW
;

166 
	~<xloˇÀ.h
>

168 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

169 
__loˇÀ_t
 
__loc
Ë
__THROW
;

171 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

172 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

175 
__BEGIN_NAMESPACE_C99


178 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

182 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

184 
__END_NAMESPACE_C99


186 #ifde‡
__USE_GNU


192 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

193 
__loˇÀ_t
 
__loc
Ë
__THROW
;

198 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

199 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

202 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

205 
__BEGIN_NAMESPACE_C99


207 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

208 
__THROW
 
__©åibuã_puª__
;

210 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

211 
__THROW
 
__©åibuã_puª__
;

212 
__END_NAMESPACE_C99


214 #ifde‡
__USE_GNU


217 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

218 
__THROW
 
__©åibuã_puª__
;

221 
__BEGIN_NAMESPACE_C99


224 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

225 
__THROW
 
__©åibuã_puª__
;

228 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

229 
__THROW
 
__©åibuã_puª__
;

231 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

232 
__THROW
 
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

235 
__THROW
 
__©åibuã_puª__
;

238 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

240 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

243 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

244 
__END_NAMESPACE_C99


246 #ifde‡
__USE_XOPEN


248 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

249 
__THROW
 
__©åibuã_puª__
;

252 #ifde‡
__USE_GNU


254 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

255 
__THROW
 
__©åibuã_puª__
;

259 
__BEGIN_NAMESPACE_C99


261 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

262 
__THROW
 
__©åibuã_puª__
;

265 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

266 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

267 
__THROW
 
__©åibuã_puª__
;

270 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

271 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

275 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

276 
__THROW
;

279 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

280 
__END_NAMESPACE_C99


282 #ifde‡
__USE_GNU


285 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

286 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

287 
__THROW
;

291 
__BEGIN_NAMESPACE_C99


294 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

298 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

302 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

306 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

307 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

308 
mb°©e_t
 *
__p
Ë
__THROW
;

311 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

312 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

315 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

317 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

319 
__END_NAMESPACE_C99


321 #ifde‡
__USE_EXTERN_INLINES


323 
__ölöe
 
size_t


324 
	`__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

325 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

326 {  (
__ps
 !
NULL


327 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

330 
__BEGIN_NAMESPACE_C99


333 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

334 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

335 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

339 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

340 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

341 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

342 
__END_NAMESPACE_C99


345 #ifdef 
__USE_GNU


348 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

349 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

350 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

354 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

355 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

356 
size_t
 
__nwc
, size_à
__Àn
,

357 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

362 #ifde‡
__USE_XOPEN


364 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

368 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

372 
__BEGIN_NAMESPACE_C99


375 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

376 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

378 #ifde‡
__USE_ISOC99


380 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

381 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

382 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

383 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

389 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

390 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

394 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

395 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

396 
__THROW
;

398 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

401 
__exãnsi⁄__


402 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

403 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

404 
__THROW
;

408 
__exãnsi⁄__


409 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

410 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

411 
__ba£
Ë
__THROW
;

413 
__END_NAMESPACE_C99


415 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


418 
__exãnsi⁄__


419 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

420 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

421 
__THROW
;

425 
__exãnsi⁄__


426 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

427 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

428 
__ba£
Ë
__THROW
;

431 #ifde‡
__USE_GNU


445 
	~<xloˇÀ.h
>

449 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

450 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

451 
__loˇÀ_t
 
__loc
Ë
__THROW
;

453 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

455 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

457 
__exãnsi⁄__


458 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

459 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

460 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

462 
__exãnsi⁄__


463 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

464 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

465 
__ba£
, 
__loˇÀ_t
 
__loc
)

466 
__THROW
;

468 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

470 
__THROW
;

472 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

473 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

474 
__THROW
;

476 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

478 
__loˇÀ_t
 
__loc
Ë
__THROW
;

484 
	$__wc°od_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

485 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

486 
__THROW
;

487 
	$__wc°of_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

489 
__THROW
;

490 
	$__wc°ﬁd_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__group
Ë
__THROW
;

494 #i‚de‡
__wc°ﬁ_öã∫Æ_deföed


495 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

496 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

497 
__ba£
, 
__group
Ë
__THROW
;

498 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

500 #i‚de‡
__wc°oul_öã∫Æ_deföed


501 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈t
,

502 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

503 
__ba£
, 
__group
Ë
__THROW
;

504 
	#__wc°oul_öã∫Æ_deföed
 1

	)

506 #i‚de‡
__wc°ﬁl_öã∫Æ_deföed


507 
__exãnsi⁄__


508 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

509 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

510 
__ba£
, 
__group
Ë
__THROW
;

511 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

513 #i‚de‡
__wc°ouŒ_öã∫Æ_deföed


514 
__exãnsi⁄__


515 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *

516 
__ª°ri˘
 
__≈å
,

517 
wch¨_t
 **

518 
__ª°ri˘
 
__íd±r
,

519 
__ba£
,

520 
__group
Ë
__THROW
;

521 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

525 #i‡
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

527 
__BEGIN_NAMESPACE_C99


529 
__ölöe
 

530 
	`__NTH
 (
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

532 {  
	`__wc°od_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

533 
__ölöe
 

534 
__NTH
 (
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

536 {  
	`__wc°ﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

537 
__ölöe
 

538 
__NTH
 (
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

539 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

540 {  
	`__wc°oul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

541 
__END_NAMESPACE_C99


543 #ifde‡
__USE_GNU


544 
__ölöe
 

545 
__NTH
 (
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

546 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

547 {  
	`__wc°of_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

548 
__ölöe
 

549 
__NTH
 (
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

551 {  
	`__wc°ﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

554 
__exãnsi⁄__


555 
__ölöe
 

556 
__NTH
 (
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

558 {  
	`__wc°ﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

559 
__exãnsi⁄__


560 
__ölöe
 

561 
__NTH
 (
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

562 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

563 {  
	`__wc°ouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

568 #ifdef 
__USE_GNU


571 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

575 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

576 
__THROW
;

581 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_C99


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 
__END_NAMESPACE_C99


650 #ifde‡
__USE_ISOC99


651 
__BEGIN_NAMESPACE_C99


657 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

658 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

659 
__gnuc_va_li°
 
__¨g
)

665 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

666 
__gnuc_va_li°
 
__¨g
)

669 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

671 
__gnuc_va_li°
 
__¨g
)

672 
__THROW
 ;

674 
__END_NAMESPACE_C99


678 
__BEGIN_NAMESPACE_C99


683 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

684 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

690 
wöt_t
 
	`gëwch¨
 ();

697 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

698 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

704 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

712 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

713 
__FILE
 *
__ª°ri˘
 
__°ªam
);

719 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

720 
__FILE
 *
__ª°ri˘
 
__°ªam
);

727 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

728 
__END_NAMESPACE_C99


731 #ifde‡
__USE_GNU


739 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

740 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

748 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

756 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

765 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

775 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

776 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
__BEGIN_NAMESPACE_C99


793 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

794 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

795 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

796 
__END_NAMESPACE_C99


798 #ifde‡
__USE_GNU


799 
	~<xloˇÀ.h
>

803 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

804 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

805 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

806 
__loˇÀ_t
 
__loc
Ë
__THROW
;

815 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


816 
	#__√ed_iswxxx


	)

817 
	~<w˘y≥.h
>

820 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 
	#__√ed_wch¨_t


	)

12 
	#__√ed_wöt_t


	)

13 
	#__√ed_NULL


	)

14 
	~<°ddef.h
>

15 #i‚de‡
_WINT_T


20 
	#_WINT_T


	)

21 
	twöt_t
;

23 
	#__√ed_mb°©e_t


	)

24 
	~<wch¨.h
>

25 
	#_G_size_t
 
size_t


	)

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 
	#_G_ssize_t
 
__ssize_t


	)

37 
	#_G_off_t
 
__off_t


	)

38 
	#_G_off64_t
 
__off64_t


	)

39 
	#_G_pid_t
 
__pid_t


	)

40 
	#_G_uid_t
 
__uid_t


	)

41 
	#_G_wch¨_t
 
wch¨_t


	)

42 
	#_G_wöt_t
 
wöt_t


	)

43 
	#_G_°©64
 
°©64


	)

44 
	~<gc⁄v.h
>

47 
__gc⁄v_öfo
 
	m__cd
;

50 
__gc⁄v_öfo
 
	m__cd
;

51 
__gc⁄v_°ï_d©a
 
	m__d©a
;

52 } 
	m__comböed
;

53 } 
	t_G_ic⁄v_t
;

55 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

57 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

58 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

60 
	#_G_HAVE_BOOL
 1

	)

64 
	#_G_HAVE_ATEXIT
 1

	)

65 
	#_G_HAVE_SYS_CDEFS
 1

	)

66 
	#_G_HAVE_SYS_WAIT
 1

	)

67 
	#_G_NEED_STDARG_H
 1

	)

68 
	#_G_va_li°
 
__gnuc_va_li°


	)

70 
	#_G_HAVE_PRINTF_FP
 1

	)

71 
	#_G_HAVE_MMAP
 1

	)

72 
	#_G_HAVE_MREMAP
 1

	)

73 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

74 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

75 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

77 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

79 
	#_G_OPEN64
 
__›í64


	)

80 
	#_G_LSEEK64
 
__l£ek64


	)

81 
	#_G_MMAP64
 
__mm≠64


	)

82 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

85 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

87 
	#_G_BUFSIZ
 8192

	)

90 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

91 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

92 
	#_G_USING_THUNKS
 1

	)

93 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

94 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

97 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


98 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

100 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/byteswap.h

20 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H


24 #i‚de‡
_BITS_BYTESWAP_H


25 
	#_BITS_BYTESWAP_H
 1

	)

28 
	#__bsw≠_c⁄°™t_16
(
x
) \

29 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

31 #ifde‡
__GNUC__


32 #i‡
__GNUC__
 >= 2

33 
	#__bsw≠_16
(
x
) \

34 (
__exãnsi⁄__
 \

35 ({ 
__v
, 
__x
 = (
x
); \

36 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

37 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

39 
	`__asm__
 ("rorw $8, %w0" \

40 : "Ù" (
__v
) \

41 : "0" (
__x
) \

43 
__v
; }))

	)

46 
	#__bsw≠_16
(
x
) \

47 (
__exãnsi⁄__
 \

48 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

51 
__ölöe
 

52 
	$__bsw≠_16
 (
__bsx
)

54  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

55 
	}
}

59 
	#__bsw≠_c⁄°™t_32
(
x
) \

60 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

61 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

63 #ifde‡
__GNUC__


64 #i‡
__GNUC__
 >= 2

67 #i‡!
deföed
 
__i486__
 && !deföed 
__≥¡ium__
 && !deföed 
__≥¡ium¥o__
 \

68 && !
deföed
 
	g__≥¡ium4__


69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("rorw $8, %w0;" \

78 : "Ù" (
__v
) \

79 : "0" (
__x
) \

81 
__v
; }))

	)

83 
	#__bsw≠_32
(
x
) \

84 (
__exãnsi⁄__
 \

85 ({ 
__v
, 
__x
 = (
x
); \

86 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

87 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

89 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 
__ölöe
 

99 
	$__bsw≠_32
 (
__bsx
)

101  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

102 
	}
}

106 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

108 
	#__bsw≠_c⁄°™t_64
(
x
) \

109 ((((
x
) & 0xff00000000000000ull) >> 56) \

110 | (((
x
) & 0x00ff000000000000ull) >> 40) \

111 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

112 | (((
x
) & 0x000000ff00000000ull) >> 8) \

113 | (((
x
) & 0x00000000ff000000ull) << 8) \

114 | (((
x
) & 0x0000000000ff0000ull) << 24) \

115 | (((
x
) & 0x000000000000ff00ull) << 40) \

116 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

118 
	#__bsw≠_64
(
x
) \

119 (
__exãnsi⁄__
 \

120 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

121 
__l
[2]; } 
__w
, 
__r
; \

122 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

123 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

126 
__w
.
__Œ
 = (
x
); \

127 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

128 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

130 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 
	#MCAST_JOIN_GROUP
 42

	)

47 
	#MCAST_BLOCK_SOURCE
 43

	)

48 
	#MCAST_UNBLOCK_SOURCE
 44

	)

49 
	#MCAST_LEAVE_GROUP
 45

	)

50 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

51 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

52 
	#MCAST_MSFILTER
 48

	)

54 
	#MCAST_EXCLUDE
 0

	)

55 
	#MCAST_INCLUDE
 1

	)

57 
	#IP_ROUTER_ALERT
 5

	)

58 
	#IP_PKTINFO
 8

	)

59 
	#IP_PKTOPTIONS
 9

	)

60 
	#IP_PMTUDISC
 10

	)

61 
	#IP_MTU_DISCOVER
 10

	)

62 
	#IP_RECVERR
 11

	)

63 
	#IP_RECVTTL
 12

	)

64 
	#IP_RECVTOS
 13

	)

68 
	#IP_PMTUDISC_DONT
 0

	)

69 
	#IP_PMTUDISC_WANT
 1

	)

70 
	#IP_PMTUDISC_DO
 2

	)

73 
	#SOL_IP
 0

	)

75 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

76 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

77 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 
	sù_›ts


84 
ö_addr
 
	mù_d°
;

85 
	mù_›ts
[40];

89 
	sù_mªqn


91 
ö_addr
 
	mimr_mu…üddr
;

92 
ö_addr
 
	mimr_addªss
;

93 
	mimr_ifödex
;

97 
	sö_pktöfo


99 
	mùi_ifödex
;

100 
ö_addr
 
	mùi_•ec_d°
;

101 
ö_addr
 
	mùi_addr
;

107 
	#IPV6_ADDRFORM
 1

	)

108 
	#IPV6_PKTINFO
 2

	)

109 
	#IPV6_HOPOPTS
 3

	)

110 
	#IPV6_DSTOPTS
 4

	)

111 
	#IPV6_RTHDR
 5

	)

112 
	#IPV6_PKTOPTIONS
 6

	)

113 
	#IPV6_CHECKSUM
 7

	)

114 
	#IPV6_HOPLIMIT
 8

	)

116 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

118 
	#IPV6_NEXTHOP
 9

	)

119 
	#IPV6_AUTHHDR
 10

	)

120 
	#IPV6_UNICAST_HOPS
 16

	)

121 
	#IPV6_MULTICAST_IF
 17

	)

122 
	#IPV6_MULTICAST_HOPS
 18

	)

123 
	#IPV6_MULTICAST_LOOP
 19

	)

124 
	#IPV6_JOIN_GROUP
 20

	)

125 
	#IPV6_LEAVE_GROUP
 21

	)

126 
	#IPV6_ROUTER_ALERT
 22

	)

127 
	#IPV6_MTU_DISCOVER
 23

	)

128 
	#IPV6_MTU
 24

	)

129 
	#IPV6_RECVERR
 25

	)

130 
	#IPV6_V6ONLY
 26

	)

131 
	#IPV6_JOIN_ANYCAST
 27

	)

132 
	#IPV6_LEAVE_ANYCAST
 28

	)

133 
	#IPV6_IPSEC_POLICY
 34

	)

134 
	#IPV6_XFRM_POLICY
 35

	)

137 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

138 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

139 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

140 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

143 
	#IPV6_PMTUDISC_DONT
 0

	)

144 
	#IPV6_PMTUDISC_WANT
 1

	)

145 
	#IPV6_PMTUDISC_DO
 2

	)

148 
	#SOL_IPV6
 41

	)

149 
	#SOL_ICMPV6
 58

	)

152 
	#IPV6_RTHDR_LOOSE
 0

	)

153 
	#IPV6_RTHDR_STRICT
 1

	)

155 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_MISC


35 
	#CSIGNAL
 0x000000f‡

	)

36 
	#CLONE_VM
 0x00000100

	)

37 
	#CLONE_FS
 0x00000200

	)

38 
	#CLONE_FILES
 0x00000400

	)

39 
	#CLONE_SIGHAND
 0x00000800

	)

40 
	#CLONE_PTRACE
 0x00002000

	)

41 
	#CLONE_VFORK
 0x00004000

	)

43 
	#CLONE_PARENT
 0x00008000

	)

45 
	#CLONE_THREAD
 0x00010000

	)

46 
	#CLONE_NEWNS
 0x00020000

	)

47 
	#CLONE_SYSVSEM
 0x00040000

	)

48 
	#CLONE_SETTLS
 0x00080000

	)

49 
	#CLONE_PARENT_SETTID
 0x00100000

	)

51 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

53 
	#CLONE_DETACHED
 0x00400000

	)

54 
	#CLONE_UNTRACED
 0x00800000

	)

56 
	#CLONE_CHILD_SETTID
 0x01000000

	)

58 
	#CLONE_STOPPED
 0x02000000

	)

62 
	ssched_∑øm


64 
	m__sched_¥i‹ôy
;

67 
	g__BEGIN_DECLS


70 #ifde‡
__USE_MISC


71 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

72 
__Êags
, *
__¨g
Ë
__THROW
;

75 
__END_DECLS


79 #i‡!
deföed
 
__deföed_sched∑øm
 \

80 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

81 
	#__deföed_sched∑øm
 1

	)

83 
	s__sched_∑øm


85 
__sched_¥i‹ôy
;

87 #unde‡
__√ed_sched∑øm


91 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


92 
	#__˝u_£t_t_deföed


	)

94 
	#__CPU_SETSIZE
 1024

	)

95 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

98 
	t__˝u_mask
;

101 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

102 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

107 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

108 } 
	t˝u_£t_t
;

111 
	#__CPU_ZERO
(
˝u£ç
) \

113 
__i
; \

114 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

115 
__i
 = 0; __ò<  (
˝u_£t_t
Ë/  (
__˝u_mask
); ++__i) \

116 
__¨r
->
__bôs
[
__i
] = 0; \

117 
	}
} 0)

	)

118 
	#__CPU_SET
(
˝u
, 
˝u£ç
) \

119 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] |
	`__CPUMASK
 (˝u))

	)

120 
	#__CPU_CLR
(
˝u
, 
˝u£ç
) \

121 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] &~
	`__CPUMASK
 (˝u))

	)

122 
	#__CPU_ISSET
(
˝u
, 
˝u£ç
) \

123 (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] & 
	`__CPUMASK
 (˝u)Ë!0)

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/socket.h

20 #i‚de‡
__BITS_SOCKET_H


21 
	#__BITS_SOCKET_H


	)

23 #i‡!
deföed
 
_SYS_SOCKET_H
 && !deföed 
_NETINET_IN_H


27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<limôs.h
>

32 
	~<sys/ty≥s.h
>

35 #i‚de‡
__sockÀn_t_deföed


36 
__sockÀn_t
 
	tsockÀn_t
;

37 
	#__sockÀn_t_deföed


	)

41 
	e__sockë_ty≥


43 
	mSOCK_STREAM
 = 1,

45 
	#SOCK_STREAM
 
SOCK_STREAM


	)

46 
	mSOCK_DGRAM
 = 2,

48 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

49 
	mSOCK_RAW
 = 3,

50 
	#SOCK_RAW
 
SOCK_RAW


	)

51 
	mSOCK_RDM
 = 4,

52 
	#SOCK_RDM
 
SOCK_RDM


	)

53 
	mSOCK_SEQPACKET
 = 5,

55 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

56 
	mSOCK_PACKET
 = 10

59 
	#SOCK_PACKET
 
SOCK_PACKET


	)

63 
	#PF_UNSPEC
 0

	)

64 
	#PF_LOCAL
 1

	)

65 
	#PF_UNIX
 
PF_LOCAL


	)

66 
	#PF_FILE
 
PF_LOCAL


	)

67 
	#PF_INET
 2

	)

68 
	#PF_AX25
 3

	)

69 
	#PF_IPX
 4

	)

70 
	#PF_APPLETALK
 5

	)

71 
	#PF_NETROM
 6

	)

72 
	#PF_BRIDGE
 7

	)

73 
	#PF_ATMPVC
 8

	)

74 
	#PF_X25
 9

	)

75 
	#PF_INET6
 10

	)

76 
	#PF_ROSE
 11

	)

77 
	#PF_DEC√t
 12

	)

78 
	#PF_NETBEUI
 13

	)

79 
	#PF_SECURITY
 14

	)

80 
	#PF_KEY
 15

	)

81 
	#PF_NETLINK
 16

	)

82 
	#PF_ROUTE
 
PF_NETLINK


	)

83 
	#PF_PACKET
 17

	)

84 
	#PF_ASH
 18

	)

85 
	#PF_ECONET
 19

	)

86 
	#PF_ATMSVC
 20

	)

87 
	#PF_SNA
 22

	)

88 
	#PF_IRDA
 23

	)

89 
	#PF_PPPOX
 24

	)

90 
	#PF_WANPIPE
 25

	)

91 
	#PF_BLUETOOTH
 31

	)

92 
	#PF_MAX
 32

	)

95 
	#AF_UNSPEC
 
PF_UNSPEC


	)

96 
	#AF_LOCAL
 
PF_LOCAL


	)

97 
	#AF_UNIX
 
PF_UNIX


	)

98 
	#AF_FILE
 
PF_FILE


	)

99 
	#AF_INET
 
PF_INET


	)

100 
	#AF_AX25
 
PF_AX25


	)

101 
	#AF_IPX
 
PF_IPX


	)

102 
	#AF_APPLETALK
 
PF_APPLETALK


	)

103 
	#AF_NETROM
 
PF_NETROM


	)

104 
	#AF_BRIDGE
 
PF_BRIDGE


	)

105 
	#AF_ATMPVC
 
PF_ATMPVC


	)

106 
	#AF_X25
 
PF_X25


	)

107 
	#AF_INET6
 
PF_INET6


	)

108 
	#AF_ROSE
 
PF_ROSE


	)

109 
	#AF_DEC√t
 
PF_DEC√t


	)

110 
	#AF_NETBEUI
 
PF_NETBEUI


	)

111 
	#AF_SECURITY
 
PF_SECURITY


	)

112 
	#AF_KEY
 
PF_KEY


	)

113 
	#AF_NETLINK
 
PF_NETLINK


	)

114 
	#AF_ROUTE
 
PF_ROUTE


	)

115 
	#AF_PACKET
 
PF_PACKET


	)

116 
	#AF_ASH
 
PF_ASH


	)

117 
	#AF_ECONET
 
PF_ECONET


	)

118 
	#AF_ATMSVC
 
PF_ATMSVC


	)

119 
	#AF_SNA
 
PF_SNA


	)

120 
	#AF_IRDA
 
PF_IRDA


	)

121 
	#AF_PPPOX
 
PF_PPPOX


	)

122 
	#AF_WANPIPE
 
PF_WANPIPE


	)

123 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

124 
	#AF_MAX
 
PF_MAX


	)

130 
	#SOL_RAW
 255

	)

131 
	#SOL_DECNET
 261

	)

132 
	#SOL_X25
 262

	)

133 
	#SOL_PACKET
 263

	)

134 
	#SOL_ATM
 264

	)

135 
	#SOL_AAL
 265

	)

136 
	#SOL_IRDA
 266

	)

139 
	#SOMAXCONN
 128

	)

142 
	~<bôs/sockaddr.h
>

145 
	ssockaddr


147 
__SOCKADDR_COMMON
 (
ß_
);

148 
	mß_d©a
[14];

154 #i‡
ULONG_MAX
 > 0xffffffff

155 
	#__ss_Æig¡y≥
 
__uöt64_t


	)

157 
	#__ss_Æig¡y≥
 
__uöt32_t


	)

159 
	#_SS_SIZE
 128

	)

160 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

162 
	ssockaddr_°‹age


164 
__SOCKADDR_COMMON
 (
ss_
);

165 
__ss_Æig¡y≥
 
	m__ss_Æign
;

166 
	m__ss_∑ddög
[
_SS_PADSIZE
];

173 
	mMSG_OOB
 = 0x01,

174 
	#MSG_OOB
 
MSG_OOB


	)

175 
	mMSG_PEEK
 = 0x02,

176 
	#MSG_PEEK
 
MSG_PEEK


	)

177 
	mMSG_DONTROUTE
 = 0x04,

178 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

179 #ifde‡
__USE_GNU


181 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

182 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

184 
	mMSG_CTRUNC
 = 0x08,

185 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

186 
	mMSG_PROXY
 = 0x10,

187 
	#MSG_PROXY
 
MSG_PROXY


	)

188 
	mMSG_TRUNC
 = 0x20,

189 
	#MSG_TRUNC
 
MSG_TRUNC


	)

190 
	mMSG_DONTWAIT
 = 0x40,

191 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

192 
	mMSG_EOR
 = 0x80,

193 
	#MSG_EOR
 
MSG_EOR


	)

194 
	mMSG_WAITALL
 = 0x100,

195 
	#MSG_WAITALL
 
MSG_WAITALL


	)

196 
	mMSG_FIN
 = 0x200,

197 
	#MSG_FIN
 
MSG_FIN


	)

198 
	mMSG_SYN
 = 0x400,

199 
	#MSG_SYN
 
MSG_SYN


	)

200 
	mMSG_CONFIRM
 = 0x800,

201 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

202 
	mMSG_RST
 = 0x1000,

203 
	#MSG_RST
 
MSG_RST


	)

204 
	mMSG_ERRQUEUE
 = 0x2000,

205 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

206 
	mMSG_NOSIGNAL
 = 0x4000,

207 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

208 
	mMSG_MORE
 = 0x8000

209 
	#MSG_MORE
 
MSG_MORE


	)

215 
	smsghdr


217 *
	mmsg_«me
;

218 
sockÀn_t
 
	mmsg_«mñí
;

220 
iovec
 *
	mmsg_iov
;

221 
size_t
 
	mmsg_iovÀn
;

223 *
	mmsg_c⁄åﬁ
;

224 
size_t
 
	mmsg_c⁄åﬁÀn
;

226 
	mmsg_Êags
;

230 
	scmsghdr


232 
size_t
 
	mcmsg_Àn
;

234 
	mcmsg_Àvñ
;

235 
	mcmsg_ty≥
;

236 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

237 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

242 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

243 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

245 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

247 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

248 
	#CMSG_FIRSTHDR
(
mhdr
) \

249 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

250 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë
NULL
)

	)

251 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

252 & (
size_t
Ë~( (size_tË- 1))

	)

253 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

254 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

255 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

257 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

258 
cmsghdr
 *
__cmsg
Ë
__THROW
;

259 #ifde‡
__USE_EXTERN_INLINES


260 #i‚de‡
_EXTERN_INLINE


261 
	#_EXTERN_INLINE
 
__ölöe


	)

263 
_EXTERN_INLINE
 
cmsghdr
 *

264 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

266 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

270 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

271 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

272 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


273 + 
__mhdr
->
msg_c⁄åﬁÀn
)

274 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

275 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

278  
__cmsg
;

279 
	}
}

286 
SCM_RIGHTS
 = 0x01

287 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

288 #ifde‡
__USE_BSD


289 , 
SCM_CREDENTIALS
 = 0x02

290 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

296 
	su¸ed


298 
pid_t
 
	mpid
;

299 
uid_t
 
	muid
;

300 
gid_t
 
	mgid
;

304 
	~<asm/sockë.h
>

308 
	slögî


310 
	ml_⁄off
;

311 
	ml_lögî
;

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 
__S32_TYPE


	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/gnu/stubs.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_lutimes


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

6 #ifde‡
__KERNEL__


9 
	#ERESTARTSYS
 512

	)

10 
	#ERESTARTNOINTR
 513

	)

11 
	#ERESTARTNOHAND
 514

	)

12 
	#ENOIOCTLCMD
 515

	)

13 
	#ERESTART_RESTARTBLOCK
 516

	)

16 
	#EBADHANDLE
 521

	)

17 
	#ENOTSYNC
 522

	)

18 
	#EBADCOOKIE
 523

	)

19 
	#ENOTSUPP
 524

	)

20 
	#ETOOSMALL
 525

	)

21 
	#ESERVERFAULT
 526

	)

22 
	#EBADTYPE
 527

	)

23 
	#EJUKEBOX
 528

	)

24 
	#EIOCBQUEUED
 529

	)

25 
	#EIOCBRETRY
 530

	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


38 #ifde‡
__GNUC__


45 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

46 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

47 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

49 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

50 
	#__THROW
 
	`throw
 ()

	)

51 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

53 
	#__THROW


	)

54 
	#__NTH
(
f˘
Ë
	)
fct

60 
	#__ölöe


	)

62 
	#__THROW


	)

63 
	#__NTH
(
f˘
Ë
	)
fct

65 
	#__c⁄°
 c⁄°

	)

66 
	#__sig√d
 sig√d

	)

67 
	#__vﬁ©ûe
 vﬁ©ûe

	)

73 
	#__P
(
¨gs
Ë
	)
args

74 
	#__PMT
(
¨gs
Ë
	)
args

79 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

80 
	#__STRING
(
x
Ë#x

	)

83 
	#__±r_t
 *

	)

84 
	#__l⁄g_doubÀ_t
 

	)

88 #ifdef 
__˝lu•lus


89 
	#__BEGIN_DECLS
 "C" {

	)

90 
	#__END_DECLS
 }

	)

92 
	#__BEGIN_DECLS


	)

93 
	#__END_DECLS


	)

102 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


103 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

104 
	#__END_NAMESPACE_STD
 }

	)

105 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

106 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

107 
	#__END_NAMESPACE_C99
 }

	)

108 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

113 
	#__BEGIN_NAMESPACE_STD


	)

114 
	#__END_NAMESPACE_STD


	)

115 
	#__USING_NAMESPACE_STD
(
«me
)

	)

116 
	#__BEGIN_NAMESPACE_C99


	)

117 
	#__END_NAMESPACE_C99


	)

118 
	#__USING_NAMESPACE_C99
(
«me
)

	)

123 #i‚de‡
__BOUNDED_POINTERS__


124 
	#__bounded


	)

125 
	#__unbounded


	)

126 
	#__±rvÆue


	)

131 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

132 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

136 #i‡
__GNUC_PREREQ
 (2,97)

138 
	#__Êex¨r
 []

	)

140 #ifde‡
__GNUC__


141 
	#__Êex¨r
 [0]

	)

143 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

144 
	#__Êex¨r
 []

	)

147 
	#__Êex¨r
 [1]

	)

163 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

165 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

166 #ifde‡
__˝lu•lus


167 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

168 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

170 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

171 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

173 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

174 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

187 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

188 
	#__©åibuã__
(
xyz
Ë

	)

194 #i‡
__GNUC_PREREQ
 (2,96)

195 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

197 
	#__©åibuã_mÆloc__


	)

203 #i‡
__GNUC_PREREQ
 (2,96)

204 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

206 
	#__©åibuã_puª__


	)

212 #i‡
__GNUC_PREREQ
 (3,1)

213 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

214 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

216 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

217 
	#__©åibuã_noölöe__


	)

221 #i‡
__GNUC_PREREQ
 (3,2)

222 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

224 
	#__©åibuã_dïªˇãd__


	)

233 #i‡
__GNUC_PREREQ
 (2,8)

234 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

236 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

243 #i‡
__GNUC_PREREQ
 (2,97)

244 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

245 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

247 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

252 #i‡
__GNUC_PREREQ
 (3,3)

253 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

255 
	#__n⁄nuŒ
(
∑øms
)

	)

262 #i‡!
__GNUC_PREREQ
 (2,8)

263 
	#__exãnsi⁄__


	)

267 #i‡!
__GNUC_PREREQ
 (2,92)

268 
	#__ª°ri˘


	)

274 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


275 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

277 #ifde‡
__GNUC__


278 
	#__ª°ri˘_¨r


	)

280 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

281 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

284 
	#__ª°ri˘_¨r


	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/socket.h

20 #i‚def 
_SYS_SOCKET_H


21 
	#_SYS_SOCKET_H
 1

	)

23 
	~<„©uªs.h
>

25 
	g__BEGIN_DECLS


27 
	~<sys/uio.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

35 
	~<bôs/sockë.h
>

37 #ifde‡
__USE_BSD


40 
	sosockaddr


42 
	mß_Ámûy
;

43 
	mß_d©a
[14];

51 
	mSHUT_RD
 = 0,

52 
	#SHUT_RD
 
SHUT_RD


	)

53 
	mSHUT_WR
,

54 
	#SHUT_WR
 
SHUT_WR


	)

55 
	mSHUT_RDWR


56 
	#SHUT_RDWR
 
SHUT_RDWR


	)

65 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


66 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

67 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

71 
	#__SOCKADDR_ALLTYPES
 \

72 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

86 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

87 uni⁄ { 
	m__SOCKADDR_ALLTYPES


88 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

89 #unde‡
__SOCKADDR_ONETYPE


90 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

91 uni⁄ { 
	m__SOCKADDR_ALLTYPES


92 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

93 #unde‡
__SOCKADDR_ONETYPE


100 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

106 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

107 
__fds
[2]Ë
__THROW
;

110 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

111 
__THROW
;

114 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

115 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

124 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

128 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

129 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

136 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

143 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

150 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

151 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

152 
sockÀn_t
 
__addr_Àn
);

161 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

162 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

163 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

171 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

172 
__Êags
);

179 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

185 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

186 *
__ª°ri˘
 
__›tvÆ
,

187 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

192 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

193 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

199 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

209 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

210 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

218 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

221 #ifde‡
__USE_XOPEN2K


223 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

227 #ifde‡
__USE_MISC


231 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

234 
__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__exãnsi⁄__


30 
__ölöe
 
	$gnu_dev_maj‹
 (
__dev
)

31 
__THROW
;

32 
__exãnsi⁄__


33 
__ölöe
 
	$gnu_dev_mö‹
 (
__dev
)

34 
__THROW
;

35 
__exãnsi⁄__


36 
__ölöe
 
	$gnu_dev_makedev
 (
__maj‹
,

37 
__mö‹
)

38 
__THROW
;

40 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

41 
__exãnsi⁄__
 
__ölöe
 

42 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

44  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

45 
	}
}

47 
__exãnsi⁄__
 
__ölöe
 

48 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

50  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

51 
	}
}

53 
__exãnsi⁄__
 
__ölöe
 

54 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

56  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

57 | (((Ë(
__mö‹
 & ~0xff)) << 12)

58 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

59 
	}
}

64 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

65 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

66 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

34 
	#__√ed_wöt_t


	)

35 
	~<°ddef.h
>

36 #i‚de‡
_WINT_T


41 
	#_WINT_T


	)

42 
	twöt_t
;

44 #ifde‡
__USE_ISOC99


45 
	$__USING_NAMESPACE_C99
(
wöt_t
)

47 
__END_NAMESPACE_C99


52 #i‚de‡
WEOF


53 
	#WEOF
 (0xffffffffu)

	)

56 #unde‡
__√ed_iswxxx


61 #i‚de‡
__iswxxx_deföed


62 
	#__iswxxx_deföed
 1

	)

64 
__BEGIN_NAMESPACE_C99


67 
	tw˘y≥_t
;

68 
__END_NAMESPACE_C99


70 #i‚de‡
_ISwbô


75 
	~<ídün.h
>

76 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


77 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

79 
	#_ISwbô
(
bô
) \

80 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

81 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

82 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

83 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

88 
__ISwuµî
 = 0,

89 
__ISwlowî
 = 1,

90 
__ISwÆpha
 = 2,

91 
__ISwdigô
 = 3,

92 
__ISwxdigô
 = 4,

93 
__ISw•a˚
 = 5,

94 
__ISw¥öt
 = 6,

95 
__ISwgøph
 = 7,

96 
__ISwbœnk
 = 8,

97 
__ISw˙ål
 = 9,

98 
__ISwpun˘
 = 10,

99 
__ISwÆnum
 = 11,

101 
_ISwuµî
 = 
	`_ISwbô
 (
__ISwuµî
),

102 
_ISwlowî
 = 
	`_ISwbô
 (
__ISwlowî
),

103 
_ISwÆpha
 = 
	`_ISwbô
 (
__ISwÆpha
),

104 
_ISwdigô
 = 
	`_ISwbô
 (
__ISwdigô
),

105 
_ISwxdigô
 = 
	`_ISwbô
 (
__ISwxdigô
),

106 
_ISw•a˚
 = 
	`_ISwbô
 (
__ISw•a˚
),

107 
_ISw¥öt
 = 
	`_ISwbô
 (
__ISw¥öt
),

108 
_ISwgøph
 = 
	`_ISwbô
 (
__ISwgøph
),

109 
_ISwbœnk
 = 
	`_ISwbô
 (
__ISwbœnk
),

110 
_ISw˙ål
 = 
	`_ISwbô
 (
__ISw˙ål
),

111 
_ISwpun˘
 = 
	`_ISwbô
 (
__ISwpun˘
),

112 
_ISwÆnum
 = 
	`_ISwbô
 (
__ISwÆnum
)

117 
__BEGIN_DECLS


119 
__BEGIN_NAMESPACE_C99


126 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

132 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

135 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

139 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

143 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

148 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

161 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

166 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

176 #ifde‡
__USE_ISOC99


177 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

186 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

190 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

191 
__END_NAMESPACE_C99


198 
__BEGIN_NAMESPACE_C99


201 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

202 
__END_NAMESPACE_C99


203 #ifde‡
__USE_GNU


204 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

207 
__BEGIN_NAMESPACE_C99


209 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

212 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

213 
__END_NAMESPACE_C99


215 
__END_DECLS


222 #ifde‡
_WCTYPE_H


228 
__BEGIN_DECLS


230 
__BEGIN_NAMESPACE_C99


233 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

236 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

237 
__END_NAMESPACE_C99


239 #ifde‡
__USE_GNU


241 
	~<xloˇÀ.h
>

245 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

251 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

254 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

258 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

262 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

267 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

290 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

295 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

299 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

300 
__THROW
;

304 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

305 
__THROW
;

313 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

316 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

320 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

321 
__THROW
;

324 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

325 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

329 
__END_DECLS


	@/usr/include/asm/errno.h

5 #ifde‡
__x86_64__


6 
	~<asm-x86_64/î∫o.h
>

8 
	~<asm-i486/î∫o.h
>

	@/usr/include/asm/sigcontext.h

5 #ifde‡
__x86_64__


6 
	~<asm-x86_64/sigc⁄ãxt.h
>

8 
	~<asm-i486/sigc⁄ãxt.h
>

	@/usr/include/asm/socket.h

5 #ifde‡
__x86_64__


6 
	~<asm-x86_64/sockë.h
>

8 
	~<asm-i486/sockë.h
>

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

26 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


27 
	~<löuxthªads/öã∫Æs.h
>

31 #i‡
deföed
(
_LIBC
Ë|| deföed(
_IO_MTSAFE_IO
)

32 
±hªad_muãx_t
 
	t__libc_lock_t
;

33 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

34 #ifde‡
__USE_UNIX98


35 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

37 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

39 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

41 
__libc_lock_›aque__
 
	t__libc_lock_t
;

42 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

43 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

47 
±hªad_key_t
 
	t__libc_key_t
;

56 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_t
 
NAME
;

	)

58 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

59 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

60 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

61 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

62 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

63 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

74 #ifde‡
__LT_INITIALIZER_NOT_ZERO


75 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_lock_t
 
NAME
;

	)

82 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

83 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

87 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

88 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

89 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

90 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

92 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

93 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

94 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

95 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

97 #i‡
deföed
 
_LIBC
 && deföed 
IS_IN_lib±hªad


98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
ËFUNC 
	)
ARGS

100 #i‡
deföed
 
__PIC__
 || (deföed 
_LIBC
 && deföed 
SHARED
)

101 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

102 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

103 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

105 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

106 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

109 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc
 && deföed 
SHARED


110 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
) \

111 ({
	`__buûtö_ex≥˘
 (
__libc_±hªad_fun˘i⁄s
.
±r_
##
FUNC
 !
NULL
, 0) \

112 ? 
__libc_±hªad_fun˘i⁄s
.
±r_
##
FUNC
 
ARGS
 : 
ELSE
; })

	)

114 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

119 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc
 && deföed 
SHARED


120 
	#__libc_lock_öô
(
NAME
) \

122 (
NAME
).
__m_cou¡
 = 0; \

123 (
NAME
).
__m_ow√r
 = 
NULL
; \

124 (
NAME
).
__m_köd
 = 
PTHREAD_MUTEX_TIMED_NP
; \

125 (
NAME
).
__m_lock
.
__°©us
 = 0; \

126 (
NAME
).
__m_lock
.
__•ölock
 = 
__LT_SPINLOCK_INIT
; \

127 0; })

	)

129 
	#__libc_lock_öô
(
NAME
) \

130 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

132 
	#__libc_rwlock_öô
(
NAME
) \

133 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

136 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc
 && deföed 
SHARED


137 
	#__libc_lock_öô_ªcursive
(
NAME
) \

139 (
NAME
).
muãx
.
__m_cou¡
 = 0; \

140 (
NAME
).
muãx
.
__m_ow√r
 = 
NULL
; \

141 (
NAME
).
muãx
.
__m_köd
 = 
PTHREAD_MUTEX_RECURSIVE_NP
; \

142 (
NAME
).
muãx
.
__m_lock
.
__°©us
 = 0; \

143 (
NAME
).
muãx
.
__m_lock
.
__•ölock
 = 
__LT_SPINLOCK_INIT
; \

144 0; })

	)

146 
	#__libc_lock_öô_ªcursive
(
NAME
) \

148 i‡(
__±hªad_muãx_öô
 !
NULL
) \

150 
±hªad_muãx©å_t
 
__©å
; \

151 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

152 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

153 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

154 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

156 } 0);

	)

158 
	#__πld_lock_öô_ªcursive
(
NAME
) \

159 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

164 
	#__libc_lock_föi
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

166 
	#__libc_rwlock_föi
(
NAME
) \

167 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

170 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

171 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

174 
	#__libc_lock_lock
(
NAME
) \

175 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

176 
	#__libc_rwlock_rdlock
(
NAME
) \

177 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

178 
	#__libc_rwlock_wæock
(
NAME
) \

179 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

182 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

185 
	#__libc_lock_åylock
(
NAME
) \

186 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

187 
	#__libc_rwlock_åyrdlock
(
NAME
) \

188 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

189 
	#__libc_rwlock_åywæock
(
NAME
) \

190 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

193 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

194 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

195 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

198 
	#__libc_lock_u∆ock
(
NAME
) \

199 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

200 
	#__libc_rwlock_u∆ock
(
NAME
) \

201 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

204 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

206 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


207 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

208 ++((
±hªad_muãx_t
 *)(
lock
))->
__m_cou¡
;

	)

210 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

211 --((
±hªad_muãx_t
 *)(
lock
))->
__m_cou¡
;

	)

213 
	#__πld_lock_lock_ªcursive
(
NAME
) \

214 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

216 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

217 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

219 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

220 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

224 #i‡
PTHREAD_ONCE_INIT
 == 0

227 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

228 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

230 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

231 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

235 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

237 i‡(
__±hªad_⁄˚
 !
NULL
) \

238 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

239 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

240 
	`INIT_FUNCTION
 (); \

241 (
ONCE_CONTROL
) = 2; \

243 } 0)

	)

247 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

248 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

249 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

250 i‡(
_avaû
) { \

251 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

252 }

	)

255 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

256 i‡(
_avaû
) { \

257 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

259 }

	)

262 
	#__libc_˛ónup_íd
(
DOIT
) \

263 i‡(
_avaû
) { \

264 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

265 }

	)

267 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

268 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

269 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

271 
	#__libc_˛ónup_p›
(
execuã
) \

272 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

273 }

	)

276 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

277 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

280 
	#__libc_gë•ecific
(
KEY
) \

281 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

284 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

285 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

289 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

290 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

295 
__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

296 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

298 
__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

300 
__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

302 
__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

304 
__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

306 
__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

308 
__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

310 
__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

311 
__köd
);

313 #ifde‡
__USE_UNIX98


314 
__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

315 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

317 
__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

319 
__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

321 
__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

323 
__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

325 
__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

327 
__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

330 
__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

331 (*
__de°r_fun˘i⁄
) (*));

333 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

334 
__c⁄°
 *
__poöãr
);

336 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

338 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

339 (*
__öô_routöe
) ());

341 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

342 (*
__∑ª¡
) (),

343 (*
__chûd
) ());

349 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


350 #ifde‡
wók_exã∫


351 #i‡
_LIBC


352 
	~<bp-sym.h
>

354 
	#BP_SYM
 (
sym
Ë
	)
sym

356 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

357 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

358 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

359 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

360 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

361 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

362 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

363 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

364 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

365 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

366 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

367 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

368 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

369 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

370 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

371 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

372 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

373 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

374 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

375 
	$wók_exã∫
 (
__±hªad_öôülize
)

376 
	$wók_exã∫
 (
__±hªad_©f‹k
)

377 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push
))

378 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›
))

379 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

380 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

382 #¥agm®
wók
 
__±hªad_muãx_öô


383 #¥agm®
wók
 
__±hªad_muãx_de°roy


384 #¥agm®
wók
 
__±hªad_muãx_lock


385 #¥agm®
wók
 
__±hªad_muãx_åylock


386 #¥agm®
wók
 
__±hªad_muãx_u∆ock


387 #¥agm®
wók
 
__±hªad_muãx©å_öô


388 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


389 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


390 #¥agm®
wók
 
__±hªad_rwlock_de°roy


391 #¥agm®
wók
 
__±hªad_rwlock_rdlock


392 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


393 #¥agm®
wók
 
__±hªad_rwlock_wæock


394 #¥agm®
wók
 
__±hªad_rwlock_åywæock


395 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


396 #¥agm®
wók
 
__±hªad_key_¸óã


397 #¥agm®
wók
 
__±hªad_£t•ecific


398 #¥agm®
wók
 
__±hªad_gë•ecific


399 #¥agm®
wók
 
__±hªad_⁄˚


400 #¥agm®
wók
 
__±hªad_öôülize


401 #¥agm®
wók
 
__±hªad_©f‹k


402 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


403 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


404 #¥agm®
wók
 
_±hªad_˛ónup_push


405 #¥agm®
wók
 
_±hªad_˛ónup_p›


411 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

26 
	#__FD_ZERO
(
fd•
) \

28 
__d0
, 
__d1
; \

29 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

30 : "=c" (
__d0
), "=D" (
__d1
) \

31 : "a" (0), "0" ( (
fd_£t
) \

32 /  (
__fd_mask
)), \

33 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

35 } 0)

	)

37 
	#__FD_SET
(
fd
, 
fd•
) \

38 
__asm__
 
	`__vﬁ©ûe__
 ("btsl %1,%0" \

39 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

40 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

41 : "cc","mem‹y")

	)

42 
	#__FD_CLR
(
fd
, 
fd•
) \

43 
__asm__
 
	`__vﬁ©ûe__
 ("btrl %1,%0" \

44 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

45 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

46 : "cc","mem‹y")

	)

47 
	#__FD_ISSET
(
fd
, 
fd•
) \

48 (
__exãnsi⁄__
 \

49 ({
__ªsu…
; \

50 
__asm__
 
	`__vﬁ©ûe__
 ("btl %1,%2 ; setcb %b0" \

51 : "=q" (
__ªsu…
) \

52 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

53 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

55 
__ªsu…
; }))

	)

61 
	#__FD_ZERO
(
£t
) \

63 
__i
; \

64 
fd_£t
 *
__¨r
 = (
£t
); \

65 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

66 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

67 } 0)

	)

68 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

69 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

70 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

63 
	g__gc⁄v_°ï
;

64 
	g__gc⁄v_°ï_d©a
;

65 
	g__gc⁄v_lﬂded_obje˘
;

66 
	g__gc⁄v_å™s_d©a
;

70 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

71 
	t__c⁄°
 **, __const *,

72 **, 
	tsize_t
 *, , );

75 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

78 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

79 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

83 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

84 
	t__gc⁄v_°ï_d©a
 *, *,

85 
	t__c⁄°
 *,

86 
	t__c⁄°
 **,

87 
	t__c⁄°
 *, **,

88 
	tsize_t
 *);

91 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

92 
	t__c⁄°
 *,

96 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

97 
	tsize_t
 *);

100 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

101 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

103 
	s__gc⁄v_å™s_d©a


106 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

107 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

108 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

109 *
__d©a
;

110 
__gc⁄v_å™s_d©a
 *
__√xt
;

115 
	s__gc⁄v_°ï


117 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

118 
__c⁄°
 *
__mod«me
;

120 
__cou¡î
;

122 *
__‰om_«me
;

123 *
__to_«me
;

125 
__gc⁄v_f˘
 
__f˘
;

126 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

127 
__gc⁄v_öô_f˘
 
__öô_f˘
;

128 
__gc⁄v_íd_f˘
 
__íd_f˘
;

132 
__mö_√eded_‰om
;

133 
__max_√eded_‰om
;

134 
__mö_√eded_to
;

135 
__max_√eded_to
;

138 
__°©eful
;

140 *
__d©a
;

145 
	s__gc⁄v_°ï_d©a


147 *
__outbuf
;

148 *
__outbu„nd
;

152 
__Êags
;

156 
__övoˇti⁄_cou¡î
;

160 
__öã∫Æ_u£
;

162 
__mb°©e_t
 *
__°©ï
;

163 
__mb°©e_t
 
__°©e
;

167 
__gc⁄v_å™s_d©a
 *
__å™s
;

172 
	s__gc⁄v_öfo


174 
size_t
 
__n°ïs
;

175 
__gc⁄v_°ï
 *
__°ïs
;

176 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

177 } *
	t__gc⁄v_t
;

	@/usr/include/limits.h

23 #i‚de‡
_LIBC_LIMITS_H_


24 
	#_LIBC_LIMITS_H_
 1

	)

26 
	~<„©uªs.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

129 #ifde‡
__USE_ISOC99


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 
LONG_LONG_MIN


	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
LONG_LONG_MAX


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 
ULONG_LONG_MAX


	)

142 #ifdef 
__USE_POSIX


144 
	~<bôs/posix1_lim.h
>

147 #ifdef 
__USE_POSIX2


148 
	~<bôs/posix2_lim.h
>

151 #ifdef 
__USE_XOPEN


152 
	~<bôs/x›í_lim.h
>

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

50 
ssize_t
 
wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

52 
	g__END_DECLS


	@/usr/include/asm-i486/errno.h

1 #i‚de‡
_I386_ERRNO_H


2 
	#_I386_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-i486/sigcontext.h

1 #i‚de‡
_ASMi386_SIGCONTEXT_H


2 
	#_ASMi386_SIGCONTEXT_H


	)

4 
	~<löux/compûî.h
>

20 
	s_Âªg
 {

21 
	msignifiˇnd
[4];

22 
	mexp⁄ít
;

25 
	s_Âxªg
 {

26 
	msignifiˇnd
[4];

27 
	mexp⁄ít
;

28 
	m∑ddög
[3];

31 
	s_xmmªg
 {

32 
	mñemít
[4];

35 
	s_Â°©e
 {

37 
	mcw
;

38 
	msw
;

39 
	mèg
;

40 
	mùoff
;

41 
	mcs£l
;

42 
	md©aoff
;

43 
	md©a£l
;

44 
_Âªg
 
	m_°
[8];

45 
	m°©us
;

46 
	mmagic
;

49 
	m_fx§_ív
[6];

50 
	mmxc§
;

51 
	mª£rved
;

52 
_Âxªg
 
	m_fx§_°
[8];

53 
_xmmªg
 
	m_xmm
[8];

54 
	m∑ddög
[56];

57 
	#X86_FXSR_MAGIC
 0x0000

	)

59 
	ssigc⁄ãxt
 {

60 
	mgs
, 
	m__gsh
;

61 
	mfs
, 
	m__fsh
;

62 
	mes
, 
	m__esh
;

63 
	mds
, 
	m__dsh
;

64 
	medi
;

65 
	mesi
;

66 
	mebp
;

67 
	me•
;

68 
	mebx
;

69 
	medx
;

70 
	mecx
;

71 
	móx
;

72 
	må≠no
;

73 
	mîr
;

74 
	meù
;

75 
	mcs
, 
	m__csh
;

76 
	meÊags
;

77 
	me•_©_sig«l
;

78 
	mss
, 
	m__ssh
;

79 
_Â°©e
 
__u£r
 * 
	mÂ°©e
;

80 
	mﬁdmask
;

81 
	m¸2
;

	@/usr/include/asm-i486/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

	@/usr/include/asm-x86_64/errno.h

1 #i‚de‡
_X8664_ERRNO_H


2 
	#_X8664_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-x86_64/sigcontext.h

1 #i‚de‡
_ASM_X86_64_SIGCONTEXT_H


2 
	#_ASM_X86_64_SIGCONTEXT_H


	)

4 
	~<asm/ty≥s.h
>

5 
	~<löux/compûî.h
>

10 
	s_Â°©e
 {

11 
__u16
 
	mcwd
;

12 
__u16
 
	mswd
;

13 
__u16
 
	mtwd
;

14 
__u16
 
	mf›
;

15 
__u64
 
	mrù
;

16 
__u64
 
	mrdp
;

17 
__u32
 
	mmxc§
;

18 
__u32
 
	mmxc§_mask
;

19 
__u32
 
	m°_•a˚
[32];

20 
__u32
 
	mxmm_•a˚
[64];

21 
__u32
 
	mª£rved2
[24];

24 
	ssigc⁄ãxt
 {

25 
	mr8
;

26 
	mr9
;

27 
	mr10
;

28 
	mr11
;

29 
	mr12
;

30 
	mr13
;

31 
	mr14
;

32 
	mr15
;

33 
	mrdi
;

34 
	mrsi
;

35 
	mrbp
;

36 
	mrbx
;

37 
	mrdx
;

38 
	møx
;

39 
	mrcx
;

40 
	mr•
;

41 
	mrù
;

42 
	meÊags
;

43 
	mcs
;

44 
	mgs
;

45 
	mfs
;

46 
	m__∑d0
;

47 
	mîr
;

48 
	må≠no
;

49 
	mﬁdmask
;

50 
	m¸2
;

51 
_Â°©e
 
__u£r
 *
	mÂ°©e
;

52 
	mª£rved1
[8];

	@/usr/include/asm-x86_64/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/uio.h

19 #i‚de‡
_SYS_UIO_H


24 
	~<sys/ty≥s.h
>

38 
	#UIO_MAXIOV
 1024

	)

42 
	siovec


44 *
	miov_ba£
;

45 
size_t
 
	miov_Àn
;

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

	@/usr/include/asm/sockios.h

5 #ifde‡
__x86_64__


6 
	~<asm-x86_64/sockios.h
>

8 
	~<asm-i486/sockios.h
>

	@/usr/include/asm/types.h

5 #ifde‡
__x86_64__


6 
	~<asm-x86_64/ty≥s.h
>

8 
	~<asm-i486/ty≥s.h
>

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 
	#PTHREAD_THREADS_MAX
 16384

	)

71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#TIMER_MAX
 256

	)

80 
	#DELAYTIMER_MAX
 2147483647

	)

83 
	#TTY_NAME_MAX
 32

	)

86 
	#LOGIN_NAME_MAX
 256

	)

89 
	#HOST_NAME_MAX
 64

	)

92 
	#MQ_PRIO_MAX
 32768

	)

	@/usr/include/linux/compiler.h

1 #i‚de‡
__LINUX_COMPILER_H


2 
	#__LINUX_COMPILER_H


	)

4 #i‚de‡
__ASSEMBLY__


6 #ifde‡
__CHECKER__


7 
	#__u£r
 
	`__©åibuã__
((
nodîef
, 
	`addªss_•a˚
(1)))

	)

8 
	#__kî√l


	)

9 
	#__ß„
 
	`__©åibuã__
((
ß„
))

	)

10 
	#__f‹˚
 
	`__©åibuã__
((
f‹˚
))

	)

11 
	#__noˇ°
 
	`__©åibuã__
((
noˇ°
))

	)

12 
	#__iomem
 
	`__©åibuã__
((
nodîef
, 
	`addªss_•a˚
(2)))

	)

13 
	#__acquúes
(
x
Ë
	`__©åibuã__
((
	`c⁄ãxt
(0,1)))

	)

14 
	#__ªÀa£s
(
x
Ë
	`__©åibuã__
((
	`c⁄ãxt
(1,0)))

	)

15 
	#__acquúe
(
x
Ë
	`__c⁄ãxt__
(1)

	)

16 
	#__ªÀa£
(
x
Ë
	`__c⁄ãxt__
(-1)

	)

17 
	#__c⁄d_lock
(
x
Ë((xË? ({ 
	`__c⁄ãxt__
(1); 1; }Ë: 0)

	)

18 
__chk_u£r_±r
(
__u£r
 *);

19 
__chk_io_±r
(
__iomem
 *);

21 
	#__u£r


	)

22 
	#__kî√l


	)

23 
	#__ß„


	)

24 
	#__f‹˚


	)

25 
	#__noˇ°


	)

26 
	#__iomem


	)

27 
	#__chk_u£r_±r
(
x
Ë()0

	)

28 
	#__chk_io_±r
(
x
Ë()0

	)

29 #i‡!
deföed
(
__STRICT_ANSI__
)

30 
	#__buûtö_w¨nög
(
x
, 
y
...Ë(1)

	)

32 
	#__acquúes
(
x
)

	)

33 
	#__ªÀa£s
(
x
)

	)

34 
	#__acquúe
(
x
Ë()0

	)

35 
	#__ªÀa£
(
x
Ë()0

	)

36 
	#__c⁄d_lock
(
x
Ë(x)

	)

39 #i‡!
deföed
(
__KERNEL__
)

44 
	~<sys/cdefs.h
>

45 
	#__dïªˇãd


	)

48 #ifde‡
__KERNEL__


50 #i‡
__GNUC__
 > 4

51 #îr‹ 
no
 
compûî
-
gcc
.
h
 
fûe
 
this
 gc¯
vîsi⁄


52 #ñi‡
__GNUC__
 == 4

53 
	~<löux/compûî-gcc4.h
>

54 #ñi‡
__GNUC__
 == 3

55 
	~<löux/compûî-gcc3.h
>

57 #îr‹ 
S‹ry
, 
your
 
compûî
 
is
 
too
 
ﬁd
/
nŸ
 
ªcognized
.

63 #ifde‡
__INTEL_COMPILER


64 
	~<löux/compûî-öãl.h
>

73 
	#likñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

74 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

77 #i‚de‡
b¨rõr


78 
	#b¨rõr
(Ë
	`__mem‹y_b¨rõr
()

	)

81 #i‚de‡
RELOC_HIDE


82 
	#RELOC_HIDE
(
±r
, 
off
) \

83 ({ 
__±r
; \

84 
__±r
 = (Ë(
±r
); \

85 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

92 #ifde‡
__KERNEL__


99 #i‚de‡
__dïªˇãd


100 
	#__dïªˇãd


	)

103 #ifde‡
MODULE


104 
	#__dïªˇãd_f‹_moduÀs
 
__dïªˇãd


	)

106 
	#__dïªˇãd_f‹_moduÀs


	)

109 #i‚de‡
__mu°_check


110 
	#__mu°_check


	)

124 #i‚de‡
__©åibuã_u£d__


125 
	#__©åibuã_u£d__


	)

138 #i‚de‡
__©åibuã_puª__


139 
	#__©åibuã_puª__


	)

142 #i‚de‡
noölöe


143 
	#noölöe


	)

146 #i‚de‡
__Æways_ölöe


147 
	#__Æways_ölöe
 
ölöe


	)

166 #i‚de‡
__©åibuã_c⁄°__


167 
	#__©åibuã_c⁄°__


	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-i486/sockios.h

1 #i‚de‡
__ARCH_I386_SOCKIOS__


2 
	#__ARCH_I386_SOCKIOS__


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

	@/usr/include/asm-i486/types.h

1 #i‚de‡
_I386_TYPES_H


2 
	#_I386_TYPES_H


	)

4 #i‚de‡
__ASSEMBLY__


6 
	tumode_t
;

13 
__sig√d__
 
	t__s8
;

14 
	t__u8
;

16 
__sig√d__
 
	t__s16
;

17 
	t__u16
;

19 
__sig√d__
 
	t__s32
;

20 
	t__u32
;

22 #i‡
deföed
(
__GNUC__
)

23 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

24 
__exãnsi⁄__
 
	t__u64
;

32 #ifde‡
__KERNEL__


34 
	#BITS_PER_LONG
 32

	)

36 #i‚de‡
__ASSEMBLY__


39 sig√d 
	ts8
;

40 
	tu8
;

42 sig√d 
	ts16
;

43 
	tu16
;

45 sig√d 
	ts32
;

46 
	tu32
;

48 sig√d 
	ts64
;

49 
	tu64
;

53 #ifde‡
CONFIG_HIGHMEM64G


54 
u64
 
	tdma_addr_t
;

56 
u32
 
	tdma_addr_t
;

58 
u64
 
	tdma64_addr_t
;

60 #ifde‡
CONFIG_LBD


61 
u64
 
	t£˘‹_t
;

62 
	#HAVE_SECTOR_T


	)

65 #ifde‡
CONFIG_LSF


66 
u64
 
	tblk˙t_t
;

67 
	#HAVE_BLKCNT_T


	)

	@/usr/include/asm-x86_64/sockios.h

1 #i‚de‡
__ARCH_X8664_SOCKIOS__


2 
	#__ARCH_X8664_SOCKIOS__


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

	@/usr/include/asm-x86_64/types.h

1 #i‚de‡
_X86_64_TYPES_H


2 
	#_X86_64_TYPES_H


	)

4 #i‚de‡
__ASSEMBLY__


6 
	tumode_t
;

13 
__sig√d__
 
	t__s8
;

14 
	t__u8
;

16 
__sig√d__
 
	t__s16
;

17 
	t__u16
;

19 
__sig√d__
 
	t__s32
;

20 
	t__u32
;

22 #i‡
deföed
(
__GNUC__
)

23 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

24 
__exãnsi⁄__
 
	t__u64
;

32 #ifde‡
__KERNEL__


34 
	#BITS_PER_LONG
 64

	)

36 #i‚de‡
__ASSEMBLY__


38 sig√d 
	ts8
;

39 
	tu8
;

41 sig√d 
	ts16
;

42 
	tu16
;

44 sig√d 
	ts32
;

45 
	tu32
;

47 sig√d 
	ts64
;

48 
	tu64
;

50 
u64
 
	tdma64_addr_t
;

51 
u64
 
	tdma_addr_t
;

53 
u64
 
	t£˘‹_t
;

54 
	#HAVE_SECTOR_T


	)

	@/usr/include/linux/compiler-gcc3.h

4 
	~<löux/compûî-gcc.h
>

6 #i‡
__GNUC_MINOR__
 >= 3

7 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__u£d__
))

	)

9 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__unu£d__
))

	)

12 #i‡
__GNUC_MINOR__
 >= 4

13 
	#__mu°_check
 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
))

	)

16 
	#__Æways_ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

	@/usr/include/linux/compiler-gcc4.h

4 
	~<löux/compûî-gcc.h
>

6 #ifde‡
CONFIG_FORCED_INLINING


7 #unde‡
ölöe


8 #unde‡
__ölöe__


9 #unde‡
__ölöe


10 
	#ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

11 
	#__ölöe__
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

12 
	#__ölöe
 
__ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

15 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__u£d__
))

	)

16 
	#__mu°_check
 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
))

	)

17 
	#__compûî_off£tof
(
a
,
b
Ë
	`__buûtö_off£tof
◊,b)

	)

18 
	#__Æways_ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

	@/usr/include/linux/compiler-intel.h

3 #ifde‡
__ECC


9 
	~<asm/öåösics.h
>

14 #unde‡
b¨rõr


15 #unde‡
RELOC_HIDE


17 
	#b¨rõr
(Ë
	`__mem‹y_b¨rõr
()

	)

19 
	#RELOC_HIDE
(
±r
, 
off
) \

20 ({ 
__±r
; \

21 
__±r
 = (Ë(
±r
); \

22 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#CHILD_MAX
 999

	)

9 
	#OPEN_MAX
 256

	)

10 
	#LINK_MAX
 127

	)

11 
	#MAX_CANON
 255

	)

12 
	#MAX_INPUT
 255

	)

13 
	#NAME_MAX
 255

	)

14 
	#PATH_MAX
 4096

	)

15 
	#PIPE_BUF
 4096

	)

16 
	#XATTR_NAME_MAX
 255

	)

17 
	#XATTR_SIZE_MAX
 65536

	)

18 
	#XATTR_LIST_MAX
 65536

	)

20 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/compiler-gcc.h

10 
	#b¨rõr
(Ë
__asm__
 
	`__vﬁ©ûe__
("": : :"mem‹y")

	)

20 
	#RELOC_HIDE
(
±r
, 
off
) \

21 ({ 
__±r
; \

22 
	`__asm__
 ("" : "Ù"(
__±r
Ë: "0"(
±r
)); \

23 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

26 
	#ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

27 
	#__ölöe__
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

28 
	#__ölöe
 
__ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

29 
	#__dïªˇãd
 
	`__©åibuã__
((
dïªˇãd
))

	)

30 
	#noölöe
 
	`__©åibuã__
((
noölöe
))

	)

31 
	#__©åibuã_puª__
 
	`__©åibuã__
((
puª
))

	)

32 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
((
__c⁄°__
))

	)

	@
1
.
1
/usr/include
128
3081
cbuffer.c
cbuffer.h
fancy_display.c
fancy_display.h
ip_driver.c
ippacket.h
rtable.c
rtable.h
seq.c
seq.h
socktable.c
socktable.h
state.c
state.h
statefunc.c
statefunc.h
tcp.c
tcp.h
tcppacket.h
tcpstate.c
tcpstate.h
van_driver.c
van_driver.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/curses.h
/usr/include/errno.h
/usr/include/form.h
/usr/include/menu.h
/usr/include/panel.h
/usr/include/pthread.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/initspin.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigthread.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/eti.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/ncurses_dll.h
/usr/include/netinet/in.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/sys/types.h
/usr/include/unctrl.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/in.h
/usr/include/bits/sched.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/socket.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/wctype.h
/usr/include/asm/errno.h
/usr/include/asm/sigcontext.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/select.h
/usr/include/bits/sockaddr.h
/usr/include/gconv.h
/usr/include/limits.h
/usr/include/sys/uio.h
/usr/include/asm-i486/errno.h
/usr/include/asm-i486/sigcontext.h
/usr/include/asm-i486/socket.h
/usr/include/asm-x86_64/errno.h
/usr/include/asm-x86_64/sigcontext.h
/usr/include/asm-x86_64/socket.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/uio.h
/usr/include/bits/xopen_lim.h
/usr/include/asm-generic/errno.h
/usr/include/asm/sockios.h
/usr/include/asm/types.h
/usr/include/bits/local_lim.h
/usr/include/linux/compiler.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-i486/sockios.h
/usr/include/asm-i486/types.h
/usr/include/asm-x86_64/sockios.h
/usr/include/asm-x86_64/types.h
/usr/include/linux/compiler-gcc3.h
/usr/include/linux/compiler-gcc4.h
/usr/include/linux/compiler-intel.h
/usr/include/linux/limits.h
/usr/include/linux/compiler-gcc.h
